
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #library(snow)
> #library(e1071)
> #source("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/svm_cv_func.R")
> 
> #cl<-makeCluster(8)
> #cl<-makeSOCKcluster(c(rep("godel2",2),rep("godel3",3),rep("lebniz2",3),rep("leibniz3",2)))
> #cl<-makeSOCKcluster("godel2",2)
> 
> #.libPaths("/home/stu/kuppal3/karan_libs/Rlibs")
> library(snow)
> library(e1071)
> library(yaImpute)

Attaching package: ‘yaImpute’

The following object is masked from ‘package:e1071’:

    impute

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(bioDist)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘parallel’

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster


Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parRapply, parSapply

The following object is masked from ‘package:stats’:

    xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, as.vector, cbind, colnames,
    do.call, duplicated, eval, evalq, Filter, Find, get, intersect,
    is.unsorted, lapply, Map, mapply, match, mget, order, paste, pmax,
    pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rep.int,
    rownames, sapply, setdiff, sort, table, tapply, union, unique,
    unlist, unsplit

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
> #library(CMA, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> 
> library(CMA)

Attaching package: ‘CMA’

The following object is masked from ‘package:pROC’:

    roc

The following object is masked from ‘package:e1071’:

    tune

> library(expm)
Loading required package: Matrix

Attaching package: ‘expm’

The following object is masked from ‘package:Matrix’:

    expm

> 
> cl<-makeCluster(20)
> #cl<-makeSOCKcluster(c(rep("godel2",20),rep("godel3",20))) #,rep("lebniz2",10),rep("leibniz3",10)))
> 
> 
> 
> #options(echo=FALSE)
> #library(e1071, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> #library(CMA, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> #library(bioDist, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> #source("/home/stu/kuppal3/Research/Genomic_imprinting/Huira/Source/PSO/svm_cv_func_10foldblindtest.R")
> 
> #source("/home/stu/kuppal3/Research/Feature_selection/Rcode/versionjuly12013/svm_cv_func.R")
> 
> #source("/home/stu/kuppal3/Research/Feature_selection/Rcode/versionjuly12013/svm_cv_v1.1.R")
> 
> 
> source("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014/svm_cv_v1.1.R")
> 
> #options(echo=FALSE)
> #library(e1071, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> #library(CMA) #, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> #library(bioDist) #, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> #source("/home/stu/kuppal3/Research/Genomic_imprinting/Huira/Source/PSO/svm_cv_func_10foldblindtest.R")
> 
> #source("/home/stu/kuppal3/Research/Feature_selection/performPSOnominalheart_regression.R")
> #source("/home/stu/kuppal3/Research/Feature_selection/performCMA_consensusheart_regression.R")
> 
> #source("/home/stu/kuppal3/Research/Heart_data/regression/performPSOnominalheart_regression.R")
> #source("performPSOnominallung_regression_factors_oct242010.R")
> #source("/home/stu/kuppal3/Research/Heart_data/regression/performCMA_consensusheart_regression.R")
> 
> #source("/home/stu/kuppal3/Research/Feature_selection/regression/perform_PSO_oct242010.R")
> #source("/home/stu/kuppal3/Research/Feature_selection/regression/perform_PSO_nov192010.R")
> #source("/home/stu/kuppal3/Research/Feature_selection/regression/perform_PSO_nov192010.R")
> 
> #source("/home/stu/kuppal3/Research/Feature_selection/regression/perform_PSO_nov192010.R")
> #source("/home/stu/kuppal3/Research/Feature_selection/performPSOnominal_tenfold_regression.R")
> #source("/home/stu/kuppal3/Research/Feature_selection/preprocessdata_regression.R")
> 
> 
> #source("/home/stu/kuppal3/Research/Feature_selection/performCMA_consensus_tenfold_ber_nominal_lungheart_feb242011.R")
> #source("/home/stu/kuppal3/Research/Feature_selection/performCMA_consensus_tenfold_ber_nominal_lungheart_train_test_feb282011.R")
> 
> #source("/home/stu/kuppal3/Research/Feature_selection/
> 
> #source("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014/performCMA_consensus_tenfold_ber_nominal_lungheart_train_test_sep52013_backward.R")
> 
> source("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014/performCMA_consensus_tenfold_ber_nominal_lungheart_train_test_nov172014_backward.R")
> 
> 
> #source("performCMA_consensus_tenfold_ber_nominal_lungheart_train_test_sep192012_backward.R")
> #datafile<-read.csv("/home/stu/kuppal3/Research/Heart_data/data_nominal.csv", na.strings="", sep=",", header=TRUE)
> 
> #datafile<-read.csv("/home/stu/kuppal3/Research/Lung_cancer_sequences/Data_may172009/orderednominal/luca_no_missing_1056feats_nominal_ordered_events.csv", na.strings="", sep=",", header=TRUE)
> #datafile<-read.csv("/home/stu/kuppal3/Research/Lung_cancer_sequences/Data_may172009/count_lung_cancer_len1to8_patterns_normbylengthmult1000_withevents.csv", na.strings="", sep=",", header=TRUE)
> 
> #outloc<-"/home/stu/kuppal3/Research/Lung_cancer_sequences/Data_may172009/regression/PSO_reg_results/itr2/"
> 
> #datafile=read.csv("/home/stu/kuppal3/Research/Lung_cancer_sequences/Data_may172009/LuCa_RLGS_Features_modified_051409_update_withevents.csv", sep=",", header=TRUE)
> 
> #outloc<-"/home/stu/kuppal3/Research/Heart_data/Output/CMA_PSO_results/itr4_ms_parallel_IMT/"
> 
> #traind<-read.csv("/home/stu/kuppal3/Research/Feature_selection/Datasets/ARCENE/arcene_train.data")
> #testd<-read.csv("/home/stu/kuppal3/Research/Feature_selection/Datasets/ARCENE/arcene_valid.data")
> if(FALSE){
+ trainy<-read.csv("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Datasets/ARCENE/arcene_train.labels", header=FALSE)
+ testy<-read.csv("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Datasets/ARCENE/arcene_valid.labels", header=FALSE)
+ traind<-read.table("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Datasets/ARCENE/arcene_train.data", sep=" ",header=FALSE)
+ testd<-read.table("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Datasets/ARCENE/arcene_valid.data", sep=" ",header=FALSE)
+ }
> 
> #/home/stu/kuppal3/Research/Feature_selection/Datasets/Khan_SRBCT/khan.xtest
> 
> #/home/stu/kuppal3/Research/Feature_selection/Datasets/Khan_SRBCT/khan.xtest
> trainy<-read.table("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014//khan.ytrain", header=FALSE)
> testy<-read.table("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014//khan.ytest", header=FALSE)
> 
> 
> 
> trainy<-t(trainy)
> testy<-t(testy)
> 
> #traind<-read.table("/home/stu/kuppal3/Research/Feature_selection/Datasets/Khan_SRBCT/khan.xtrain", sep=" ",header=FALSE)
> #testd<-read.table("/home/stu/kuppal3/Research/Feature_selection/Datasets/Khan_SRBCT/khan.xtest", sep=" ",header=FALSE)
> 
> 
> traind<-read.table("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014//khan.xtrain")
> 
> testd<-read.table("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014//khan.xtest")
> 
> traind<-t(traind) #[,-c(10001)]
> testd<-t(testd) #[,-c(10001)]
> traind<-cbind(trainy,traind)
> testd<-cbind(testy,testd)
> 
> traind<-na.omit(traind)
> testd<-na.omit(testd)
> 
> #outloc<-"/home/stu/kuppal3/Research/Feature_selection/Datasets/Khan_SRBCT/minpres2union_pso1000f0.25c0.25_backwardfalse_cvfoldthres0.7itr4w1/"
> #outloc<-"/home/stu/kuppal3/Research/Feature_selection/Datasets/Khan_SRBCT/itr1cmapso100_best90pctf0.3c0.1behav0.2w1_0920eval10foldVIP_minpres_all2/"
> #traind<-read.csv("/home/stu/kuppal3/Research/SpectF_data/SPECTF.train", header=FALSE)
> #outloc<-"/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Datasets/ARCENE/itr6_allmethods_minmethods1_ttestfilt_backwardsel_pso10/"
> 
> 
> traind<-read.csv("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014/SPECTF.train", header=FALSE)
> testd<-read.csv("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014/SPECTF.test", header=FALSE)
> 
> 
> outloc<-"/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014//CMAPSO100itrgmax1maxitr30fit70featw100to0.08_rankbehavf0.35l0.35c0.151itr_randtopol/"
> 
> 
> 
> #trainy<-traind[,c(1)]
> #testy<-testd[,c(1)]
> #a: Confusions
> #b: Neighbors
> #c: Global
> #d: Death
> 
> a<-c(0.25,0.25,0.25,0.25)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0.25,0.25,0.5,0)
> d<-c(0.9,0.1,0,0.1)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0,0.5,0.5,0)
> d<-c(0.9,0.1,0,0)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.2,0.3,0.4,0.1)
> c<-c(0,0.4,0.4,0.2)
> d<-c(0.9,0.1,0,0)
> 
> transition_matrix<-rbind(a,b,c,d)
> 
> 
> dir.create(outloc)
Warning message:
In dir.create(outloc) :
  '/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Rcode/versionnov2014//CMAPSO100itrgmax1maxitr30fit70featw100to0.08_rankbehavf0.35l0.35c0.151itr_randtopol' already exists
> setwd(outloc)
> temp2=t(traind)
> temp2=apply(temp2, 2, function(x){which(x=="MD")})
> temp2=unlist(temp2)
> temp2=unique(temp2)
> if(length(temp2)>1)
+ {
+ 	traind=traind[,-c(temp2)]
+ 
+ 	rm(temp2)
+ }
> 
> minfeats=2
> maxgenes=2000
> mingenes=1
> stepitr=1
> #methods=c("rf","rfe","limma","lasso","elasticnet","kruskal.test","f.test") #, "f.test", "elasticnet", "wilcox.test", "welch.test")
> #methods=c("t.test")
> #methods=methods[2]
> methods=c("rf","rfe","t.test","elasticnet","lasso")
> methods=methods[3]
> #methods=methods[5]
> #methods=c("elasticnet")
> percentTest=0.40
> kname="radial"
> maxitrs=100
> removeindex=c(0)
> norm_method="none" #"znorm"
> evalmethod="10 fold"
> classindex=1
> maxfacts=0
> percentTest=0.40
> kname="radial"
> upclasssep=1
> dclasssep=-1
> tolerance=0.1
> accWeight=1
> featWeight=0.06
> minpresent=1 #round(0.6*length(methods))
> maxfeats=1000 #dim(datafile)[2]-length(removeindex)-1
> maxfeatspercent=0.5
> evalmethod="CV"
> numfolds=10 #dim(traind)[1]
> CVfoldthresh=0.7
> backward.sel=TRUE
> scheme_val="one-vs-all"
> iter_learn=100
> ######PSO parameters#########
> c1=2.05
> c2=2.05
> itr=10
> globalpso_maxitr<-1
> global_max_itr=3 #(0.5)*itr
> num_part=30
> kname="radial"
> errortype="BER"
> accuracyweight=5
> featweight.max=10
> featweight.min=0.08
> k<-numfolds
> followerprob=0.35
> confusionprob=0.15
> leaderprob=0.35
> wmax<-1
> wmin<-(-1)
> behavior_reset_itr<-1 #(0.3)*itr
> maxitrreset<-5 #0.2*itr
> num_neighbors<-5
> max_num_feats<-5 #0.1*dim(traind[,-c(1)])[1]
> minselect.pct<-0.8
> bootstrap_val=FALSE
> minfitnessthresh<-50
> max_num_feats<-44
> ##################
> 
> #id<-sample(1:data_dim[1],size=percentTest*data_dim[1],replace=F)
> 
> #testm<-datafile[id,]
> 
> #ncid<-datafile[-id,]
> 
> 
> 
> maxitr<-global_max_itr
> 
> print("Stage 1: Consensus based")
[1] "Stage 1: Consensus based"
> print("Stage 1: Consensus based")
[1] "Stage 1: Consensus based"
> #CMAres<-preProcess(datafile, outloc, percentTest,norm_method,classindex, upclasssep, dclasssep, removeindex, maxfacts)
> CMAres<-performCMA(traind, testd, outloc, maxfeatspercent, minfeats, stepitr, methods, percentTest, featWeight,accWeight, kname, maxitrs, minpresent, norm_method, tolerance, classindex, upclasssep, dclasssep, removeindex, maxfacts,numfolds=k,evalmethod,CVfoldthresh,backward.sel,scheme_val,iter_learn)
[1] "classindex is "
[1] 1
[1] "dim of ncid is "
[1] 80 45
NULL
[1] 80 45
[1] "length of factcols"
[1] 0
[1] 80 44
[1] 187  44
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
[1] 1 1 1 1
Levels: 0 1
[1] "orig train matrix"
     V2 V3 V4 V5 V6 V7 V8 V9 V10 V11
[1,] 59 52 70 67 73 66 72 61  58  52
[2,] 72 62 69 67 78 82 74 65  69  63
[3,] 71 62 70 64 67 64 79 65  70  69
[4,] 69 71 70 78 61 63 67 65  59  59
[5,] 70 66 61 66 61 58 69 69  72  68
[1] "orig train matrix"
     V2 V3 V4 V5 V6 V7 V8 V9 V10 V11
[1,] 59 52 70 67 73 66 72 61  58  52
[2,] 72 62 69 67 78 82 74 65  69  63
[3,] 71 62 70 64 67 64 79 65  70  69
[4,] 69 71 70 78 61 63 67 65  59  59
[5,] 70 66 61 66 61 58 69 69  72  68
[1] 70 69 70
[1] "norm train matrix"
     V2 V3 V4 V5 V6 V7 V8 V9 V10 V11
[1,] 59 52 70 67 73 66 72 61  58  52
[2,] 72 62 69 67 78 82 74 65  69  63
[3,] 71 62 70 64 67 64 79 65  70  69
[4,] 69 71 70 78 61 63 67 65  59  59
[5,] 70 66 61 66 61 58 69 69  72  68
[1] "mean of feat 2"
[1] 67.55
[1] "sd of feat 2"
[1] 6.88403
[1] "maxnum is "
[1] 22
[1] "# of genes left after filtering:"
[1] 80 44
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
GeneSelection: iteration 11 
GeneSelection: iteration 12 
GeneSelection: iteration 13 
GeneSelection: iteration 14 
GeneSelection: iteration 15 
GeneSelection: iteration 16 
GeneSelection: iteration 17 
GeneSelection: iteration 18 
GeneSelection: iteration 19 
GeneSelection: iteration 20 
GeneSelection: iteration 21 
GeneSelection: iteration 22 
GeneSelection: iteration 23 
GeneSelection: iteration 24 
GeneSelection: iteration 25 
GeneSelection: iteration 26 
GeneSelection: iteration 27 
GeneSelection: iteration 28 
GeneSelection: iteration 29 
GeneSelection: iteration 30 
GeneSelection: iteration 31 
GeneSelection: iteration 32 
GeneSelection: iteration 33 
GeneSelection: iteration 34 
GeneSelection: iteration 35 
GeneSelection: iteration 36 
GeneSelection: iteration 37 
GeneSelection: iteration 38 
GeneSelection: iteration 39 
GeneSelection: iteration 40 
GeneSelection: iteration 41 
GeneSelection: iteration 42 
GeneSelection: iteration 43 
GeneSelection: iteration 44 
GeneSelection: iteration 45 
GeneSelection: iteration 46 
GeneSelection: iteration 47 
GeneSelection: iteration 48 
GeneSelection: iteration 49 
GeneSelection: iteration 50 
GeneSelection: iteration 51 
GeneSelection: iteration 52 
GeneSelection: iteration 53 
GeneSelection: iteration 54 
GeneSelection: iteration 55 
GeneSelection: iteration 56 
GeneSelection: iteration 57 
GeneSelection: iteration 58 
GeneSelection: iteration 59 
GeneSelection: iteration 60 
GeneSelection: iteration 61 
GeneSelection: iteration 62 
GeneSelection: iteration 63 
GeneSelection: iteration 64 
GeneSelection: iteration 65 
GeneSelection: iteration 66 
GeneSelection: iteration 67 
GeneSelection: iteration 68 
GeneSelection: iteration 69 
GeneSelection: iteration 70 
GeneSelection: iteration 71 
GeneSelection: iteration 72 
GeneSelection: iteration 73 
GeneSelection: iteration 74 
GeneSelection: iteration 75 
GeneSelection: iteration 76 
GeneSelection: iteration 77 
GeneSelection: iteration 78 
GeneSelection: iteration 79 
GeneSelection: iteration 80 
GeneSelection: iteration 81 
GeneSelection: iteration 82 
GeneSelection: iteration 83 
GeneSelection: iteration 84 
GeneSelection: iteration 85 
GeneSelection: iteration 86 
GeneSelection: iteration 87 
GeneSelection: iteration 88 
GeneSelection: iteration 89 
GeneSelection: iteration 90 
GeneSelection: iteration 91 
GeneSelection: iteration 92 
GeneSelection: iteration 93 
GeneSelection: iteration 94 
GeneSelection: iteration 95 
GeneSelection: iteration 96 
GeneSelection: iteration 97 
GeneSelection: iteration 98 
GeneSelection: iteration 99 
GeneSelection: iteration 100 
GeneSelection: iteration 101 
GeneSelection: iteration 102 
GeneSelection: iteration 103 
GeneSelection: iteration 104 
GeneSelection: iteration 105 
GeneSelection: iteration 106 
GeneSelection: iteration 107 
GeneSelection: iteration 108 
GeneSelection: iteration 109 
GeneSelection: iteration 110 
GeneSelection: iteration 111 
GeneSelection: iteration 112 
GeneSelection: iteration 113 
GeneSelection: iteration 114 
GeneSelection: iteration 115 
GeneSelection: iteration 116 
GeneSelection: iteration 117 
GeneSelection: iteration 118 
GeneSelection: iteration 119 
GeneSelection: iteration 120 
GeneSelection: iteration 121 
GeneSelection: iteration 122 
GeneSelection: iteration 123 
GeneSelection: iteration 124 
GeneSelection: iteration 125 
GeneSelection: iteration 126 
GeneSelection: iteration 127 
GeneSelection: iteration 128 
GeneSelection: iteration 129 
GeneSelection: iteration 130 
GeneSelection: iteration 131 
GeneSelection: iteration 132 
GeneSelection: iteration 133 
GeneSelection: iteration 134 
GeneSelection: iteration 135 
GeneSelection: iteration 136 
GeneSelection: iteration 137 
GeneSelection: iteration 138 
GeneSelection: iteration 139 
GeneSelection: iteration 140 
GeneSelection: iteration 141 
GeneSelection: iteration 142 
GeneSelection: iteration 143 
GeneSelection: iteration 144 
GeneSelection: iteration 145 
GeneSelection: iteration 146 
GeneSelection: iteration 147 
GeneSelection: iteration 148 
GeneSelection: iteration 149 
GeneSelection: iteration 150 
GeneSelection: iteration 151 
GeneSelection: iteration 152 
GeneSelection: iteration 153 
GeneSelection: iteration 154 
GeneSelection: iteration 155 
GeneSelection: iteration 156 
GeneSelection: iteration 157 
GeneSelection: iteration 158 
GeneSelection: iteration 159 
GeneSelection: iteration 160 
GeneSelection: iteration 161 
GeneSelection: iteration 162 
GeneSelection: iteration 163 
GeneSelection: iteration 164 
GeneSelection: iteration 165 
GeneSelection: iteration 166 
GeneSelection: iteration 167 
GeneSelection: iteration 168 
GeneSelection: iteration 169 
GeneSelection: iteration 170 
GeneSelection: iteration 171 
GeneSelection: iteration 172 
GeneSelection: iteration 173 
GeneSelection: iteration 174 
GeneSelection: iteration 175 
GeneSelection: iteration 176 
GeneSelection: iteration 177 
GeneSelection: iteration 178 
GeneSelection: iteration 179 
GeneSelection: iteration 180 
GeneSelection: iteration 181 
GeneSelection: iteration 182 
GeneSelection: iteration 183 
GeneSelection: iteration 184 
GeneSelection: iteration 185 
GeneSelection: iteration 186 
GeneSelection: iteration 187 
GeneSelection: iteration 188 
GeneSelection: iteration 189 
GeneSelection: iteration 190 
GeneSelection: iteration 191 
GeneSelection: iteration 192 
GeneSelection: iteration 193 
GeneSelection: iteration 194 
GeneSelection: iteration 195 
GeneSelection: iteration 196 
GeneSelection: iteration 197 
GeneSelection: iteration 198 
GeneSelection: iteration 199 
GeneSelection: iteration 200 
GeneSelection: iteration 201 
GeneSelection: iteration 202 
GeneSelection: iteration 203 
GeneSelection: iteration 204 
GeneSelection: iteration 205 
GeneSelection: iteration 206 
GeneSelection: iteration 207 
GeneSelection: iteration 208 
GeneSelection: iteration 209 
GeneSelection: iteration 210 
GeneSelection: iteration 211 
GeneSelection: iteration 212 
GeneSelection: iteration 213 
GeneSelection: iteration 214 
GeneSelection: iteration 215 
GeneSelection: iteration 216 
GeneSelection: iteration 217 
GeneSelection: iteration 218 
GeneSelection: iteration 219 
GeneSelection: iteration 220 
GeneSelection: iteration 221 
GeneSelection: iteration 222 
GeneSelection: iteration 223 
GeneSelection: iteration 224 
GeneSelection: iteration 225 
GeneSelection: iteration 226 
GeneSelection: iteration 227 
GeneSelection: iteration 228 
GeneSelection: iteration 229 
GeneSelection: iteration 230 
GeneSelection: iteration 231 
GeneSelection: iteration 232 
GeneSelection: iteration 233 
GeneSelection: iteration 234 
GeneSelection: iteration 235 
GeneSelection: iteration 236 
GeneSelection: iteration 237 
GeneSelection: iteration 238 
GeneSelection: iteration 239 
GeneSelection: iteration 240 
GeneSelection: iteration 241 
GeneSelection: iteration 242 
GeneSelection: iteration 243 
GeneSelection: iteration 244 
GeneSelection: iteration 245 
GeneSelection: iteration 246 
GeneSelection: iteration 247 
GeneSelection: iteration 248 
GeneSelection: iteration 249 
GeneSelection: iteration 250 
GeneSelection: iteration 251 
GeneSelection: iteration 252 
GeneSelection: iteration 253 
GeneSelection: iteration 254 
GeneSelection: iteration 255 
GeneSelection: iteration 256 
GeneSelection: iteration 257 
GeneSelection: iteration 258 
GeneSelection: iteration 259 
GeneSelection: iteration 260 
GeneSelection: iteration 261 
GeneSelection: iteration 262 
GeneSelection: iteration 263 
GeneSelection: iteration 264 
GeneSelection: iteration 265 
GeneSelection: iteration 266 
GeneSelection: iteration 267 
GeneSelection: iteration 268 
GeneSelection: iteration 269 
GeneSelection: iteration 270 
GeneSelection: iteration 271 
GeneSelection: iteration 272 
GeneSelection: iteration 273 
GeneSelection: iteration 274 
GeneSelection: iteration 275 
GeneSelection: iteration 276 
GeneSelection: iteration 277 
GeneSelection: iteration 278 
GeneSelection: iteration 279 
GeneSelection: iteration 280 
GeneSelection: iteration 281 
GeneSelection: iteration 282 
GeneSelection: iteration 283 
GeneSelection: iteration 284 
GeneSelection: iteration 285 
GeneSelection: iteration 286 
GeneSelection: iteration 287 
GeneSelection: iteration 288 
GeneSelection: iteration 289 
GeneSelection: iteration 290 
GeneSelection: iteration 291 
GeneSelection: iteration 292 
GeneSelection: iteration 293 
GeneSelection: iteration 294 
GeneSelection: iteration 295 
GeneSelection: iteration 296 
GeneSelection: iteration 297 
GeneSelection: iteration 298 
GeneSelection: iteration 299 
GeneSelection: iteration 300 
GeneSelection: iteration 301 
GeneSelection: iteration 302 
GeneSelection: iteration 303 
GeneSelection: iteration 304 
GeneSelection: iteration 305 
GeneSelection: iteration 306 
GeneSelection: iteration 307 
GeneSelection: iteration 308 
GeneSelection: iteration 309 
GeneSelection: iteration 310 
GeneSelection: iteration 311 
GeneSelection: iteration 312 
GeneSelection: iteration 313 
GeneSelection: iteration 314 
GeneSelection: iteration 315 
GeneSelection: iteration 316 
GeneSelection: iteration 317 
GeneSelection: iteration 318 
GeneSelection: iteration 319 
GeneSelection: iteration 320 
GeneSelection: iteration 321 
GeneSelection: iteration 322 
GeneSelection: iteration 323 
GeneSelection: iteration 324 
GeneSelection: iteration 325 
GeneSelection: iteration 326 
GeneSelection: iteration 327 
GeneSelection: iteration 328 
GeneSelection: iteration 329 
GeneSelection: iteration 330 
GeneSelection: iteration 331 
GeneSelection: iteration 332 
GeneSelection: iteration 333 
GeneSelection: iteration 334 
GeneSelection: iteration 335 
GeneSelection: iteration 336 
GeneSelection: iteration 337 
GeneSelection: iteration 338 
GeneSelection: iteration 339 
GeneSelection: iteration 340 
GeneSelection: iteration 341 
GeneSelection: iteration 342 
GeneSelection: iteration 343 
GeneSelection: iteration 344 
GeneSelection: iteration 345 
GeneSelection: iteration 346 
GeneSelection: iteration 347 
GeneSelection: iteration 348 
GeneSelection: iteration 349 
GeneSelection: iteration 350 
GeneSelection: iteration 351 
GeneSelection: iteration 352 
GeneSelection: iteration 353 
GeneSelection: iteration 354 
GeneSelection: iteration 355 
GeneSelection: iteration 356 
GeneSelection: iteration 357 
GeneSelection: iteration 358 
GeneSelection: iteration 359 
GeneSelection: iteration 360 
GeneSelection: iteration 361 
GeneSelection: iteration 362 
GeneSelection: iteration 363 
GeneSelection: iteration 364 
GeneSelection: iteration 365 
GeneSelection: iteration 366 
GeneSelection: iteration 367 
GeneSelection: iteration 368 
GeneSelection: iteration 369 
GeneSelection: iteration 370 
GeneSelection: iteration 371 
GeneSelection: iteration 372 
GeneSelection: iteration 373 
GeneSelection: iteration 374 
GeneSelection: iteration 375 
GeneSelection: iteration 376 
GeneSelection: iteration 377 
GeneSelection: iteration 378 
GeneSelection: iteration 379 
GeneSelection: iteration 380 
GeneSelection: iteration 381 
GeneSelection: iteration 382 
GeneSelection: iteration 383 
GeneSelection: iteration 384 
GeneSelection: iteration 385 
GeneSelection: iteration 386 
GeneSelection: iteration 387 
GeneSelection: iteration 388 
GeneSelection: iteration 389 
GeneSelection: iteration 390 
GeneSelection: iteration 391 
GeneSelection: iteration 392 
GeneSelection: iteration 393 
GeneSelection: iteration 394 
GeneSelection: iteration 395 
GeneSelection: iteration 396 
GeneSelection: iteration 397 
GeneSelection: iteration 398 
GeneSelection: iteration 399 
GeneSelection: iteration 400 
GeneSelection: iteration 401 
GeneSelection: iteration 402 
GeneSelection: iteration 403 
GeneSelection: iteration 404 
GeneSelection: iteration 405 
GeneSelection: iteration 406 
GeneSelection: iteration 407 
GeneSelection: iteration 408 
GeneSelection: iteration 409 
GeneSelection: iteration 410 
GeneSelection: iteration 411 
GeneSelection: iteration 412 
GeneSelection: iteration 413 
GeneSelection: iteration 414 
GeneSelection: iteration 415 
GeneSelection: iteration 416 
GeneSelection: iteration 417 
GeneSelection: iteration 418 
GeneSelection: iteration 419 
GeneSelection: iteration 420 
GeneSelection: iteration 421 
GeneSelection: iteration 422 
GeneSelection: iteration 423 
GeneSelection: iteration 424 
GeneSelection: iteration 425 
GeneSelection: iteration 426 
GeneSelection: iteration 427 
GeneSelection: iteration 428 
GeneSelection: iteration 429 
GeneSelection: iteration 430 
GeneSelection: iteration 431 
GeneSelection: iteration 432 
GeneSelection: iteration 433 
GeneSelection: iteration 434 
GeneSelection: iteration 435 
GeneSelection: iteration 436 
GeneSelection: iteration 437 
GeneSelection: iteration 438 
GeneSelection: iteration 439 
GeneSelection: iteration 440 
GeneSelection: iteration 441 
GeneSelection: iteration 442 
GeneSelection: iteration 443 
GeneSelection: iteration 444 
GeneSelection: iteration 445 
GeneSelection: iteration 446 
GeneSelection: iteration 447 
GeneSelection: iteration 448 
GeneSelection: iteration 449 
GeneSelection: iteration 450 
GeneSelection: iteration 451 
GeneSelection: iteration 452 
GeneSelection: iteration 453 
GeneSelection: iteration 454 
GeneSelection: iteration 455 
GeneSelection: iteration 456 
GeneSelection: iteration 457 
GeneSelection: iteration 458 
GeneSelection: iteration 459 
GeneSelection: iteration 460 
GeneSelection: iteration 461 
GeneSelection: iteration 462 
GeneSelection: iteration 463 
GeneSelection: iteration 464 
GeneSelection: iteration 465 
GeneSelection: iteration 466 
GeneSelection: iteration 467 
GeneSelection: iteration 468 
GeneSelection: iteration 469 
GeneSelection: iteration 470 
GeneSelection: iteration 471 
GeneSelection: iteration 472 
GeneSelection: iteration 473 
GeneSelection: iteration 474 
GeneSelection: iteration 475 
GeneSelection: iteration 476 
GeneSelection: iteration 477 
GeneSelection: iteration 478 
GeneSelection: iteration 479 
GeneSelection: iteration 480 
GeneSelection: iteration 481 
GeneSelection: iteration 482 
GeneSelection: iteration 483 
GeneSelection: iteration 484 
GeneSelection: iteration 485 
GeneSelection: iteration 486 
GeneSelection: iteration 487 
GeneSelection: iteration 488 
GeneSelection: iteration 489 
GeneSelection: iteration 490 
GeneSelection: iteration 491 
GeneSelection: iteration 492 
GeneSelection: iteration 493 
GeneSelection: iteration 494 
GeneSelection: iteration 495 
GeneSelection: iteration 496 
GeneSelection: iteration 497 
GeneSelection: iteration 498 
GeneSelection: iteration 499 
GeneSelection: iteration 500 
GeneSelection: iteration 501 
GeneSelection: iteration 502 
GeneSelection: iteration 503 
GeneSelection: iteration 504 
GeneSelection: iteration 505 
GeneSelection: iteration 506 
GeneSelection: iteration 507 
GeneSelection: iteration 508 
GeneSelection: iteration 509 
GeneSelection: iteration 510 
GeneSelection: iteration 511 
GeneSelection: iteration 512 
GeneSelection: iteration 513 
GeneSelection: iteration 514 
GeneSelection: iteration 515 
GeneSelection: iteration 516 
GeneSelection: iteration 517 
GeneSelection: iteration 518 
GeneSelection: iteration 519 
GeneSelection: iteration 520 
GeneSelection: iteration 521 
GeneSelection: iteration 522 
GeneSelection: iteration 523 
GeneSelection: iteration 524 
GeneSelection: iteration 525 
GeneSelection: iteration 526 
GeneSelection: iteration 527 
GeneSelection: iteration 528 
GeneSelection: iteration 529 
GeneSelection: iteration 530 
GeneSelection: iteration 531 
GeneSelection: iteration 532 
GeneSelection: iteration 533 
GeneSelection: iteration 534 
GeneSelection: iteration 535 
GeneSelection: iteration 536 
GeneSelection: iteration 537 
GeneSelection: iteration 538 
GeneSelection: iteration 539 
GeneSelection: iteration 540 
GeneSelection: iteration 541 
GeneSelection: iteration 542 
GeneSelection: iteration 543 
GeneSelection: iteration 544 
GeneSelection: iteration 545 
GeneSelection: iteration 546 
GeneSelection: iteration 547 
GeneSelection: iteration 548 
GeneSelection: iteration 549 
GeneSelection: iteration 550 
GeneSelection: iteration 551 
GeneSelection: iteration 552 
GeneSelection: iteration 553 
GeneSelection: iteration 554 
GeneSelection: iteration 555 
GeneSelection: iteration 556 
GeneSelection: iteration 557 
GeneSelection: iteration 558 
GeneSelection: iteration 559 
GeneSelection: iteration 560 
GeneSelection: iteration 561 
GeneSelection: iteration 562 
GeneSelection: iteration 563 
GeneSelection: iteration 564 
GeneSelection: iteration 565 
GeneSelection: iteration 566 
GeneSelection: iteration 567 
GeneSelection: iteration 568 
GeneSelection: iteration 569 
GeneSelection: iteration 570 
GeneSelection: iteration 571 
GeneSelection: iteration 572 
GeneSelection: iteration 573 
GeneSelection: iteration 574 
GeneSelection: iteration 575 
GeneSelection: iteration 576 
GeneSelection: iteration 577 
GeneSelection: iteration 578 
GeneSelection: iteration 579 
GeneSelection: iteration 580 
GeneSelection: iteration 581 
GeneSelection: iteration 582 
GeneSelection: iteration 583 
GeneSelection: iteration 584 
GeneSelection: iteration 585 
GeneSelection: iteration 586 
GeneSelection: iteration 587 
GeneSelection: iteration 588 
GeneSelection: iteration 589 
GeneSelection: iteration 590 
GeneSelection: iteration 591 
GeneSelection: iteration 592 
GeneSelection: iteration 593 
GeneSelection: iteration 594 
GeneSelection: iteration 595 
GeneSelection: iteration 596 
GeneSelection: iteration 597 
GeneSelection: iteration 598 
GeneSelection: iteration 599 
GeneSelection: iteration 600 
GeneSelection: iteration 601 
GeneSelection: iteration 602 
GeneSelection: iteration 603 
GeneSelection: iteration 604 
GeneSelection: iteration 605 
GeneSelection: iteration 606 
GeneSelection: iteration 607 
GeneSelection: iteration 608 
GeneSelection: iteration 609 
GeneSelection: iteration 610 
GeneSelection: iteration 611 
GeneSelection: iteration 612 
GeneSelection: iteration 613 
GeneSelection: iteration 614 
GeneSelection: iteration 615 
GeneSelection: iteration 616 
GeneSelection: iteration 617 
GeneSelection: iteration 618 
GeneSelection: iteration 619 
GeneSelection: iteration 620 
GeneSelection: iteration 621 
GeneSelection: iteration 622 
GeneSelection: iteration 623 
GeneSelection: iteration 624 
GeneSelection: iteration 625 
GeneSelection: iteration 626 
GeneSelection: iteration 627 
GeneSelection: iteration 628 
GeneSelection: iteration 629 
GeneSelection: iteration 630 
GeneSelection: iteration 631 
GeneSelection: iteration 632 
GeneSelection: iteration 633 
GeneSelection: iteration 634 
GeneSelection: iteration 635 
GeneSelection: iteration 636 
GeneSelection: iteration 637 
GeneSelection: iteration 638 
GeneSelection: iteration 639 
GeneSelection: iteration 640 
GeneSelection: iteration 641 
GeneSelection: iteration 642 
GeneSelection: iteration 643 
GeneSelection: iteration 644 
GeneSelection: iteration 645 
GeneSelection: iteration 646 
GeneSelection: iteration 647 
GeneSelection: iteration 648 
GeneSelection: iteration 649 
GeneSelection: iteration 650 
GeneSelection: iteration 651 
GeneSelection: iteration 652 
GeneSelection: iteration 653 
GeneSelection: iteration 654 
GeneSelection: iteration 655 
GeneSelection: iteration 656 
GeneSelection: iteration 657 
GeneSelection: iteration 658 
GeneSelection: iteration 659 
GeneSelection: iteration 660 
GeneSelection: iteration 661 
GeneSelection: iteration 662 
GeneSelection: iteration 663 
GeneSelection: iteration 664 
GeneSelection: iteration 665 
GeneSelection: iteration 666 
GeneSelection: iteration 667 
GeneSelection: iteration 668 
GeneSelection: iteration 669 
GeneSelection: iteration 670 
GeneSelection: iteration 671 
GeneSelection: iteration 672 
GeneSelection: iteration 673 
GeneSelection: iteration 674 
GeneSelection: iteration 675 
GeneSelection: iteration 676 
GeneSelection: iteration 677 
GeneSelection: iteration 678 
GeneSelection: iteration 679 
GeneSelection: iteration 680 
GeneSelection: iteration 681 
GeneSelection: iteration 682 
GeneSelection: iteration 683 
GeneSelection: iteration 684 
GeneSelection: iteration 685 
GeneSelection: iteration 686 
GeneSelection: iteration 687 
GeneSelection: iteration 688 
GeneSelection: iteration 689 
GeneSelection: iteration 690 
GeneSelection: iteration 691 
GeneSelection: iteration 692 
GeneSelection: iteration 693 
GeneSelection: iteration 694 
GeneSelection: iteration 695 
GeneSelection: iteration 696 
GeneSelection: iteration 697 
GeneSelection: iteration 698 
GeneSelection: iteration 699 
GeneSelection: iteration 700 
GeneSelection: iteration 701 
GeneSelection: iteration 702 
GeneSelection: iteration 703 
GeneSelection: iteration 704 
GeneSelection: iteration 705 
GeneSelection: iteration 706 
GeneSelection: iteration 707 
GeneSelection: iteration 708 
GeneSelection: iteration 709 
GeneSelection: iteration 710 
GeneSelection: iteration 711 
GeneSelection: iteration 712 
GeneSelection: iteration 713 
GeneSelection: iteration 714 
GeneSelection: iteration 715 
GeneSelection: iteration 716 
GeneSelection: iteration 717 
GeneSelection: iteration 718 
GeneSelection: iteration 719 
GeneSelection: iteration 720 
GeneSelection: iteration 721 
GeneSelection: iteration 722 
GeneSelection: iteration 723 
GeneSelection: iteration 724 
GeneSelection: iteration 725 
GeneSelection: iteration 726 
GeneSelection: iteration 727 
GeneSelection: iteration 728 
GeneSelection: iteration 729 
GeneSelection: iteration 730 
GeneSelection: iteration 731 
GeneSelection: iteration 732 
GeneSelection: iteration 733 
GeneSelection: iteration 734 
GeneSelection: iteration 735 
GeneSelection: iteration 736 
GeneSelection: iteration 737 
GeneSelection: iteration 738 
GeneSelection: iteration 739 
GeneSelection: iteration 740 
GeneSelection: iteration 741 
GeneSelection: iteration 742 
GeneSelection: iteration 743 
GeneSelection: iteration 744 
GeneSelection: iteration 745 
GeneSelection: iteration 746 
GeneSelection: iteration 747 
GeneSelection: iteration 748 
GeneSelection: iteration 749 
GeneSelection: iteration 750 
GeneSelection: iteration 751 
GeneSelection: iteration 752 
GeneSelection: iteration 753 
GeneSelection: iteration 754 
GeneSelection: iteration 755 
GeneSelection: iteration 756 
GeneSelection: iteration 757 
GeneSelection: iteration 758 
GeneSelection: iteration 759 
GeneSelection: iteration 760 
GeneSelection: iteration 761 
GeneSelection: iteration 762 
GeneSelection: iteration 763 
GeneSelection: iteration 764 
GeneSelection: iteration 765 
GeneSelection: iteration 766 
GeneSelection: iteration 767 
GeneSelection: iteration 768 
GeneSelection: iteration 769 
GeneSelection: iteration 770 
GeneSelection: iteration 771 
GeneSelection: iteration 772 
GeneSelection: iteration 773 
GeneSelection: iteration 774 
GeneSelection: iteration 775 
GeneSelection: iteration 776 
GeneSelection: iteration 777 
GeneSelection: iteration 778 
GeneSelection: iteration 779 
GeneSelection: iteration 780 
GeneSelection: iteration 781 
GeneSelection: iteration 782 
GeneSelection: iteration 783 
GeneSelection: iteration 784 
GeneSelection: iteration 785 
GeneSelection: iteration 786 
GeneSelection: iteration 787 
GeneSelection: iteration 788 
GeneSelection: iteration 789 
GeneSelection: iteration 790 
GeneSelection: iteration 791 
GeneSelection: iteration 792 
GeneSelection: iteration 793 
GeneSelection: iteration 794 
GeneSelection: iteration 795 
GeneSelection: iteration 796 
GeneSelection: iteration 797 
GeneSelection: iteration 798 
GeneSelection: iteration 799 
GeneSelection: iteration 800 
GeneSelection: iteration 801 
GeneSelection: iteration 802 
GeneSelection: iteration 803 
GeneSelection: iteration 804 
GeneSelection: iteration 805 
GeneSelection: iteration 806 
GeneSelection: iteration 807 
GeneSelection: iteration 808 
GeneSelection: iteration 809 
GeneSelection: iteration 810 
GeneSelection: iteration 811 
GeneSelection: iteration 812 
GeneSelection: iteration 813 
GeneSelection: iteration 814 
GeneSelection: iteration 815 
GeneSelection: iteration 816 
GeneSelection: iteration 817 
GeneSelection: iteration 818 
GeneSelection: iteration 819 
GeneSelection: iteration 820 
GeneSelection: iteration 821 
GeneSelection: iteration 822 
GeneSelection: iteration 823 
GeneSelection: iteration 824 
GeneSelection: iteration 825 
GeneSelection: iteration 826 
GeneSelection: iteration 827 
GeneSelection: iteration 828 
GeneSelection: iteration 829 
GeneSelection: iteration 830 
GeneSelection: iteration 831 
GeneSelection: iteration 832 
GeneSelection: iteration 833 
GeneSelection: iteration 834 
GeneSelection: iteration 835 
GeneSelection: iteration 836 
GeneSelection: iteration 837 
GeneSelection: iteration 838 
GeneSelection: iteration 839 
GeneSelection: iteration 840 
GeneSelection: iteration 841 
GeneSelection: iteration 842 
GeneSelection: iteration 843 
GeneSelection: iteration 844 
GeneSelection: iteration 845 
GeneSelection: iteration 846 
GeneSelection: iteration 847 
GeneSelection: iteration 848 
GeneSelection: iteration 849 
GeneSelection: iteration 850 
GeneSelection: iteration 851 
GeneSelection: iteration 852 
GeneSelection: iteration 853 
GeneSelection: iteration 854 
GeneSelection: iteration 855 
GeneSelection: iteration 856 
GeneSelection: iteration 857 
GeneSelection: iteration 858 
GeneSelection: iteration 859 
GeneSelection: iteration 860 
GeneSelection: iteration 861 
GeneSelection: iteration 862 
GeneSelection: iteration 863 
GeneSelection: iteration 864 
GeneSelection: iteration 865 
GeneSelection: iteration 866 
GeneSelection: iteration 867 
GeneSelection: iteration 868 
GeneSelection: iteration 869 
GeneSelection: iteration 870 
GeneSelection: iteration 871 
GeneSelection: iteration 872 
GeneSelection: iteration 873 
GeneSelection: iteration 874 
GeneSelection: iteration 875 
GeneSelection: iteration 876 
GeneSelection: iteration 877 
GeneSelection: iteration 878 
GeneSelection: iteration 879 
GeneSelection: iteration 880 
GeneSelection: iteration 881 
GeneSelection: iteration 882 
GeneSelection: iteration 883 
GeneSelection: iteration 884 
GeneSelection: iteration 885 
GeneSelection: iteration 886 
GeneSelection: iteration 887 
GeneSelection: iteration 888 
GeneSelection: iteration 889 
GeneSelection: iteration 890 
GeneSelection: iteration 891 
GeneSelection: iteration 892 
GeneSelection: iteration 893 
GeneSelection: iteration 894 
GeneSelection: iteration 895 
GeneSelection: iteration 896 
GeneSelection: iteration 897 
GeneSelection: iteration 898 
GeneSelection: iteration 899 
GeneSelection: iteration 900 
GeneSelection: iteration 901 
GeneSelection: iteration 902 
GeneSelection: iteration 903 
GeneSelection: iteration 904 
GeneSelection: iteration 905 
GeneSelection: iteration 906 
GeneSelection: iteration 907 
GeneSelection: iteration 908 
GeneSelection: iteration 909 
GeneSelection: iteration 910 
GeneSelection: iteration 911 
GeneSelection: iteration 912 
GeneSelection: iteration 913 
GeneSelection: iteration 914 
GeneSelection: iteration 915 
GeneSelection: iteration 916 
GeneSelection: iteration 917 
GeneSelection: iteration 918 
GeneSelection: iteration 919 
GeneSelection: iteration 920 
GeneSelection: iteration 921 
GeneSelection: iteration 922 
GeneSelection: iteration 923 
GeneSelection: iteration 924 
GeneSelection: iteration 925 
GeneSelection: iteration 926 
GeneSelection: iteration 927 
GeneSelection: iteration 928 
GeneSelection: iteration 929 
GeneSelection: iteration 930 
GeneSelection: iteration 931 
GeneSelection: iteration 932 
GeneSelection: iteration 933 
GeneSelection: iteration 934 
GeneSelection: iteration 935 
GeneSelection: iteration 936 
GeneSelection: iteration 937 
GeneSelection: iteration 938 
GeneSelection: iteration 939 
GeneSelection: iteration 940 
GeneSelection: iteration 941 
GeneSelection: iteration 942 
GeneSelection: iteration 943 
GeneSelection: iteration 944 
GeneSelection: iteration 945 
GeneSelection: iteration 946 
GeneSelection: iteration 947 
GeneSelection: iteration 948 
GeneSelection: iteration 949 
GeneSelection: iteration 950 
GeneSelection: iteration 951 
GeneSelection: iteration 952 
GeneSelection: iteration 953 
GeneSelection: iteration 954 
GeneSelection: iteration 955 
GeneSelection: iteration 956 
GeneSelection: iteration 957 
GeneSelection: iteration 958 
GeneSelection: iteration 959 
GeneSelection: iteration 960 
GeneSelection: iteration 961 
GeneSelection: iteration 962 
GeneSelection: iteration 963 
GeneSelection: iteration 964 
GeneSelection: iteration 965 
GeneSelection: iteration 966 
GeneSelection: iteration 967 
GeneSelection: iteration 968 
GeneSelection: iteration 969 
GeneSelection: iteration 970 
GeneSelection: iteration 971 
GeneSelection: iteration 972 
GeneSelection: iteration 973 
GeneSelection: iteration 974 
GeneSelection: iteration 975 
GeneSelection: iteration 976 
GeneSelection: iteration 977 
GeneSelection: iteration 978 
GeneSelection: iteration 979 
GeneSelection: iteration 980 
GeneSelection: iteration 981 
GeneSelection: iteration 982 
GeneSelection: iteration 983 
GeneSelection: iteration 984 
GeneSelection: iteration 985 
GeneSelection: iteration 986 
GeneSelection: iteration 987 
GeneSelection: iteration 988 
GeneSelection: iteration 989 
GeneSelection: iteration 990 
GeneSelection: iteration 991 
GeneSelection: iteration 992 
GeneSelection: iteration 993 
GeneSelection: iteration 994 
GeneSelection: iteration 995 
GeneSelection: iteration 996 
GeneSelection: iteration 997 
GeneSelection: iteration 998 
GeneSelection: iteration 999 
GeneSelection: iteration 1000 
[1] "t.test:22:80"
[1] "t.test:22:80"
[1] "t.test:21:82.5"
[1] "t.test:21:82.5"
[1] "t.test:20:77.5"
[1] "t.test:21:82.5"
[1] "t.test:19:83.75"
[1] "t.test:19:83.75"
[1] "t.test:18:81.25"
[1] "t.test:19:83.75"
[1] "t.test:17:77.5"
[1] "t.test:19:83.75"
[1] "t.test:16:80"
[1] "t.test:19:83.75"
[1] "t.test:15:80"
[1] "t.test:19:83.75"
[1] "t.test:14:81.25"
[1] "t.test:19:83.75"
[1] "t.test:13:80"
[1] "t.test:19:83.75"
[1] "t.test:12:82.5"
[1] "t.test:19:83.75"
[1] "t.test:11:83.75"
[1] "t.test:11:83.75"
[1] "t.test:10:83.75"
[1] "t.test:10:83.75"
[1] "t.test:9:76.25"
[1] "t.test:10:83.75"
[1] "t.test:8:77.5"
[1] "t.test:10:83.75"
[1] "t.test:7:76.25"
[1] "t.test:10:83.75"
[1] "t.test:6:77.5"
[1] "t.test:10:83.75"
[1] "t.test:5:77.5"
[1] "t.test:10:83.75"
[1] "t.test:4:75"
[1] "t.test:10:83.75"
[1] "t.test:3:66.25"
[1] "t.test:10:83.75"
[1] "dim of scoring matrix is "
[1] 44  1
[1] 44
[1] "bestgenelist"
 [1]  4 22 24 25 26 28 30 32 39 40
     V5 V23 V25 V26 V27 V29 V31 V33 V40 V41
[1,] 67  66  74  63  64  54  54  74  72  62
[2,] 67  78  79  74  69  70  69  70  69  73
[3,] 64  74  47  53  37  68  59  68  64  55
     V5 V23 V25 V26 V27 V29 V31 V33 V40 V41
[1,] 78  76  79  70  70  67  67  75  74  77
[2,] 71  73  72  66  60  66  64  70  69  66
[3,] 67  73  69  63  57  53  60  74  68  54
[1] "numgenes selected:10"
[1] "test acc:0.732620320855615"
[1] "test AUC acc:0.702519379844961"
[1] "10 fold train83.75"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold  0  1
         0 39  5
         1  1 35
[1] "confusion matrix test"
         test_y
pred_test   0   1
        0  10  45
        1   5 127
[1] "train acc:0.925"
[1] "confusion matrix train"
          nci_y
pred_train  0  1
         0 39  5
         1  1 35
> 
> 
> #if(FALSE)
> print("Stage 2: Selecting optimal subset using PSO")
[1] "Stage 2: Selecting optimal subset using PSO"
> #system.time(
> 
> #psores<-performPSO(trainx, testx, trainy, testy, outloc, numitrs, reinititrs, numpart, c1, c2, kname, percentTest, 0.04, fitfunc)
> 
> #psores<-performPSO(CMAres$modtraindata, CMAres$modtestdata, CMAres$modtrainclass, CMAres$modtestclass,outloc, numitrs, reinititrs, numpart, c1, c2, kname, percentTest, 0.0, 1, fitfunc)
> 
> #if(FALSE)
> {
+ trainm<-CMAres$modtraindata
+ testm<-CMAres$modtestdata
+ trainclass<-CMAres$modtrainclass
+ testclass<-CMAres$modtestclass
+ }
> 
> cma_feat_list<-colnames(trainm)
> 
> write.table(cma_feat_list,file="selected_cma_feat_list.txt",sep="\t",row.names=FALSE)
> 
> #if(FALSE)
> {
+ trainm<-traind[,-c(1)] #CMAres$modtraindata
+ testm<-testd[,-c(1)] #CMAres$modtestdata
+ trainclass<-traind[,1] #CMAres$modtrainclass
+ testclass<-testd[,1] #CMAres$modtestclass
+ }
> 
> d_dim<-dim(trainm)
> 
> print("Original dimension")
[1] "Original dimension"
> print(d_dim)
[1] 80 44
> 
> 
> if(d_dim[2]>3)
+ {
+ #Function to find top 100 similar samples for every platform
+ find_similar_samples<-function(part_group, particle_ind=NA,num_neighbors=3){
+ 
+ 	bcdata<-as.matrix(part_group)
+ 
+ 	if(is.na(particle_ind)==FALSE){
+ 	targetdata<-as.matrix(part_group[particle_ind,])
+ 	}else{
+ 
+ 	targetdata<-as.matrix(part_group)
+ 	}
+ 
+ 	data_dim<-dim(bcdata)
+ 
+ 	#num_neighb<-100
+ 	affy_names<-colnames(bcdata)
+ 
+ 	bc.names<-rownames(bcdata)
+ 
+ 	i<-1
+ 	
+ 	dist.matrix<-{}
+ 	
+ 	#k=100, for top 100 matches
+ 	dist.matrix<-ann(ref=as.matrix(bcdata), target=as.matrix(targetdata), tree.type="brute", k=num_neighbors, split.rule="midpt", shrink.rule="centroid", verbose=TRUE)
+ 
+ 	rm(bcdata)
+ 	
+ 	if(FALSE){
+ 	dist.print<-t(dist.matrix$knnIndexDist)
+ 
+ 	sample_names<-bc.names[dist.print[1:100,]]
+ 
+ 	sample_list<-{}
+ 	exp_list<-{}
+ 	tissue_list<-{}
+ 	pval_list<-{}
+ 	match_bclist<-{}
+ 
+ 
+ 	for (i in 1:100)
+ 	{
+ 		#format sample names##
+ 
+ 		
+ 		sample<-sapply(strsplit(as.character(sample_names[i]), "\\."), head, n=2)[1]
+ 
+ 		sample<-toupper(sample)
+ 
+ 		sample_list<-rbind(sample_list, sample)
+ 
+ 		
+ 	}
+ 
+ 	tab<-data.frame(Number=(1:100), Sample=as.factor(sample_list), Distance=dist.print[101:200,], row.names=T)
+ 	
+ 	return(tab)
+ 	}
+ 	return(dist.matrix$knnIndexDist)
+ }
+ 
+ 
+ #function to find nearest neighbor of a particle
+ nn_search<-function(particle_ind, part_group)
+ {
+ 	partm<-as.matrix(part_group[particle_ind,])
+ 	
+ 	#nn_arr<-array(0,2)
+ 	dist_mat<-dist(as.matrix(part_group))
+ 	dist_mat<-as.matrix(dist_mat)
+ 	nn_order<-order(dist_mat[particle_ind,])
+ 	nn_order<-nn_order[-c(1)]
+ 	if(FALSE){
+ 	for(i in 1:length(part_group))
+ 	{
+ 		groupm<-as.matrix(part_group[i])
+ 		
+ 		pdist<-dist(rbind(partm, groupm))
+ 		
+ 		nn_arr<-rbind(nn_arr, as.array(cbind(i,pdist)))
+ 	}
+ 	
+ 	#ascending order with respect to distance
+ 	nn_order<-order(nn_arr[,2])
+ 	}
+ 
+ 	return(nn_order)
+ }
+ 	
+  #function to evaluate k-fold CV
+         eval_fit_kfold_diff<-function(particle, numfolds,errortype="AUC",featweight=0.06,max_num_feats=10)
+         {
+ 
+                 num_feat<-0
+                 #select the columns with selected features 
+                 ind<-which(particle==1)
+ 
+                 #need to add 1 to take into account the index of the feature in the original dataset
+                 col_sel<-ind
+ 		folderror<-{}
+                         folderror_perm<-{}
+                 num_feat<-length(col_sel)
+                 #print("itr num feat:")
+                 #print(length(ind))     
+                 if(num_feat>1)
+                 {
+                         trainset<-trainm[,c(col_sel)]
+                         trainset<-cbind(trainclass,trainset)
+ 
+                         trainset<-data.frame(trainset)
+ 
+                         #print(trainset[1:4,])
+                         #trainset<-traindata[,c(col_sel)]
+ 
+                         #model<-svm(trainset, trainclass, type="C", kernel=kname, cross=kcross)
+ 
+                         #model<-svm(trainset, trainclass, type="C", kernel=kname, degree=tune_degree, gamma=tune_gamma, cost=tune_cost, cross=kcross)
+                         folderror<-{}
+ 			folderror_perm<-{}
+                         #if(FALSE)
+ 			{
+                          for(f in 1:1)
+                         {
+                          
+ 			model<-svm_cv(v=numfolds,x=trainset[,-1],y=trainset$trainclass,kname=kname,errortype=errortype)
+ 
+ 			#model<-svm(trainset, trainclass, type="C", kernel=kname, cross=numfolds)
+         
+ 			#cur_acc_vec<-model$accuracies
+ 
+ 			#cur_acc_sderror<-sd(cur_acc_vec,na.rm=TRUE)/sqrt(length(cur_acc_vec))
+ 			            
+ 			#folderror_cur<-mean(cur_acc_vec,na.rm=TRUE)-(1.96*cur_acc_sderror)
+ 	
+ 			folderror_cur<-model$confint[1] #mean_acc
+                         print(model)
+                         print(folderror_cur)
+                         folderror<-c(folderror,folderror_cur) #model$tot.accuracy)
+ 			
+ 			rm(model)
+ 
+ 			
+ 			#if(FALSE)
+ 			{
+ 			set.seed(321)
+ 			rand_ind<-sample(x=seq(1,length(trainset$trainclass)),size=length(trainset$trainclass))
+ 			
+ 			model<-svm_cv(v=numfolds,x=trainset[,-1],y=trainset$trainclass[rand_ind],kname=kname,errortype=errortype)
+ 
+ 			 #model<-svm(trainset, trainclass[rand_ind], type="C", kernel=kname, cross=numfolds)
+                         
+                         #cur_acc_vec<-model$accuracies
+ 
+                         #cur_acc_sderror<-sd(cur_acc_vec,na.rm=TRUE)/sqrt(length(cur_acc_vec))
+ 
+                         #folderror_cur_perm<-mean(cur_acc_vec,na.rm=TRUE)+(1.96*cur_acc_sderror)
+ 
+                         #folderror_cur_perm<-model$confint[2]
+                 
+ 			folderror_cur_perm<-model$mean_acc
+         
+ 						print(model)
+                         print(folderror_cur_perm)
+                         folderror_perm<-c(folderror_perm,folderror_cur_perm)
+ 						rm(model)	
+ 				}
+ 
+ 
+                         }
+ 			#	folderror<-mean(folderror,na.rm=TRUE)  #-(1.96*(sd(folderror,na.rm=TRUE)/sqrt(4)))
+ 				#folderror<-mean(folderror,na.rm=TRUE)  
+ 			#	folderror_perm<-mean(folderror_perm,na.rm=TRUE) #+(1.96*(sd(folderror_perm,na.rm=TRUE)/sqrt(4)))
+                        		#folderror_perm<-mean(folderror_perm,na.rm=TRUE) #+(1.96*(sd(folderror_perm,na.rm=TRUE)/sqrt(3)))
+ 			}
+ 
+ 			
+ 				#featweight=0.06
+ 			
+ 				
+ 
+ 				if(num_feat>max_num_feats){
+ 				fitfunc<-(accuracyweight*(folderror)*(folderror-folderror_perm))+(featweight*(1-num_feat))    #+(accuracyweight*(folderror))
+ 				}else{
+ 
+ 					fitfunc<-(accuracyweight*(folderror)*(folderror-folderror_perm))
+ 				
+ 				
+ 				}
+ 			fitfunc<-(accuracyweight*(folderror-folderror_perm))-(featweight*100*(num_feat/length(particle)))  #+(featweight*(1-num_feat))	
+                 print(paste("accuracy: ", folderror," num_feat:",num_feat," fitness:", fitfunc,sep=""))
+ 	}
+                 else
+                 {
+                 folderror<-1
+                 folderror_perm<-100
+ 				fitfunc<-(-100)
+ 		}
+                 rm(col_sel)
+                 rm(num_feat)
+                 return(list("fitfunc"=fitfunc,"cverror"=folderror,"cvpermerror"=folderror_perm))
+ 
+         }
+ 
+ 
+ 
+ 
+ 
+ 
+ 	#function to evaluate k-fold CV
+ 	eval_fit_test_diff<-function(particle, numfolds,trainm,trainclass,testm,testclass,errortype="AUC")
+ 	{
+ 		
+ 		num_feat<-0
+ 		#select the columns with selected features 
+ 		ind<-which(particle==1)
+ 
+ 		#need to add 1 to take into account the index of the feature in the original dataset
+ 		col_sel<-ind
+ 		num_feat<-length(col_sel)
+ 		#print("itr num feat:")
+ 		#print(length(ind))	
+ 		if(num_feat>1)
+ 		{
+ 			trainset<-trainm[,c(col_sel)]
+ 			trainset<-cbind(trainclass,trainset)
+ 			
+ 			trainset<-data.frame(trainset)
+ 			
+ 			#print(trainset[1:4,])
+ 			#trainset<-traindata[,c(col_sel)]
+ 			
+ 			#model<-svm(trainset, trainclass, type="C", kernel=kname, cross=kcross)
+ 
+ 			#model<-svm(trainset, trainclass, type="C", kernel=kname, degree=tune_degree, gamma=tune_gamma, cost=tune_cost, cross=kcross)
+ 			folderror<-{}
+ 			if(FALSE){
+ 			 for(f in 1:3)
+                         {
+ 			 model<-svm_cv(v=numfolds,x=trainset[,-1],y=trainset$trainclass,kname=kname,errortype="AUC")
+ 		
+ 			folderror_cur<-model$mean_acc
+ 			print(model)
+ 			print(folderror_cur)	
+ 			folderror<-c(folderror,folderror_cur) #model$tot.accuracy)
+ 			
+                         }
+                        } 
+ 			mod_cv <- svm(x=trainm,y=trainclass, type="C",kernel=kname)
+ predfit<-predict(mod_cv,testm)
+ svm_table<-table(predfit,testclass)
+ 
+ class_names<-rownames(svm_table)
+ beracc<-{}
+ i<-1
+ svm_acc<-{}
+ totacc<-length(which(predfit==testclass))/length(testclass)
+ for(c in 1:dim(svm_table)[1]){
+ testclass_ind<-which(testclass==class_names[c])
+ beracc<-c(beracc,length(which(predfit[testclass_ind]==testclass[testclass_ind]))/length(testclass_ind))
+ }
+ 
+ beracc<-mean(beracc,na.rm=TRUE)
+ 
+ if(errortype=="CV"){
+         svm_acc[i]<-(totacc*100)
+ }else{
+ if(errortype=="AUC"){
+         pred_acc<-multiclass.roc(testclass,as.numeric(predfit))
+         pred_acc_orig<-pred_acc$auc[1]
+         auc_acc<-pred_acc_orig
+ 
+ 
+         svm_acc[i]<-(auc_acc*100)
+ }else{
+ svm_acc[i]<-(beracc*100)
+ }
+ }
+ 
+ 		#	folderror<-mean(folderror)-(1.96*(sd(folderror)/sqrt(3)))
+ 		folderror<-svm_acc[i]
+ 
+ 
+ 					
+ 	
+ 			#folderror<-model$tot.accuracy
+ 			#folderror<-(1-ber)*100
+ 			rm(trainset)
+ 
+ 		}
+ 		else
+ 		{
+ 		folderror<-1
+ 		}
+ 		fitfunc<-(accuracyweight*(folderror))+(featweight*(1-num_feat))  #-(featweight*100*(num_feat/length(particle)))  #+(featweight*(1-num_feat))
+ 		print(paste("accuracy: ", folderror," num_feat:",num_feat," fitness:", fitfunc,sep=""))
+ 		rm(col_sel)
+ 		rm(num_feat)
+ 		return(fitfunc)
+ 
+ 	}
+ 	
+ 
+ 
+ 	#run_pso<-function(d_dim)
+ 	{
+ 	
+ 
+   scoringmatrix=matrix(0,dim(trainm)[2],globalpso_maxitr)
+ 
+ 
+ for (globalpso_itr in 1:globalpso_maxitr)
+         {	 #iitrt:<-numitrs
+ 	 #maxitr<-50 #reinititrs
+ 	 d<-dim(trainm)[2]
+ 	 
+ 	c1<-2.05
+ 
+ 	 c2<-2.05
+ 	 
+ 	 ll<-0
+ 
+ 	 ul<-1
+ 	fitness_x<-array(100000000000000000, dim=c(num_part, 1)) 
+ 	 fitness_gbest<-100000000000000 #(-1)*CMAres$tenfoldacc #10000000000000000
+ cverror_gbest<-(-10000)
+ cvpermerror_gbest<-(-10000)
+ 	prev_gbest<-fitness_gbest+1 
+ 	 fitness_lbest<-array(100000000000000000, dim=c(num_part, 1))
+ 	 feat_names<-colnames(trainm)
+ 		feat_list<-feat_names
+ 
+ 		global_no_change<-0
+ 		no_change<-0
+ 		
+ 		global_best_index<-10000000000000000000
+ 		
+ 		min_fit_x<-1000000000000000
+ 
+ 		min_fit_index<-100000000000000000
+ 	
+ 	#position
+ 	 x<-array(0, dim=c(num_part,d_dim[2]))
+ 
+ 	#velocity
+ 	v<-array(0, dim=c(num_part,d_dim[2]))
+ 	
+ 	x_gbest<-array(0, dim=c(d_dim[2]))
+ 
+ 	p_gbest<-array(0, dim=c(d_dim[2]))
+ 	   x_lbest<-array(0, dim=c(num_part, d_dim[2]))
+ 	   count_feat<-array(0,dim=c(num_part))
+ 	
+ prob_behavior_particles<-array(0, dim=c(num_part, dim(transition_matrix)[2]))
+ 	for (row in 1:num_part)
+ 	 {
+ 		num_feat<-0
+ 		
+ 		prob_behavior_particles[row,]<-c(0.4,0.5,0.1,0)	
+ 		ran<-runif(d_dim[2],0,1)	
+ 		for (col in 1:d_dim[2])		
+ 		{
+ 			if (ran[col]<0)
+ 			{
+ 				x[row,col]<-0
+ 				x_lbest[row,col]<-0
+ 				#num_feat<-num_feat+1
+ 
+ 			}
+ 			else
+ 			
+ 			{
+ 				x[row,col]<-1
+ 				x_lbest[row,col]<-1
+ 				num_feat<-num_feat+1
+ 				
+ 				#col_sel[row,num_feat]<-col
+ 				
+ 			}
+ 			
+ 		}
+ 		 count_feat[row]<-num_feat
+ 	 
+ 	 }
+ 	 
+ 	 num_featl<-d 
+ 	 num_featg<-d
+ 
+ 	
+ 	
+ 	clusterExport(cl, "x")
+ 
+ 	clusterExport(cl, "eval_fit_test_diff")
+ 	clusterExport(cl, "eval_fit_kfold_diff")
+ 	clusterExport(cl, "trainm")
+ 	clusterExport(cl, "trainclass")
+ 	clusterExport(cl, "accuracyweight")
+ 	clusterExport(cl, "featweight.max")
+ 	clusterExport(cl, "featweight.min")
+ 	clusterExport(cl, "k")
+         clusterExport(cl, "kname")	
+ 	clusterExport(cl, "svm_cv")
+ 	#clusterExport(cl, library(pROC))
+ 	clusterEvalQ<-function(cl, expr)
+ 	clusterCall(cl, eval, substitute(expr), env=.GlobalEnv)
+ 
+ 	#load a library on all clusters
+ 	clusterEvalQ(cl, library(e1071))
+ 
+ 	clusterCall(cl, function() library(pROC))
+  	
+ 	#prob_behavior<-rep(c(0.2,0.4,0.4,0),num_part) #runif(num_part,0,1)
+ 	
+ 	
+ 	#agent_behavior<-sample(x=c(1,2,3),size=num_part,replace=TRUE)	
+ 
+ 	#agent_behavior<-c(rep(1,round(confusionprob*num_part)),rep(2,round(followerprob*num_part)),rep(3,round((1-(confusionprob+followerprob)*num_part))))
+ 
+ 	#agent_behavior<-c(rep(1,round(confusionprob*num_part)),rep(2,round(followerprob*num_part)),rep(3,round((1-(confusionprob+followerprob))*num_part)))
+ 	
+ 	#agent_behavior <- sample(x=1:dim(transition_matrix)[1], size = num_part, replace = TRUE, prob = c(confusionprob, followerprob,leaderprob,(1-(confusionprob+followerprob+leaderprob))))
+ 
+ 
+ 		itr_data={}
+         k<-0
+ 
+ 	agent_behavior <- sample(x=1:dim(transition_matrix)[1], size = num_part, replace = TRUE, prob = c(confusionprob, followerprob,leaderprob,(1-(confusionprob+followerprob+leaderprob))))
+ 
+ 
+         print(dim(scoringmatrix))
+ 	rank_vec<-seq(1,num_part)
+ 
+ 
+ 		repeat
+ 		{
+ 			k<-k+1
+ 			feat_sel<-0
+ 		
+ 			itr_val={}	
+ 			print("iteration number: ") 
+ 			print(k)
+ 
+ 			min_fit_x<-1000000000000000
+ 			 
+ 			min_fit_index<-100000000000000000 
+ 			part_list={}
+ 			rank_sum_vec<-summary(rank_vec)
+ 			for (i in 1:num_part)
+ 			{
+ 				#each element of the list represents a particle
+ 				part_list=c(part_list, c=list(sapply(x[i,],head)))
+ 				
+ 				if(k%%behavior_reset_itr==0)
+ 				{
+ 					#agent_behavior=runif(num_part,0,1)
+ 					#agent_behavior<-sample(x=seq(1,dim(transition_matrix)[1]),size=num_part,replace=TRUE)
+ 		#agent_behavior <- sample(x=1:dim(transition_matrix)[1], size = num_part, replace = TRUE, prob = c(confusionprob, followerprob,leaderprob,(1-(confusionprob+followerprob+leaderprob))))
+                	
+ 				#if(FALSE)
+ 				{	
+ 					if(rank_vec[i]>=rank_sum_vec[5]){
+ 
+ 						prob_behavior_particles[i,]<-c(0.1,0.4,0.5,0)
+ 					
+                                         prob_actions<-prob_behavior_particles[i,] %*% (transition_matrix %^% k)
+ 
+                                         prob_actions<-as.vector(prob_actions)
+                                         sum_actions<-summary(c(prob_actions))
+ 
+                                         #best_action<-which(prob_actions==max(prob_actions)[1])
+ 
+                                         best_actions<-which(prob_actions>=sum_actions[3])
+ 
+                                                                              best_action<-sample(x=best_actions,size=1)
+ 					}else
+ 					{
+ 
+ 						if(rank_vec[i]>=rank_sum_vec[3]){
+ 
+                                                 	prob_behavior_particles[i,]<-c(0.333,0.333,0.333,0)
+                                        
+                                         prob_actions<-prob_behavior_particles[i,] %*% (transition_matrix %^% k)
+ 
+                                         prob_actions<-as.vector(prob_actions)
+                                         sum_actions<-summary(c(prob_actions))
+ 
+                                         #best_action<-which(prob_actions==max(prob_actions)[1])
+ 
+                                         best_actions<-which(prob_actions>=sum_actions[3])
+ 
+                                                                              best_action<-sample(x=best_actions,size=1)
+ 
+ 
+ 					 		}else{
+ 
+ 								prob_behavior_particles[i,]<-c(0.4,0.1,0,0.5)
+ 								
+ 								best_action<-sample(seq(1,4),size=1)
+ 							}
+ 
+ 
+ 					}
+ 				
+ 					 #prob_behavior_particles[i,]<-runif(4,0,1)
+ 					
+ 					
+ 										agent_behavior[i]<-best_action
+ 	
+ 				}
+ 		
+ 
+ 				}
+ 						
+ 				
+ 			}
+ 		 
+ 		print("agent_behavior")
+ 		print(agent_behavior)
+ 				#res1=clusterCall(cl, (-1)*eval_fit_kfold(x[i,], 10,1,0.01))
+ 				
+ 				#res1=clusterCall(cl, function(y) eval_fit_kfold(x[y,],10), 1)
+ 				#res1=parLapply(cl,list(a=as.data.frame(x[1,]),b=as.data.frame(x[5,1:5])),eval_fit_kfold_diff)
+ 				
+ 				#correct method
+ 				#res1<-clusterApply(cl,list(a=as.data.frame(x[1,]),b=as.data.frame(x[5,1:5])),eval_fit_kfold_diff))
+ 			
+ 				all_ind<-seq(1,dim(trainm)[1])
+ 				boot_fitness<-new("list") #{}	
+ 
+ 				featweightcur<-1 #featweight.max-(((featweight.max-featweight.min)/maxitr)*k)
+ 				
+ 				if(featweightcur<featweight.min){featweightcur<-featweight.min}
+ 				#featweightcur<-(1/k)*(featweight.max-featweight.min)
+ 
+ 		fitness_x<-{}
+ 		cverror<-{}
+ 		cvpermerror<-{}
+ 		if(bootstrap_val==TRUE)
+ 			{
+ 				for(boot_itr in 1:30){
+ 				subtrain_ind<-sample(x=seq(1,dim(trainm)[1]),size=dim(trainm)[1],replace=TRUE)
+ 				subtrain<-trainm[subtrain_ind,]
+ 				subtrainclass<-trainclass[subtrain_ind]
+ 
+ 				subtest_ind<-all_ind[-subtrain_ind]
+ 				subtest<-trainm[subtest_ind,]
+ 				subtestclass<-testclass[subtest_ind]
+ 
+ 			
+ 				res1<-clusterApply(cl,part_list,eval_fit_test_diff,numfolds=numfolds,trainm=subtrain,trainclass=subtrainclass,
+ 						testm=subtest,testclass=subtestclass,errortype=errortype)
+ 				
+ 				#res1<-clusterApply(cl,part_list,eval_fit_kfold_diff,numfolds=numfolds,errortype="BER")
+ 				fitness_x<-sapply(res1,head)
+ 				boot_fitness[[boot_itr]]<-fitness_x #c(boot_fitness[[bool_itr]],fitness_x)
+ 				
+ 				}
+ 				
+ 				boot_fitness<-as.data.frame(boot_fitness)
+ 
+ 				boot_fitness<-apply(boot_fitness,1,function(x){mean(x,na.rm=TRUE)+1.96*(sd(x,na.rm=TRUE)/sqrt(boot_itr))}) #mean(boot_fitness,na.rm=TRUE)
+ 				fitness_x<-(-1)*boot_fitness #fitness_x
+ 			
+ 			}	
+ 				else
+ 				{
+ 				res1<-clusterApply(cl,part_list,eval_fit_kfold_diff,numfolds=numfolds,errortype=errortype,featweight=featweightcur,max_num_feats=max_num_feats)
+                         
+ 				for(np in 1:num_part){
+ 			        	#fitness_x<-sapply(res1,head)	
+ 					#fitness_x<-(-1)*fitness_x
+ 					
+ 					fitness_x<-c(fitness_x,res1[[np]]$fitfunc)
+ 					cverror<-c(cverror,res1[[np]]$cverror)
+ 					cvpermerror<-c(cvpermerror,res1[[np]]$cvpermerror)
+ 			
+ 					}
+ 					
+ 					fitness_x<-(-1)*fitness_x
+ 
+ 				}
+ 
+ 					print(fitness_x)
+ 					print(cverror)		
+ 					print(cvpermerror)	
+ 				med_fit_x<-(-1)*median(fitness_x)	
+ 				min_fit_x<-min(fitness_x)
+ 				min_fit_index<-which(fitness_x==min_fit_x)
+ 				
+ 				bestind<-runif(1,1,length(which(fitness_x==min_fit_x)))
+ 				bestind<-min_fit_index[bestind]
+ 				#print(bestind)
+ 				numfeatl<-length(which(x[bestind[1],]==1))
+ 			
+ 				nfeats_perpart<-{}
+ 				for (i in 1:num_part)
+ 				{
+ 
+ 					nfeats_perpart<-c(nfeats_perpart,length(which(x[i,]==1)))
+ 					if(fitness_x[i]<fitness_lbest[i])
+ 					{
+ 					
+ 						fitness_lbest[i]<-fitness_x[i]
+ 						for (j in 1:d_dim[2])
+ 						{
+ 							
+ 							x_lbest[i,j] <- x[i,j]
+ 							
+ 						}
+ 				
+ 						num_featl<-length(which(x[i,]==1))	
+ 					}
+ 			
+ 				}
+ 
+ 					print(nfeats_perpart)
+ 			fitness_var<-as.vector(fitness_x)
+ 						
+ 			
+ 			 rank_vec<-rank(fitness_var)
+ 						
+ 			 #update the global best and its fitness
+ 			if(min_fit_x < fitness_gbest)
+ 			{
+ 				no_change<-0
+ 
+ 				global_no_change<-0
+ 						fitness_gbest<-min_fit_x
+ 				
+ 						cverror_gbest<-max(cverror)[1]
+ 						cvpermerror_gbest<-max(cvpermerror)[1]
+ 	
+ 						global_best_index<-bestind
+ 						num_featg<-num_featl
+ 
+ 						cverror_gbest<-cverror[bestind]
+                                                 cvpermerror_gbest<-cvpermerror[bestind]
+ 
+ 						print ("global fitness updated to :")
+ 						print(fitness_gbest)
+ 						print(min(fitness_x))
+ 						print("min fit index")
+ 						print(min_fit_index)
+ 						print(global_best_index)
+ 						print ("global best num features updated to")
+ 						
+ 						print(length(which(x[global_best_index,]==1)))
+ 					
+ 						print("CV error")
+ 						print(cverror_gbest)
+ 	
+ 						print("CVperm error")
+ 						print(cvpermerror_gbest)
+ 	
+ 						#global_best_index<-round(runif(1,1,length(global_best_index)))
+ 						
+ 						for (j in 1:d_dim[2])
+ 						{
+ 							
+ 							x_gbest[j]<-x[global_best_index,j]
+ 							
+ 						}
+ 						print(length(which(x_gbest==1)))
+ 			}
+ 			else
+ 			{
+ 				no_change<-no_change+1
+ 
+ 				print("No change")
+ 				print(no_change)
+ 				
+ 				print("Max itr reset")
+ 				print(maxitrreset)
+ 				#maxitrreset<-5
+ 				
+ 				
+ 				
+ 				#global no change is incremented if multiple reinitializations don't improve results
+ 				if(no_change>maxitrreset)
+ 				{
+ 					global_no_change<-global_no_change+1
+ 					
+ 					print("RE-INITIALIZING...")
+ 				 	#stop(paste("No change for ",maxitr," iterations",sep=""))	
+ 					 fitness_lbest<-array(100000000000000000, dim=c(num_part, 1))
+ 					#print(paste("No change for ",maxitr," iterations. Exiting PSO.",sep=""))
+ 					if(global_no_change>maxitr){
+ 				
+ 					#	print(dim(x_lbest))	
+ 					#	x_lbest<-apply(x_lbest,2,median)
+ 						print(paste("No change for ",global_no_change," iterations. Exiting PSO.",sep=""))
+ 					break;
+ 					}
+ 							#	print("exited")
+ 					min_fit_x<-1000000000000000000000
+ 					
+ 					
+ 											
+ 						#agent_behavior[row]<-sample(x=seq(1,dim(transition_matrix)[1]),size=num_part,replace=TRUE)
+ 						
+ 						#agent_behavior<-sample(x=c(1,4),size=num_part,replace=TRUE)
+ 			#	agent_behavior <- sample(x=1:dim(transition_matrix)[1], size = num_part, replace = TRUE, prob = c(confusionprob, followerprob,(1-(confusionprob+followerprob)),0))
+ 
+ 			agent_behavior <- sample(x=1:dim(transition_matrix)[1], size = num_part, replace = TRUE, prob = c(confusionprob, followerprob,leaderprob,(1-(confusionprob+followerprob+leaderprob))))
+ 
+ 
+ 									
+ 
+ 
+ 					no_change<-0
+ 				}
+ 			}
+ 			
+ 			
+ 				#print("x_lbest")
+                                 #print(x_lbest[i,])
+                                 #print(x[i,])
+ 				#print(x_gbest)
+ 
+ 			 ###update the particle velocity and position
+ 
+ 				nn_search_res<-find_similar_samples(x,NA,num_neighbors)
+ 				print(dim(nn_search_res))
+ 				print(head(nn_search_res))
+ 
+ 				#w_vec<-(runif(num_part,wmin,wmax))
+ 
+ 			for (i in 1:num_part)
+ 			{
+ 					feat_sel<-0
+ 			     
+ 			 
+ 				#w<-w_vec[i]
+ 
+ 				#w<-1/(3-exp(-num_part/200)+((rank_vec[i])/(8*d_dim[2]))^2)
+ 				#w<-(exp(rank_vec[i]/num_part))-(exp(1/num_part))	
+ 				#w<-((exp(rank_vec[i]/num_part))/1.7)-((exp(1/num_part))/1.705)
+ 				#w<-((exp(rank_vec[i]/num_part))/1.359)
+ 				#constant; global search
+ 				w<-1				
+ 				
+ 				#random inertia;
+ 				#w<-(-1)+(runif(1,0,1)/2)
+ 				
+ 
+ 				#linearly increasing with rank
+ 				#w<-wmin+(((wmax-wmin)/num_part)*rank_vec[i])
+ 
+ 				#w<-(0.5 - (1/(k+1)))
+ 
+ 				#w<-wmax-(((wmax-wmin)/num_part)*rank_vec[i])
+ 				
+ 				w<-(wmax-wmin)*((itr-k)/itr)+wmin
+ 
+ 				#print("x_lbest")
+ 				#print(x_lbest[i,])
+ 				#print(x[i,])		
+ 
+ 
+ 
+ 				x_curbest<-x_gbest
+ 
+ 				best_action<-agent_behavior[i]
+ 	
+ 					#confusion
+ 					if(best_action==1){
+ 
+ 									ran<-runif(d_dim[2],0,1)
+ 
+ 					                for (col in 1:d_dim[2])
+ 					                {
+ 					
+ 					                        if (ran[col]<0.9)
+ 					                        {
+ 					                                x_curbest[col]<-0
+ 					
+ 					                        }else{
+ 					
+ 					                                x_curbest[col]<-1
+ 					
+ 					                        }
+ 					
+ 					                }
+ 
+ 
+ 
+ 
+ 						}else
+ 						{
+ 							if(best_action==2){
+ 														x_curbest_ind<- nn_search_res[i,c(1:num_neighbors)]  #nn_search(i,x) #getnearestneighbor
+                                                         print("nearest neighbors are ")
+                                                         print(x_curbest_ind)
+                                                         if(num_neighbors>1){
+                                                         x_curbest<-apply(x[x_curbest_ind,],2,function(x){y<-quantile(x,0.75);return(round(y));})
+                                                         }else{
+                                                         x_curbest<-x[x_curbest_ind[1],]
+                                                         }
+ 
+ 								}else{
+ 						
+ 								if(best_action==3){
+ 									x_curbest<-x_gbest	
+ 								}else{
+ 
+ 											#DEath status: select all
+ 											ran<-runif(d_dim[2],0,1)
+ 
+ 							                for (col in 1:d_dim[2])
+ 							                {
+ 							
+ 							                        if (ran[col]<0)
+ 							                        {
+ 							                                x_curbest[col]<-0
+ 							
+ 							                        }else{
+ 							
+ 							                                x_curbest[col]<-1
+ 							
+ 							                        }
+ 							
+ 							                }
+ 							
+ 
+ 
+ 
+ 									
+ 									}
+ 									
+ 							}	
+ 						}
+ 						
+ 			r1<-runif(d_dim[2],0,1)
+ 
+                                         r2<-runif(d_dim[2],0,1)			
+ 			
+ 			r3<-runif(d_dim[2],0,1)
+ 	
+ 	
+ 			       for (j in 1:d_dim[2])
+ 				{
+ 					
+ 					
+ 					
+ 					#r1<-runif(1,0,1)
+ 
+ 					#r2<-runif(1,0,1)
+ 
+ 					#r3<-runif(1,0,1)
+ 							
+ 					v[i,j]<-((w*v[i,j])+(c1*r1[j]*(x_lbest[i,j]-x[i,j]))+(c2*r2[j]*(x_curbest[j]-x[i,j])))
+ 					
+ 					if(v[i,j]>6)
+ 					{
+ 						v[i,j]=6
+ 					}	
+ 					if(v[i,j]< (-6))
+ 					{
+ 						v[i,j]=-6
+ 					}
+ 					
+ 					S<-1/(1+exp(-v[i,j]))
+ 					
+ 					if(S>r3[j])
+ 					{
+ 							x[i,j]<-1
+ 
+ 							feat_sel<-feat_sel+1
+ 							
+ 							count_feat[i]<-feat_sel						
+ 
+ 					}			
+ 					else
+ 					{
+ 						x[i,j]<-0
+ 						
+ 					}
+ 				}
+ 					
+ 			}
+ 			
+ 	
+ 			
+ 			 x_lbest_mean<-apply(x_lbest,2,mean)
+ 	
+ 		#	print(head(x_lbest))
+ 			feat_global_num<-length(which(x_gbest==1))
+ 
+ 	                feat_ind<-which(x_lbest_mean>=(minselect.pct))
+ 			
+ 			len_feat_ind<-length(feat_ind)
+ 
+ 			#	if(len_feat_ind<=max_num_feats*2 & len_feat_ind>2 & med_fit_x>90 & len_feat_ind<=feat_global_num & no_change>50){
+ 
+ 			#	      print(paste("Population consensus reached after ",k," iterations! Exiting PSO.",sep=""))
+ 			#		break;
+ 				
+ 			#	}
+ 
+ 				 if(fitness_gbest<(-90) & feat_global_num<=max_num_feats & (global_no_change<=maxitr))
+ 				 {
+ 				
+ 				
+                                       #print(paste("Population consensus reached after ",k," iterations! Exiting PSO.",sep=""))
+                                         #break;
+ 
+                  }
+ 
+ 				
+ 				print(paste("global no change :",global_no_change,sep=""))
+ 				print(paste("fitness :",fitness_gbest,sep=""))
+ 								
+ 				if(k>itr)
+ 				{
+ 					
+ 						
+ 						if(fitness_gbest<(-minfitnessthresh) & (global_no_change>=global_max_itr)){
+ 
+ 						
+ 						break;
+ 
+ 						}else{
+ 
+ 							if(global_no_change<=global_max_itr)
+ 							{
+ 							
+ 							
+ 							
+ 							print(paste("Minimum fitness threshold not reached after ",k," iterations! Continuing PSO.",sep=""))
+ 							itr=k+itr-1
+ 							
+ 						
+ 							
+ 							
+ 							}else{
+ 								print(paste("Max init count reachced. Minimum fitness threshold not reached after ",global_max_itr," global iterations! Exiting PSO.",sep=""))
+ 								break;
+ 								
+ 							}
+ 						}
+ 
+ 	
+ 				}
+ 				
+ 			
+ 			
+ 			
+ 			
+ 			itr_val<-{}
+ 			
+ 			itr_val<-cbind(itr_val, k)
+ 			itr_val<-cbind(itr_val, w)
+ 			itr_val<-cbind(itr_val, num_featg)
+ 			itr_val<-cbind(itr_val, cverror_gbest)
+ 			itr_val<-cbind(itr_val,cvpermerror_gbest)	
+ 			itr_val<-cbind(itr_val, (-1)*fitness_gbest)
+ 			itr_val<-cbind(itr_val, (-1)*min_fit_x)
+ 			itr_val<-cbind(itr_val, count_feat[min_fit_index])
+ 			itr_val<-cbind(itr_val,length(which(x_gbest==1)))
+ 			itr_val<-cbind(itr_val,length(which(x_lbest[min_fit_index,]==1)))
+ 	
+ 			itr_data<-rbind(itr_data, itr_val)
+ 		}
+ 	
+ 		
+ 		filestr<-paste(outloc,  "multiobj_itr",globalpso_itr,"_descpso.txt", sep="")
+ 
+ 	cnames_sum<-c("Iteration #", "Inertia", "Number of features","CV best", "Permuted CV best", "Global best fitness","Current best fitness","Number of features in current best agent","Number of features in global best", "Number of features in local best")
+ 
+ 		bestgenelist<-which(x_gbest==1)
+ 		scoringmatrix[bestgenelist,globalpso_itr]=1
+ 	colnames(itr_data)<-cnames_sum
+ 	write.table(itr_data, file=filestr, sep="\t", row.names=F)
+ 
+ 
+ print("##################################")
+ 			print(paste("Results summary for itr:",globalpso_itr,sep=""))
+ 			 x_lbest_mean<-apply(x_lbest,2,mean)
+ 
+ 
+                 feat_ind<-which(x_lbest_mean>=minselect.pct)
+ 
+                 print("number of features selected using population mean")
+                 print(length(feat_ind))
+ 			
+ 				feat_ind<-which(x_gbest==1)
+ 				
+ 				 print("number of features selected using current global best")
+                 print(length(which(x_gbest==1)))
+ 
+ 		print("best accuracy")
+ 		print((-1)*fitness_gbest)
+ 
+ 		if(length(feat_ind)<1){
+ 		print(stop("No features selected!"))
+ 		}
+ 		sumr<-paste("global num features ", length(feat_list)-1, "current best set of features ", x_gbest, "global best accuracy ", 1-fitness_gbest)
+ 
+ 		filestr2<-paste(outloc,  "selected_feature_index_itr",globalpso_itr,".csv", sep="")
+ 		write.table(feat_ind, file=filestr2, sep=",", row.names=FALSE)
+ 		print("##################################")
+ 	}
+ 	
+ 		scoringmatrix<-as.data.frame(scoringmatrix)	
+ 		summat=apply(scoringmatrix,1,sum)
+ 		print("dim of scoring matrix is ")
+ 		print(dim(scoringmatrix))
+ 
+ 		print(length(summary))
+ 
+ 		print(summary(summat))
+ 
+ 		bestgenelist=which(summat>=round(minselect.pct*globalpso_maxitr))
+ 
+ 		print("numfeatg is ")
+ 		print(length(bestgenelist))
+ 
+ 		feat_col<-0
+ 		#feat_list<-array("",dim(1))
+ 
+ 		#feat_ind<-which(x_gbest==1)
+ 
+ 			
+ 		feat_ind<-bestgenelist
+ 
+                 feat_list<-feat_names[feat_ind]
+ 
+                 feat_col<-feat_ind
+                
+ 		if(length(feat_ind)<1){
+ 
+ 			print(stop("No features selected!"))
+ 		}
+ 		
+ 	filestr2<-paste(outloc,  "selected_feature_index_final.csv", sep="")
+ 	write.table(feat_col, file=filestr2, sep=",", row.names=FALSE)
+ 
+ 		traindata<-trainm
+ 		testdata<-testm
+ 		rm(trainm)
+ 		rm(testm)
+ 	 
+ 		#print(feat_col)
+ 		#print(traindata[1:2,])
+ 		finalset<-traindata[,c(feat_col)]
+ 			
+ 
+ 		test_mod<-testdata[,c(feat_col)]
+ 
+ 
+ 	filestr2<-paste(outloc, "modified_train.csv", sep="")
+ 
+ 	Class=trainclass
+ 
+ 	modtrain<-cbind(finalset, Class)
+ 	
+ 	Class=testclass
+ 	modtest<-cbind(test_mod, Class)
+ 
+ 	write.table(modtrain, file=filestr2, sep=",", row.names=FALSE)
+ 
+ 	filestr3<-paste(outloc, "modified_test.csv", sep="")
+ 	write.table(modtest, file=filestr3, sep=",", row.names=FALSE)
+ 
+ 
+ 	modtrain<-data.frame(modtrain)
+ 	modtest<-data.frame(modtest)
+ 	#model_train_err<-svm(finalset, trainclass,  kernel=kname, type="C", cross=10)
+ 
+ 	#model_train_valid<-svm(finalset, trainclass,   kernel=kname, type="C")
+ 
+ 	model_train_err<-svm(modtrain$Class~., data=modtrain, type="C", cross=10)
+ 
+ 	print("Modified train 10 fold accuracy using train data is ")
+         print(model_train_err$tot.accuracy)
+ 
+           filestr3<-paste(outloc, "10foldaccuracy.csv", sep="")
+         write.table(model_train_err$tot.accuracy, file=filestr3, sep=",", row.names=FALSE)
+ 
+ 
+ 
+ #	model_train_valid<-svm(modtrain$Class~., data=modtrain, type="C")
+ 
+ 	model_train_valid<-svm(finalset, trainclass,   kernel=kname, type="C")	
+ 		pred_train<-predict(model_train_valid, finalset)
+ 		train.table<-table(pred_train, trainclass)
+ 		
+ 	
+ 
+ 
+ 
+ 	error<-1-sum(diag(train.table))/(dim(finalset)[1])
+ 	print("Modified train accuracy is ")
+ 	print(1-error)
+ 
+ 	print("train confusion matrix is ")
+ 	print(train.table)
+ 	print("Train dimension is ")
+ 	print(dim(finalset))
+ 	
+ 	#print(modtrain[1:4,])
+ 	#print(modtest[1:4,])
+ 	
+ 	 mod_dim=dim(modtest)[2]
+ 	 
+ 	 test_mod<-as.data.frame(test_mod)
+ 
+ 	#	pred_test<-predict(model_train_valid, test_mod)
+ 		
+ 	#	test.table<-table(pred_test, testclass)
+ 
+ 	#knn.table<-table(test_mod[,1],knn(finalset[,-c(1)],test_mod[,-c(1)],finalset[,1],k=best_k[1],l=0,prob=FALSE, use.all=TRUE))
+ 	  
+ 	#print("test predicted table")
+ 	#print(test.table)
+ 
+ 	#testacc<-sum(diag(test.table))/(dim(test_mod)[1])
+ 	#print("Test accuracy is ")
+ 	#print(testacc)
+ 
+ 	#finalsetx<-finalset
+ 	#finalsety<-trainclass
+ 
+ 	#kname="radial"
+ 
+ 	# filestr3<-paste(outloc, "testaccuracy.csv", sep="")
+         #write.table(testacc, file=filestr3, sep=",", row.names=FALSE)
+ 
+ 	#res<-svm_10fold_blind(10,finalsetx,finalsety,test_mod, testclass, kname, classA, classB)
+ 	#folderror<-(res$avg)
+ 
+ 	#print("Modified 10fold blind test accuracy is ")
+ 	#print(1-folderror)
+ 
+ 	print("Test dimension is ")
+ 	print(dim(test_mod))
+ 
+ 	rm(test_mod)
+ 	rm(finalset)
+ 	}
+ 		
+ 		#run_pso(data_dim)		
+ 
+ trainf=paste(outloc, "modified_train.csv", sep="")
+ testf=paste(outloc, "modified_test.csv", sep="")
+ traind<-read.csv(trainf, header=TRUE)
+ 
+ testd<-read.csv(testf, header=TRUE)
+ traind<-as.data.frame(traind)
+ testd<-as.data.frame(testd)
+ mod<-svm(traind$Class~., data=traind,type="C")
+ testdim=dim(testd)[2]
+ 
+ traindim=dim(traind)[2]
+ 
+ pred<-predict(mod,testd[,-c(testdim)])
+ test.table=table(pred,testd$Class)
+ print("Test confusion matrix is ")
+ print(test.table)
+ testacc<-(sum(diag(test.table))/(dim(testd)[1]))
+ print("Test acc is ")
+ print(testacc)
+ 
+ filestr3<-paste(outloc, "testaccuracy.csv", sep="")
+ write.table(testacc, file=filestr3, sep=",", row.names=FALSE)
+ 
+ 
+ #testy<-testy[order(testy)]
+ #pred<-pred[order(testy)]
+ 
+ 
+ if(dim(traind)[2]>3)
+ {
+ 
+ #trainx=as.matrix(traind[,-c(dim(traind)[2])])
+ #trainy=traind[,dim(traind)[2]]
+ 
+ #testx=as.matrix(testd[,-c(Class)])
+ #testy=testd[,dim(testd)[2]]
+ 
+ trainx=subset(traind, select=-c(Class))
+ trainy=traind$Class
+ 
+ testx=subset(testd, select=-c(Class))
+ testy=testd$Class
+ 
+ mod<-svm(traind$Class~., data=traind,type="C", cross=10)
+ #fitfunc<-testacc #-(0.04*(1-testdim-1))
+ 
+ print("train 10 fold")
+ print(mod$tot.accuracy)
+ 
+ 
+ filestr3<-paste(outloc, "psotenfoldaccuracy.csv", sep="")
+         write.table(mod$tot.accuracy, file=filestr3, sep=",", row.names=FALSE)
+ 
+ trainf=paste(outloc, "modified_train.csv", sep="")
+ testf=paste(outloc, "modified_test.csv", sep="")
+ traind<-read.csv(trainf, header=TRUE)
+ testd<-read.csv(testf, header=TRUE)
+ traind<-as.data.frame(traind)
+ testd<-as.data.frame(testd)
+ 
+ mod<-svm(traind$Class~., data=traind,type="C")
+ testdim=dim(testd)[2]
+ 
+ pred<-predict(mod,testd[,-c(testdim)])
+ test.table=table(pred,testd$Class)
+ print("Test confusion matrix is ")
+ print(test.table)
+ 
+ testacc<-(sum(diag(test.table))/(dim(testd)[1]))
+ print("Test acc is ")
+ print(testacc)
+ filestr3<-paste(outloc, "testaccuracy.csv", sep="")
+         write.table(testacc, file=filestr3, sep=",", row.names=FALSE)
+ pred_acc<-multiclass.roc(testd$Class,as.numeric(pred))
+         pred_acc_orig<-pred_acc$auc[1]
+         auc_acc<-pred_acc_orig
+ 
+ print("Test AUC:")
+ print(auc_acc)
+  filestr3<-paste(outloc, "testAUC.csv", sep="")
+  write.table(auc_acc, file=filestr3, sep=",", row.names=FALSE)
+ 
+ pred<-predict(mod,traind[,-c(traindim)])
+ train.table=table(pred,traind$Class)
+ 
+ trainacc<-(sum(diag(train.table))/(dim(traind)[1]))
+ print("Train acc is ")
+ print(trainacc)
+ filestr3<-paste(outloc, "trainaccuracy.csv", sep="")
+ write.table(trainacc, file=filestr3, sep=",", row.names=FALSE)
+ 
+ 
+ 
+ 
+ 
+ }
+ #)
+ }
[1] 44  1
[1] "iteration number: "
[1] 1
[1] "agent_behavior"
 [1] 4 4 3 1 4 3 3 2 1 4 3 1 2 4 1 3 3 2 3 3 2 3 3 2 2 2 3 3 2 3
 [1] 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792
 [9] 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792
[17] 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792
[25] 6.918792 6.918792 6.918792 6.918792 6.918792 6.918792
 [1] 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957
 [9] 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957
[17] 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957
[25] 71.19957 71.19957 71.19957 71.19957 71.19957 71.19957
 [1] 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333
 [9] 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333
[17] 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333
[25] 52.58333 52.58333 52.58333 52.58333 52.58333 52.58333
 [1] 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44
[26] 44 44 44 44 44
[1] "global fitness updated to :"
[1] 6.918792
[1] 6.918792
[1] "min fit index"
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30
[1] 14
[1] "global best num features updated to"
[1] 44
[1] "CV error"
[1] 71.19957
[1] "CVperm error"
[1] 52.58333
[1] 44
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    2    3    4    5    0    0    0    0     0
[2,]    1    2    3    4    5    0    0    0    0     0
[3,]    1    2    3    4    5    0    0    0    0     0
[4,]    1    2    3    4    5    0    0    0    0     0
[5,]    1    2    3    4    5    0    0    0    0     0
[6,]    1    2    3    4    5    0    0    0    0     0
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "nearest neighbors are "
[1] 1 2 3 4 5
[1] "global no change :0"
[1] "fitness :6.91879196546085"
[1] "iteration number: "
[1] 2
[1] "agent_behavior"
 [1] 2 2 3 3 3 2 2 2 3 2 3 3 3 3 3 3 3 2 2 2 3 2 3 3 2 2 2 3 2 2
 [1]  -17.6635262    0.1121962  -68.6573604  -85.4724555  -49.7380194
 [6]  -31.6785125  -36.9632805  -58.4206380 -108.8597959  -46.7635408
[11]  -62.1353611  -56.3811608  -40.5896956  -67.7364063  -12.8916235
[16]  -70.6411794 -118.7941708  -88.5047473  -64.3039474  -69.8429261
[21]  -29.9056873   -2.3842122  -86.7268001  -70.3408816 -102.7758025
[26]  -63.6385869  -83.8241600  -12.7364654   -2.1960991  -73.8145843
 [1] 69.60089 65.64423 71.00420 79.32934 68.20518 73.91146 65.34720 73.81292
 [9] 73.80226 75.12544 72.69980 71.74593 75.04218 72.54728 71.89651 68.59793
[17] 83.09217 82.28428 74.26988 69.16555 75.27659 67.84048 79.95900 67.56818
[25] 65.44152 75.57620 79.62847 68.32760 63.60589 84.49777
 [1] 54.25000 55.66667 45.00000 55.41667 49.16667 56.66667 47.50000 52.58333
 [9] 45.66667 53.50000 53.00000 56.83333 57.83333 49.00000 62.50000 45.83333
[17] 49.33333 54.58333 50.50000 43.83333 59.75000 56.00000 51.25000 43.50000
[25] 36.25000 54.66667 51.50000 54.41667 53.16667 57.91667
 [1] 26 22 27 15 20 24 23 21 14 27 16  8 20 22 15 19 22 22 24 25 21 25 25 22 19
[26] 18 25 25 22 26
[1] "global fitness updated to :"
[1] -118.7942
[1] -118.7942
[1] "min fit index"
[1] 17
[1] 17
[1] "global best num features updated to"
[1] 22
[1] "CV error"
[1] 83.09217
[1] "CVperm error"
[1] 49.33333
[1] 22
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   10   17   19   27    0   17   18   18    19
[2,]    2    3   18   21   29    0   15   16   17    18
[3,]    3   18   23    2   29    0   11   14   15    15
[4,]    4    8   12    5   17    0   14   15   17    17
[5,]    5    7    8    9   14    0   15   15   16    16
[6,]    6   10   21   27   14    0   17   17   17    18
[1] "nearest neighbors are "
[1]  1 10 17 19 27
[1] "nearest neighbors are "
[1]  2  3 18 21 29
[1] "nearest neighbors are "
[1]  6 10 21 27 14
[1] "nearest neighbors are "
[1]  7  5 14 16 23
[1] "nearest neighbors are "
[1]  8  4  5 23 11
[1] "nearest neighbors are "
[1] 10 22 27  1  6
[1] "nearest neighbors are "
[1] 18  3 23  2 21
[1] "nearest neighbors are "
[1] 19 13  1 17 24
[1] "nearest neighbors are "
[1] 20 22 24  7 16
[1] "nearest neighbors are "
[1] 22 10 25 26 16
[1] "nearest neighbors are "
[1] 25 26 22  4 11
[1] "nearest neighbors are "
[1] 26 11 21 25 22
[1] "nearest neighbors are "
[1] 27 10  6  9 17
[1] "nearest neighbors are "
[1] 29  3  2 17  8
[1] "nearest neighbors are "
[1] 30  3  2  6 17
[1] "global no change :0"
[1] "fitness :-118.794170752371"
[1] "iteration number: "
[1] 3
[1] "agent_behavior"
 [1] 2 2 2 4 2 2 2 3 1 2 2 3 2 2 3 2 2 1 4 2 3 2 1 4 1 2 4 2 3 2
 [1]   -1.045925  -32.559358  -70.905475  -57.279806  -62.670590  -33.101841
 [7]  -27.496240  -48.052232  -47.044405  -17.422014  -25.438360  -96.085884
[13]  -79.312705  -25.616062  -91.052764  -78.996880 -107.648079 -113.051850
[19]  -62.130769   14.208010  -71.346679  -78.468719  -55.731378  -50.451367
[25]  -24.272455  -10.263038  -29.399205 -114.287364  -32.672298  -17.302587
 [1] 69.23191 69.75430 76.74170 74.20596 72.55685 77.32491 71.86288 77.51196
 [9] 69.90888 70.34046 70.60282 83.47475 79.99133 71.33533 71.36207 78.29180
[17] 81.24931 79.60279 69.79737 69.64325 78.84509 73.61799 70.74476 79.19633
[25] 69.72570 66.91624 68.69045 79.65293 72.10264 69.70294
 [1] 56.75000 52.33333 54.83333 52.75000 52.75000 60.25000 55.00000 56.08333
 [9] 50.50000 54.58333 57.33333 55.16667 54.58333 56.66667 41.33333 51.58333
[17] 51.08333 46.08333 46.91667 60.66667 53.66667 48.83333 51.41667 56.83333
[25] 54.41667 53.50000 55.08333 47.25000 53.75000 55.33333
 [1] 27 24 17 22 16 23 25 26 22 27 18 20 21 21 26 24 19 24 23 26 24 20 18 27 23
[26] 25 17 21 26 24
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    7   19   10   26    0   14   16   18    18
[2,]    2   29   30   17    9    0   12   14   15    16
[3,]    3    4    5    9   30    0   17   17   17    17
[4,]    4   25   13    8    3    0   13   15   16    17
[5,]    5   27   11   23   29    0   15   16   16    16
[6,]    6   13   16   22    8    0   16   17   17    19
[1] "nearest neighbors are "
[1]  1  7 19 10 26
[1] "nearest neighbors are "
[1]  2 29 30 17  9
[1] "nearest neighbors are "
[1]  3  4  5  9 30
[1] "nearest neighbors are "
[1]  5 27 11 23 29
[1] "nearest neighbors are "
[1]  6 13 16 22  8
[1] "nearest neighbors are "
[1]  7  1 17  2 18
[1] "nearest neighbors are "
[1] 10 30  1  7  2
[1] "nearest neighbors are "
[1] 11 26  5 14 25
[1] "nearest neighbors are "
[1] 13  4  6 19 26
[1] "nearest neighbors are "
[1] 14  8 15 29 17
[1] "nearest neighbors are "
[1] 16  6 13  5  8
[1] "nearest neighbors are "
[1] 17  2  7 14 29
[1] "nearest neighbors are "
[1] 20 24  9 11 15
[1] "nearest neighbors are "
[1] 22 15  6 23 14
[1] "nearest neighbors are "
[1] 26  9 11 13 14
[1] "nearest neighbors are "
[1] 28 23  8 11 14
[1] "nearest neighbors are "
[1] 30  2 27  5  9
[1] "global no change :0"
[1] "fitness :-118.794170752371"
[1] "iteration number: "
[1] 4
[1] "agent_behavior"
 [1] 2 1 1 3 1 1 2 2 1 3 3 4 3 2 4 4 2 4 4 2 2 2 2 4 3 3 1 2 1 2
 [1] -51.504937 -47.879018 -19.178348 -28.199086 -37.603851 -42.897132
 [7] -14.614910 -67.534611 -93.670469  -9.243844 -56.022065  -2.556367
[13] -80.920753 -52.818639 -57.067517 -31.423436  -2.588599 -64.002517
[19] -37.944169 -19.819894 -50.249750 -48.331452 -11.981916 -27.438121
[25] -66.049457 -90.992506 -59.699988 -61.521576 -14.672910 -17.365774
 [1] 69.55099 69.90914 70.74476 68.97315 71.27835 76.10215 69.04419 71.96147
 [9] 80.74167 66.98513 74.93926 62.35218 76.62354 74.01070 74.21653 70.90590
[17] 70.82833 73.48990 68.91459 66.20640 79.11813 75.15871 70.61608 71.40429
[25] 75.75535 72.05456 70.49303 69.91038 71.96489 68.04134
 [1] 49.25000 50.33333 56.00000 53.33333 54.66667 55.25000 55.66667 48.00000
 [9] 52.91667 56.50000 51.91667 52.75000 48.16667 52.08333 54.16667 54.16667
[17] 57.58333 53.41667 50.41667 51.33333 57.25000 54.58333 59.58333 55.91667
[25] 53.00000 46.58333 44.91667 45.33333 57.66667 52.75000
 [1] 22 22 24 22 20 27 23 23 20 19 26 20 27 25 19 23 28 16 24 24 26 24 19 22 21
[26] 16 30 27 25 26
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   24   16   25   28    0   14   15   17    17
[2,]    2   21   13   29    1    0   16   19   19    20
[3,]    3   14   29   30   10    0   17   17   18    19
[4,]    4   25   27    7   16    0   15   16   17    17
[5,]    5   26   27   10   21    0   16   16   17    18
[6,]    6   22    8   24   14    0   11   12   15    16
[1] "nearest neighbors are "
[1]  1 24 16 25 28
[1] "nearest neighbors are "
[1]  7 20 16  9 17
[1] "nearest neighbors are "
[1]  8  6 28 22  1
[1] "nearest neighbors are "
[1] 14  6 16  3 25
[1] "nearest neighbors are "
[1] 17  7  8 14 15
[1] "nearest neighbors are "
[1] 20  7 25 11  1
[1] "nearest neighbors are "
[1] 21 22  2  6 29
[1] "nearest neighbors are "
[1] 22  6 21 24  7
[1] "nearest neighbors are "
[1] 23 26 11  5 17
[1] "nearest neighbors are "
[1] 28 11  7  8  1
[1] "nearest neighbors are "
[1] 30 16  3 18  7
[1] "global no change :0"
[1] "fitness :-118.794170752371"
[1] "iteration number: "
[1] 5
[1] "agent_behavior"
 [1] 3 1 3 3 2 2 2 1 4 2 2 2 3 4 1 2 2 2 3 2 2 1 3 3 1 1 1 3 3 2
 [1]    9.164368 -113.921181  -33.590093  -64.771547  -42.689027 -143.015575
 [7]  -26.784852  -55.813403  -19.184858  -69.603118  -61.505388  -10.628021
[13]  -82.818781  -23.678969  -52.503068 -102.510825  -65.920662  -48.589910
[19]  -19.567591  -41.079799   -8.867543  -79.579972  -80.914413  -38.481605
[25]  -19.765277  -46.010509  -55.485936  -13.691006 -104.832380  -51.577159
 [1] 71.37925 73.29181 71.41499 72.09067 75.40902 75.42887 68.84182 66.57935
 [9] 66.06424 81.07214 67.59653 74.86803 76.26073 63.64488 77.11425 76.16126
[17] 80.56292 70.40738 69.78473 73.70838 67.17502 76.96145 82.00106 80.80238
[25] 69.52881 74.08847 67.58961 71.96547 79.36042 78.76998
 [1] 58.66667 41.41667 53.33333 50.50000 56.41667 40.91667 51.66667 45.41667
 [9] 54.50000 55.33333 45.75000 61.83333 48.33333 48.00000 55.25000 44.75000
[17] 57.83333 48.41667 55.41667 54.58333 53.58333 51.50000 54.00000 60.83333
[25] 54.66667 51.25000 50.58333 56.50000 50.66667 53.00000
 [1] 32 20 25 19 23 13 26 22 17 26 21 24 25 24 25 24 21 27 23 24 26 21 26 27 24
[26] 30 13 28 17 34
[1] "global fitness updated to :"
[1] -143.0156
[1] -143.0156
[1] "min fit index"
[1] 6
[1] 6
[1] "global best num features updated to"
[1] 13
[1] "CV error"
[1] 75.42887
[1] "CVperm error"
[1] 40.91667
[1] 13
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   21   12   20   30    0   14   16   16    16
[2,]    2   10   21   23    6    0   16   18   18    19
[3,]    3   17   13   15    1    0   16   18   18    19
[4,]    4   20   17   22   30    0   17   18   18    19
[5,]    5   11   22   10   30    0   14   16   17    17
[6,]    6   14    9   15   17    0   17   18   18    18
[1] "nearest neighbors are "
[1]  5 11 22 10 30
[1] "nearest neighbors are "
[1]  6 14  9 15 17
[1] "nearest neighbors are "
[1]  7 28 10 16  3
[1] "nearest neighbors are "
[1] 10  2 23  5 11
[1] "nearest neighbors are "
[1] 11 16  5  9 10
[1] "nearest neighbors are "
[1] 12  1 24  8 30
[1] "nearest neighbors are "
[1] 16 11  7 25  9
[1] "nearest neighbors are "
[1] 17 15  3 14 23
[1] "nearest neighbors are "
[1] 18 28 15  2  7
[1] "nearest neighbors are "
[1] 20 19  1 26  4
[1] "nearest neighbors are "
[1] 21  1  2 25 30
[1] "nearest neighbors are "
[1] 30 23  1 26  5
[1] "global no change :0"
[1] "fitness :-143.015575229005"
[1] "iteration number: "
[1] 6
[1] "agent_behavior"
 [1] 1 2 2 3 2 1 1 2 1 2 2 2 1 1 4 2 2 1 2 1 2 2 2 2 1 1 1 2 4 3
 [1]  -96.227039   -6.558438  -85.002207  -53.801371  -73.485570   -4.465061
 [7]  -64.817157  -84.671360  -35.538018  -32.853307    6.507873  -29.694879
[13] -117.065036  -33.751213  -31.720560  -53.128629  -63.682642  -29.053091
[19]  -71.028846  -57.139027  -27.305891  -36.259852  -60.703269  -55.034836
[25]  -24.530911  -98.717447  -41.983282  -72.446923  -64.015756  -35.407069
 [1] 76.09389 70.03896 81.18984 75.09361 72.31075 71.12028 70.21343 78.03276
 [9] 69.85003 69.16915 69.02418 72.37837 78.96604 70.78055 70.28351 70.58785
[17] 70.26683 66.35607 73.22092 71.30659 69.78694 68.97924 69.67853 68.43879
[25] 74.35315 66.44803 74.29817 76.49696 77.38648 72.95263
 [1] 48.66667 61.00000 56.91667 54.33333 46.25000 57.50000 47.25000 52.91667
 [9] 51.83333 49.41667 59.41667 54.16667 46.91667 52.66667 56.66667 50.41667
[17] 46.16667 51.00000 50.83333 50.33333 53.41667 54.00000 47.08333 49.25000
[25] 58.08333 41.25000 54.08333 52.91667 54.58333 55.41667
 [1] 18 17 16 22 25 28 22 18 24 29 24 27 19 25 16 21 25 21 18 21 24 17 23 18 25
[26] 12 26 20 22 23
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   19   29   13   17    0   10   16   17    17
[2,]    2   11   27   20   25    0   17   17   18    18
[3,]    3    8   18   27    5    0   14   15   16    17
[4,]    4   17   23    1   26    0   11   17   18    18
[5,]    5   12   23    3   16    0   16   16   17    18
[6,]    6   21   18   30   10    0   16   17   17    19
[1] "nearest neighbors are "
[1]  2 11 27 20 25
[1] "nearest neighbors are "
[1]  3  8 18 27  5
[1] "nearest neighbors are "
[1]  5 12 23  3 16
[1] "nearest neighbors are "
[1]  8  3 27 19 22
[1] "nearest neighbors are "
[1] 10 14 21  6 12
[1] "nearest neighbors are "
[1] 11 27  2  8  9
[1] "nearest neighbors are "
[1] 12  5 29 22  6
[1] "nearest neighbors are "
[1] 16 19 20  3 24
[1] "nearest neighbors are "
[1] 17  4  1 13 25
[1] "nearest neighbors are "
[1] 19  1 16  8 29
[1] "nearest neighbors are "
[1] 21  6 10 13 26
[1] "nearest neighbors are "
[1] 22  8 12 21 26
[1] "nearest neighbors are "
[1] 23  5  4  7 24
[1] "nearest neighbors are "
[1] 24 20  9 16 23
[1] "nearest neighbors are "
[1] 28  1 13 23 30
[1] "global no change :0"
[1] "fitness :-143.015575229005"
[1] "iteration number: "
[1] 7
[1] "agent_behavior"
 [1] 4 3 3 1 1 3 4 3 3 3 2 3 3 3 2 3 3 2 3 3 2 2 2 3 3 1 2 3 1 2
 [1]  -20.695923  -66.197750  -47.175029  -67.090712  -56.660644 -128.796221
 [7]   -9.077839  -20.464140  -46.240510 -109.603978  -67.742961  -51.745720
[13]  -30.715319  -78.519531  -80.469463  -25.727076  -41.755861 -112.874153
[19]  -24.095169  -42.089693  -41.716828  -11.375051   30.277099   -4.149800
[25]  -76.722725   22.755243  -16.157238  -89.994343   -3.738811  -60.263831
 [1] 65.65434 76.95925 72.96531 72.34238 71.71092 81.99409 65.20951 70.91859
 [9] 68.18750 80.73140 82.41223 66.19763 69.43852 61.93875 77.41965 72.34238
[17] 75.04057 82.87786 70.99328 77.77400 72.77518 68.70683 67.05822 69.35269
[25] 66.94303 66.72168 66.21630 73.95341 70.25534 74.15883
 [1] 53.33333 50.08333 52.16667 49.83333 50.83333 49.41667 55.66667 55.91667
 [9] 51.66667 51.08333 57.50000 47.66667 53.75000 39.41667 50.41667 55.83333
[17] 54.41667 51.66667 52.08333 62.08333 56.25000 53.25000 61.75000 56.25000
[25] 43.41667 59.00000 56.16667 45.50000 55.41667 54.83333
 [1] 18 30 25 20 21 15 17 24 16 17 25 18 21 15 24 25 27 19 31 16 18 29 25 27 18
[26] 27 15 23 31 16
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   14   18    9   12    0   17   17   18    18
[2,]    2   22    3   16   11    0   15   17   17    19
[3,]    3   16    2    7   17    0   14   17   18    18
[4,]    4   10    9   20    7    0   15   16   16    17
[5,]    5   12    6    7   22    0   17   18   18    18
[6,]    6   18    5    7   14    0   16   18   18    18
[1] "nearest neighbors are "
[1] 11 28  2 20 13
[1] "nearest neighbors are "
[1] 15 12 17 22 19
[1] "nearest neighbors are "
[1] 18  6  1  9 10
[1] "nearest neighbors are "
[1] 21 16  4  9 12
[1] "nearest neighbors are "
[1] 22  2 15  5  6
[1] "nearest neighbors are "
[1] 23 24 27 28  2
[1] "nearest neighbors are "
[1] 27 13  4  7 14
[1] "nearest neighbors are "
[1] 30  5  6 14 16
[1] "global no change :0"
[1] "fitness :-143.015575229005"
[1] "iteration number: "
[1] 8
[1] "agent_behavior"
 [1] 1 4 1 3 1 3 1 1 3 3 1 3 1 4 2 2 1 2 2 1 2 2 1 2 1 2 1 1 1 2
 [1]  -99.7670441  -98.9088161  -96.4268535  -34.4812273    2.6278917
 [6]  -37.6011985  -22.8331495  -24.6589371  -31.2806658  -60.2456674
[11]  -17.2407171  -49.5179817  -53.3591895   -0.5038711  -39.2823218
[16]   34.0305271  -30.7064501  -11.7643697  -71.9847505  -82.1274014
[21]    8.7261500  -22.4249163  -59.6718276  -32.4781013  -59.9745370
[26] -116.9703469  -64.6863481  -10.8993880  -67.1712233   10.9307855
 [1] 77.44583 71.44085 77.42173 76.89625 70.07291 66.87630 75.61208 67.01512
 [9] 77.80916 69.70065 72.34966 79.18390 75.42184 70.79774 65.37162 60.20147
[17] 66.11856 67.75439 68.54089 69.79669 66.73204 65.05317 70.10103 66.73047
[25] 77.17673 72.88649 82.18727 64.36170 79.98727 66.64718
 [1] 46.58333 45.75000 49.50000 60.00000 62.41667 52.08333 56.50000 52.08333
 [9] 57.91667 45.83333 57.08333 57.91667 54.75000 59.33333 49.33333 57.91667
[17] 52.25000 53.58333 46.41667 42.91667 55.75000 53.75000 48.16667 53.41667
[25] 57.00000 43.58333 54.25000 54.00000 57.91667 58.83333
 [1] 24 13 19 22 18 16 32 22 30 26 26 25 22 25 18 20 17 26 17 23 28 15 22 15 18
[26] 13 33 18 19 22
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   13   17   27   10    0   16   17   17    18
[2,]    2   26   19   20   22    0   16   18   18    18
[3,]    3   17   20   28   12    0   14   16   17    18
[4,]    4   12   26   27    1    0   17   19   19    20
[5,]    5   16   25    8   11    0   16   16   18    20
[6,]    6   17   26   19   22    0   11   13   17    17
[1] "nearest neighbors are "
[1] 15 26 14 17 22
[1] "nearest neighbors are "
[1] 16  5 13 14 22
[1] "nearest neighbors are "
[1] 18 30  9  3 19
[1] "nearest neighbors are "
[1] 19 20  6 28  2
[1] "nearest neighbors are "
[1] 21 27  7 18 30
[1] "nearest neighbors are "
[1] 22  6 15 16  2
[1] "nearest neighbors are "
[1] 24 28 26 15 25
[1] "nearest neighbors are "
[1] 26  6 15  2 17
[1] "nearest neighbors are "
[1] 30 18  3 14 19
[1] "global no change :0"
[1] "fitness :-143.015575229005"
[1] "iteration number: "
[1] 9
[1] "agent_behavior"
 [1] 2 2 4 3 2 4 2 2 2 1 3 1 1 3 3 3 2 3 3 2 2 3 4 3 3 3 4 2 1 2
 [1]   -0.3820299  -40.6411466  -30.9267328  -60.8852884  -16.5659871
 [6]  -47.3806167  -26.1655308  -90.9573073  -81.6372445  -94.7344611
[11]  -74.0762406  -59.5792033  -20.5738223   -1.0489020  -97.9678070
[16]  -45.4004545  -80.0821843  -43.4719169  -53.1831300  -31.4195150
[21]  -54.1467844   -5.0344257  -61.3861401  -58.4600688  -32.7025473
[26]   -8.8580376 -108.8510336  -58.7448305  -73.9605619 -105.5926931
 [1] 67.27338 76.63581 67.23080 77.29827 65.94199 73.25643 67.09674 73.12328
 [9] 66.83502 80.08326 71.04252 70.77190 67.81173 64.58857 78.99508 74.21645
[17] 76.29674 71.82317 73.20481 66.14754 65.76875 71.91598 75.36814 78.69959
[25] 72.69202 72.98373 69.14142 70.50654 69.73908 78.04278
 [1] 60.83333 54.41667 51.50000 54.66667 53.08333 52.41667 55.50000 46.75000
 [9] 46.41667 52.50000 48.50000 51.58333 57.33333 54.83333 47.58333 51.50000
[17] 48.91667 53.58333 50.75000 53.50000 47.66667 55.00000 54.00000 52.91667
[25] 54.33333 56.66667 41.91667 49.66667 43.58333 47.83333
 [1] 14 31 21 23 21 25 14 18  9 19 17 16 14 21 26 30 25 21 26 14 16 35 20 31 26
[26] 32 12 20 25 20
[1] "No change"
[1] 4
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   20    9   14    8    0   14   15   17    18
[2,]    2   22   15   24    1    0   14   15   18    19
[3,]    3   14   18   12    4    0   16   16   17    18
[4,]    4    3   27   10   16    0   18   19   20    21
[5,]    5   28   11   17   18    0   13   14   18    18
[6,]    6   24    8   19   17    0   16   17   17    18
[1] "nearest neighbors are "
[1]  1 20  9 14  8
[1] "nearest neighbors are "
[1]  2 22 15 24  1
[1] "nearest neighbors are "
[1]  5 28 11 17 18
[1] "nearest neighbors are "
[1]  7 28 13 27  9
[1] "nearest neighbors are "
[1]  8 12  9 13  6
[1] "nearest neighbors are "
[1]  9  8 10  1 12
[1] "nearest neighbors are "
[1] 17 26 22 21 28
[1] "nearest neighbors are "
[1] 20  1 12 10 11
[1] "nearest neighbors are "
[1] 21  9 17 12 20
[1] "nearest neighbors are "
[1] 28  5  7 13 16
[1] "nearest neighbors are "
[1] 30 18  9 10  1
[1] "global no change :0"
[1] "fitness :-143.015575229005"
[1] "iteration number: "
[1] 10
[1] "agent_behavior"
 [1] 2 2 2 4 2 2 2 3 3 3 4 2 2 2 2 2 3 2 2 1 1 3 4 2 1 3 3 2 4 1
 [1]  -33.1255205  -47.6059286  -84.8678905 -104.1489215   -0.8303422
 [6]  -17.4421063  -31.6507761    8.1846393  -45.6978990  -45.4943558
[11]  -41.5387512  -36.5629973  -92.4200667  -78.5796957  -37.4050307
[16]  -81.9529512  -52.9117048  -57.9347954  -43.7432503  -48.6669107
[21]   -7.4013006  -41.9443850  -63.2433474  -44.9514209  -43.8424834
[26]  -76.7332578  -64.8939406  -33.6749478  -40.9087798  -18.1512136
 [1] 71.72359 63.93028 81.71600 82.04191 69.49940 71.48085 69.54985 67.97671
 [9] 77.89716 68.77311 70.55775 68.72927 82.76432 76.10230 69.12495 75.34514
[17] 78.71870 77.64757 64.02895 73.27884 68.02571 63.09342 72.58049 63.56604
[25] 74.31395 69.34665 74.65303 75.29560 72.99994 70.82721
 [1] 51.91667 48.50000 53.83333 51.66667 59.33333 57.08333 49.58333 58.25000
 [9] 54.66667 50.58333 52.25000 51.41667 52.91667 51.75000 53.91667 53.50000
[17] 59.50000 53.33333 48.91667 49.00000 52.00000 49.25000 46.75000 48.66667
[25] 56.00000 49.00000 47.58333 55.83333 58.00000 55.83333
 [1] 29 13 24 21 22 24 30 25 31 20 22 22 25 19 17 12 19 28 14 32 32 12 29 13 21
[26] 11 31 28 15 25
[1] "No change"
[1] 5
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   20   23   25   27    0   13   18   18    18
[2,]    2   16   15   24   22    0   15   16   16    17
[3,]    3   14   28   19    4    0   13   14   18    19
[4,]    4   10   29    3   16    0   17   18   19    19
[5,]    5   20    1   13   25    0   18   19   19    19
[6,]    6    8   13   27   18    0   17   17   17    18
[1] "nearest neighbors are "
[1]  1 20 23 25 27
[1] "nearest neighbors are "
[1]  2 16 15 24 22
[1] "nearest neighbors are "
[1]  3 14 28 19  4
[1] "nearest neighbors are "
[1]  5 20  1 13 25
[1] "nearest neighbors are "
[1]  6  8 13 27 18
[1] "nearest neighbors are "
[1]  7 20 27 11  2
[1] "nearest neighbors are "
[1] 12  1  8 15 26
[1] "nearest neighbors are "
[1] 13  6  9 27  5
[1] "nearest neighbors are "
[1] 14  3 10 19 15
[1] "nearest neighbors are "
[1] 15 22  2 24 26
[1] "nearest neighbors are "
[1] 16  2 19 22 26
[1] "nearest neighbors are "
[1] 18 21 23  6 11
[1] "nearest neighbors are "
[1] 19 22 24 16 14
[1] "nearest neighbors are "
[1] 24 10 19 25 22
[1] "nearest neighbors are "
[1] 28  3 20 25  8
[1] "global no change :0"
[1] "fitness :-143.015575229005"
[1] "iteration number: "
[1] 11
[1] "agent_behavior"
 [1] 2 3 1 4 3 3 2 2 1 2 2 2 1 2 3 1 1 4 2 4 2 3 3 3 2 2 4 2 2 3
 [1]  -52.204230  -83.203726   -9.394375  -24.668121  -14.528382  -49.519545
 [7]  -98.465249  -74.920720 -102.999738 -110.554148   -6.983804  -75.057001
[13]  -34.397460   30.836491  -34.392968  -26.339486  -79.396232    9.011533
[19]  -20.031445  -44.385640  -68.861044    1.119119  -60.820895  -76.589490
[25]  -61.445715  -20.744833  -24.476024  -65.891516  -13.509637 -143.263902
 [1] 67.93327 83.97408 65.75766 70.05484 66.60265 67.32058 78.26881 68.20384
 [9] 68.72874 83.16386 69.63919 66.59473 66.46283 62.18876 69.68920 69.87396
[17] 72.67470 66.64466 73.17296 77.32410 71.52221 73.52618 78.77024 81.61335
[25] 68.66036 69.72472 69.15278 71.26164 67.75496 79.50884
 [1] 51.58333 52.33333 54.33333 54.66667 52.33333 47.41667 52.66667 44.58333
 [9] 43.58333 52.41667 57.33333 41.58333 49.58333 56.08333 50.08333 52.33333
[17] 47.25000 57.08333 54.16667 62.08333 52.75000 58.75000 59.33333 51.75000
[25] 45.91667 49.66667 60.16667 48.08333 51.41667 43.58333
 [1] 13 33 21 23 25 22 13 19 10 19 24 22 22 27 28 27 21 25 33 14 11 33 16 32 23
[26] 35  9 22 30 16
[1] "global fitness updated to :"
[1] -143.2639
[1] -143.2639
[1] "min fit index"
[1] 30
[1] 30
[1] "global best num features updated to"
[1] 16
[1] "CV error"
[1] 79.50884
[1] "CVperm error"
[1] 43.58333
[1] 16
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   20   21    8   27    0   15   16   18    18
[2,]    2   22   24   18   19    0   14   15   18    18
[3,]    3   14   18    2    4    0   12   18   20    20
[4,]    4   29   17   26   23    0   17   18   18    19
[5,]    5   28   25   12    2    0   17   18   19    20
[6,]    6   18   22   26   12    0   17   17   17    18
[1] "nearest neighbors are "
[1]  1 20 21  8 27
[1] "nearest neighbors are "
[1]  7 21 27  9 13
[1] "nearest neighbors are "
[1]  8 12  1 17  6
[1] "nearest neighbors are "
[1] 10 23  9 20 24
[1] "nearest neighbors are "
[1] 11 12 13 15 21
[1] "nearest neighbors are "
[1] 12  8 22  6 11
[1] "nearest neighbors are "
[1] 14  3 28 19 12
[1] "nearest neighbors are "
[1] 19 26 22 24  2
[1] "nearest neighbors are "
[1] 21 27  9  1  7
[1] "nearest neighbors are "
[1] 25 28 20  2  5
[1] "nearest neighbors are "
[1] 26 15 29 19 22
[1] "nearest neighbors are "
[1] 28 25  5 14 16
[1] "nearest neighbors are "
[1] 29 26 24  4  2
[1] "global no change :0"
[1] "fitness :-143.263901502539"
[1] "Minimum fitness threshold not reached after 11 iterations! Continuing PSO."
[1] "iteration number: "
[1] 12
[1] "agent_behavior"
 [1] 1 1 3 3 3 2 1 4 4 1 2 1 3 2 3 3 4 2 2 2 2 2 4 3 4 2 2 2 3 1
 [1]  -20.1641828  -27.7250813 -101.2054876  -84.5711591    0.5516462
 [6]   -6.8508594  -38.2425891   25.5818220  -38.7185436  -28.4601064
[11]  -43.2000701  -24.6847692 -123.5956415  -26.7099282  -81.8718692
[16]  -63.7166578   13.4216425  -21.5021573  -43.9797389  -24.1392153
[21]  -31.8930669  -12.8817575  -47.3848518  -71.1681264  -27.8404783
[26]  -95.8912888  -29.3971414  -33.5889888  -88.8196703  -28.8471286
 [1] 72.44950 62.71168 79.86231 81.53544 68.10179 68.96108 74.41367 66.86848
 [9] 77.20583 69.67687 79.47335 68.64908 86.14337 68.69805 69.14710 78.68273
[17] 61.91416 69.04286 69.49292 71.32784 70.84073 59.87181 71.62091 70.02150
[25] 73.40143 67.46614 75.73549 77.66477 78.25636 70.92094
 [1] 53.41667 52.16667 49.16667 54.16667 58.66667 58.50000 53.58333 60.16667
 [9] 54.91667 52.16667 60.83333 54.16667 52.33333 56.08333 45.50000 58.66667
[17] 56.41667 53.83333 54.33333 51.50000 49.91667 52.75000 49.41667 50.33333
[25] 57.83333 42.83333 52.58333 59.58333 54.58333 53.33333
 [1] 33 11 23 23 21 20 29 26 32 26 22 21 20 16 16 16 18 24 14 33 32 10 28 12 22
[26] 12 38 25 13 26
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   27    9   20    8    0   13   15   16    19
[2,]    2   15   24   26   16    0   13   13   15    17
[3,]    3   14   16   19   28    0   15   17   17    18
[4,]    4    9    6   10   16    0   17   19   19    19
[5,]    5   12   28    6   14    0   18   18   19    19
[6,]    6    8   17   18   26    0   18   18   18    18
[1] "nearest neighbors are "
[1]  6  8 17 18 26
[1] "nearest neighbors are "
[1] 11 13  7 29  8
[1] "nearest neighbors are "
[1] 14  3 12 28 29
[1] "nearest neighbors are "
[1] 18  6 10 17 21
[1] "nearest neighbors are "
[1] 19 13 14 15 16
[1] "nearest neighbors are "
[1] 20 27 21  1  9
[1] "nearest neighbors are "
[1] 21  9 27 20 23
[1] "nearest neighbors are "
[1] 22 26 15 24  2
[1] "nearest neighbors are "
[1] 26 15 29 22  2
[1] "nearest neighbors are "
[1] 27 23  1 20 21
[1] "nearest neighbors are "
[1] 28 14 25  3  5
[1] "global no change :0"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 13
[1] "agent_behavior"
 [1] 3 3 2 3 2 3 4 2 1 3 2 2 2 3 2 3 3 3 2 2 4 3 3 3 3 2 2 2 1 3
 [1]  -41.152391  -41.263814  -71.662538  -36.461160  -27.837221  -40.467458
 [7]  -35.799111 -110.732956 -105.960429  -42.393216 -142.940405  -63.181941
[13]   -8.787161   40.145963  -58.650923  -48.572243  -62.458003  -53.953822
[19]  -75.231827  -34.673229 -128.246111  -11.257265  -61.581137  -19.836347
[25] -103.980745  -36.697155  -74.071798  -92.676343  -77.471908 -116.852689
 [1] 73.38199 69.95731 74.92342 70.23920 71.55987 70.08592 69.60679 72.11629
 [9] 72.66936 69.00895 81.64111 79.43184 69.34834 59.23596 83.66200 74.69930
[17] 74.09766 73.69228 84.80394 78.91949 79.83862 71.00903 77.45259 73.10363
[25] 72.27342 69.75610 70.72345 75.17921 71.43378 79.60539
 [1] 58.33333 51.25000 51.50000 51.58333 55.08333 51.08333 56.08333 41.33333
 [9] 43.75000 54.16667 44.41667 57.25000 58.50000 54.08333 58.75000 53.16667
[17] 49.33333 51.08333 55.66667 65.16667 46.91667 54.66667 56.50000 55.50000
[25] 43.75000 47.41667 50.00000 48.91667 43.66667 49.41667
 [1] 15 23 20 25 24 24 14 19 17 14 19 21 20 29 29 26 27 26 31 15 16 31 19 30 17
[26] 33 13 17 27 15
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   10    2   27    7    0   17   18   18    19
[2,]    2   15   22   16   24    0   12   16   17    17
[3,]    3   25   16    2    4    0   15   18   19    19
[4,]    4   23   18   24   22    0   16   17   17    18
[5,]    5   20   21    4   11    0   17   18   19    19
[6,]    6   14   18    4    8    0   17   18   19    19
[1] "nearest neighbors are "
[1]  3 25 16  2  4
[1] "nearest neighbors are "
[1]  5 20 21  4 11
[1] "nearest neighbors are "
[1]  8 11 17 14  6
[1] "nearest neighbors are "
[1] 11 30  8 17 28
[1] "nearest neighbors are "
[1] 12 20 10  9 14
[1] "nearest neighbors are "
[1] 13  9  7 30 16
[1] "nearest neighbors are "
[1] 15  2 24 26 19
[1] "nearest neighbors are "
[1] 19 22 15 26 16
[1] "nearest neighbors are "
[1] 20 12 28 10 21
[1] "nearest neighbors are "
[1] 26 24 15 19  2
[1] "nearest neighbors are "
[1] 27 23  7 21  1
[1] "nearest neighbors are "
[1] 28 20 10 11  3
[1] "global no change :0"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 14
[1] "agent_behavior"
 [1] 2 3 2 2 3 2 2 4 1 2 3 1 3 3 3 2 3 2 4 3 1 3 3 2 2 3 4 4 2 4
 [1]  -35.32925  -38.65388  -53.48515 -123.13817  -36.36843  -40.72426
 [7]  -57.02927  -87.06713  -59.32156  -40.89470  -50.67069   12.97547
[13] -135.20792  -72.97663  -38.49935  -25.55793  -11.02613  -45.58266
[19]  -49.12837  -37.63363  -20.46609 -101.33025  -54.18886  -61.75517
[25] -100.73115  -60.13846  -27.65609  -18.73730  -50.18620  -21.44545
 [1] 72.46736 64.20805 70.77279 77.94582 67.23581 70.87970 79.57252 74.79979
 [9] 71.75068 70.49712 77.16444 67.51854 85.06431 71.11048 69.67714 66.59644
[17] 63.89462 66.53320 69.36355 71.71612 73.03261 79.99332 66.51202 74.04043
[25] 85.23714 70.31557 74.26607 72.81564 72.84785 66.15273
 [1] 53.58333 48.75000 49.16667 46.50000 50.41667 55.91667 53.16667 48.75000
 [9] 51.25000 50.50000 55.66667 58.75000 45.75000 48.33333 54.25000 54.66667
[17] 54.41667 47.41667 49.08333 51.91667 56.66667 52.00000 46.58333 54.41667
[25] 56.00000 52.83333 56.91667 57.25000 55.08333 50.50000
 [1] 26 17 24 15 21 15 33 19 19 26 25 25 27 18 17 15 16 22 23 27 27 17 20 16 20
[26] 12 26 26 17 25
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   23    7   14   24    0   14   17   18    18
[2,]    2   18   25   14   23    0   15   15   17    17
[3,]    3   27    7   16   10    0   14   17   17    18
[4,]    4   17    2    9   19    0   15   18   18    18
[5,]    5   25   13    2    6    0   15   16   18    18
[6,]    6   17    5   16   29    0   17   18   18    18
[1] "nearest neighbors are "
[1]  1 23  7 14 24
[1] "nearest neighbors are "
[1]  3 27  7 16 10
[1] "nearest neighbors are "
[1]  4 17  2  9 19
[1] "nearest neighbors are "
[1]  6 17  5 16 29
[1] "nearest neighbors are "
[1]  7 25 27 13  1
[1] "nearest neighbors are "
[1] 10  7  3 18 26
[1] "nearest neighbors are "
[1] 16 30  3 26 27
[1] "nearest neighbors are "
[1] 18 17  2  3 10
[1] "nearest neighbors are "
[1] 24 26  8 22  1
[1] "nearest neighbors are "
[1] 25  2  5  7 29
[1] "nearest neighbors are "
[1] 29 15 25  8 26
[1] "global no change :0"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 15
[1] "agent_behavior"
 [1] 3 3 3 2 3 3 1 1 1 2 3 3 1 4 2 2 3 3 2 3 3 1 4 2 4 2 2 2 3 3
 [1]  -28.137766  -21.753984  -20.649496  -36.336923 -113.819765   28.475661
 [7]  -47.988612   -9.873167  -35.629697  -69.565169  -48.716872 -120.163481
[13]  -13.063248  -89.268245  -41.607371  -49.291213  -24.865447  -83.320946
[19]  -36.706811   26.793280  -80.523513  -34.129879  -68.166774  -35.602309
[25]  -52.255159  -29.696315    5.349284  -58.234279  -43.768387  -31.643531
 [1] 71.71089 71.15383 71.81929 71.45678 81.17304 61.00184 65.45378 70.99736
 [9] 66.70170 81.96606 74.62216 77.35845 66.95356 81.56577 75.60935 73.59309
[17] 71.78370 79.07328 72.28076 56.91407 73.61985 77.35628 77.54245 76.45380
[25] 69.61012 78.59835 70.15742 79.01049 75.01883 72.01052
 [1] 56.08333 53.16667 55.41667 51.91667 47.50000 55.33333 48.58333 56.75000
 [9] 48.66667 59.41667 55.33333 47.41667 55.25000 54.16667 56.83333 51.91667
[17] 54.08333 51.50000 52.66667 55.00000 49.33333 59.16667 53.00000 59.33333
[25] 48.25000 61.75000 63.50000 56.00000 53.08333 57.50000
 [1] 22 30 27 27 24 25 16 27 24 19 21 13 20 21 23 26 28 24 27 16 18 25 24 22 24
[26] 24 17 25 29 18
[1] "No change"
[1] 4
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   16    7   27   18    0   14   16   17    18
[2,]    2   25    4   29    9    0   12   15   17    18
[3,]    3   19   17   20   10    0   18   19   19    20
[4,]    4    2    9   16   25    0   15   17   19    19
[5,]    5   13    8   22   29    0   18   19   19    19
[6,]    6   13   20    4    8    0   11   19   20    20
[1] "nearest neighbors are "
[1]  4  2  9 16 25
[1] "nearest neighbors are "
[1] 10 17 23 24  3
[1] "nearest neighbors are "
[1] 15 29 26 11 20
[1] "nearest neighbors are "
[1] 16  1 28 18 23
[1] "nearest neighbors are "
[1] 19 17  8 14 18
[1] "nearest neighbors are "
[1] 24 18 20 16 26
[1] "nearest neighbors are "
[1] 26 29 15 23 16
[1] "nearest neighbors are "
[1] 27 14  1  7 30
[1] "nearest neighbors are "
[1] 28 29 16 27  8
[1] "global no change :0"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 16
[1] "agent_behavior"
 [1] 3 2 3 3 3 2 3 2 2 3 4 2 2 4 3 4 2 1 4 2 4 2 1 3 3 2 3 3 4 3
 [1] -111.494423  -60.803966  -58.418797 -125.396847  -26.956402  -62.522224
 [7]  -56.804369  -74.155982  -76.578350  -31.731854  -35.868184   -9.857798
[13] -116.001144   14.407439  -36.861252  -23.364099  -18.479730  -61.146027
[19]  -53.736890    6.658409   15.872049  -42.977601  -42.665574  -84.970950
[25]  -50.589848  -24.652834  -29.286104  -27.185286  -80.531826  -11.942563
 [1] 82.79131 72.30473 72.57770 79.81422 62.76249 72.39838 77.70178 83.77059
 [9] 82.61870 73.13425 66.87061 73.11550 82.35932 72.72457 74.34195 66.08191
[17] 69.09746 70.47163 70.18677 65.73650 64.02256 64.74704 74.32857 66.50177
[25] 74.21645 68.09723 68.51631 69.52797 70.04576 64.37336
 [1] 49.58333 52.41667 53.16667 47.91667 46.91667 52.16667 57.25000 61.66667
 [9] 58.66667 56.33333 48.33333 58.41667 48.25000 63.33333 58.33333 50.50000
[17] 58.58333 47.33333 47.16667 55.25000 55.83333 49.33333 51.25000 40.41667
[25] 50.91667 53.16667 51.75000 55.00000 46.66667 50.16667
 [1] 24 17 17 15 23 17 20 16 19 23 25 28 24 27 19 24 15 24 27 26 25 15 32 20 29
[26] 22 24 20 16 26
[1] "No change"
[1] 5
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   27   24   25    7    0   16   18   19    20
[2,]    2   18    7   29   21    0   15   17   17    18
[3,]    3   22    7   29    6    0   14   17   17    18
[4,]    4   17    6   15   18    0   16   18   18    19
[5,]    5   24   12   23   26    0   15   19   19    19
[6,]    6    8    9   15   27    0   15   16   16    17
[1] "nearest neighbors are "
[1]  2 18  7 29 21
[1] "nearest neighbors are "
[1]  6  8  9 15 27
[1] "nearest neighbors are "
[1]  8  6  9 26 28
[1] "nearest neighbors are "
[1]  9  6  8 23 22
[1] "nearest neighbors are "
[1] 12 11 28 19 21
[1] "nearest neighbors are "
[1] 13 11 14  1  8
[1] "nearest neighbors are "
[1] 17  4 18 22 16
[1] "nearest neighbors are "
[1] 20 18 12 16 29
[1] "nearest neighbors are "
[1] 22  3  2  6  9
[1] "nearest neighbors are "
[1] 26  8 23  5 15
[1] "global no change :0"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 17
[1] "agent_behavior"
 [1] 4 1 3 3 3 4 4 3 4 3 2 2 1 3 2 2 3 3 2 3 3 1 2 1 1 3 2 2 4 3
 [1]  -36.253485  -48.241646  -40.521594  -56.450777  -31.189767   18.439167
 [7]  -15.444700  -40.278365   -9.669479  -27.365535  -21.116652  -53.949703
[13]   -4.056110  -88.529754  -58.302485  -51.535084  -48.647898  -78.071188
[19]   -8.797613  -35.655736 -113.184390  -38.240667   36.075255  -10.629630
[25]   -8.518496  -23.432548  -66.630934  -53.147411  -22.825079  -38.340767
 [1] 72.25070 72.51197 66.49068 66.74470 72.41220 64.50156 64.06621 76.17689
 [9] 66.86571 66.65493 72.50363 72.75964 69.62940 76.66807 75.23625 75.64793
[17] 68.97200 72.15212 73.08528 70.82812 76.34142 77.11025 61.10313 69.05774
[25] 65.34006 74.97439 80.71255 69.29615 68.48926 68.47118
 [1] 55.00000 51.50000 49.75000 45.00000 57.08333 55.91667 53.25000 52.66667
 [9] 51.75000 53.00000 56.91667 53.33333 57.00000 49.41667 52.66667 56.25000
[17] 48.33333 46.08333 60.41667 52.33333 43.25000 54.91667 61.50000 58.75000
[25] 55.00000 59.83333 58.75000 48.66667 49.83333 52.16667
 [1] 22 25 19 23 20 27 17 34 29 18 25 19 26 21 24 20 24 23 24 25 23 32 15 18 19
[26] 23 19 22 31 19
[1] "No change"
[1] 6
[1] "Max itr reset"
[1] 5
[1] "RE-INITIALIZING..."
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   24   18    3    4    0   16   17   19    19
[2,]    2   28    6   27   30    0   15   16   18    18
[3,]    3   11   15    1   13    0   16   17   19    19
[4,]    4   11   12   30    1    0   18   18   18    19
[5,]    5   26   24    8   10    0   15   16   18    18
[6,]    6    9    2   14   18    0   14   16   16    16
[1] "nearest neighbors are "
[1]  6  9  2 14 18
[1] "nearest neighbors are "
[1]  8 28 29  5  2
[1] "nearest neighbors are "
[1] 10 24  7  5 14
[1] "nearest neighbors are "
[1] 11  3 30 15  4
[1] "nearest neighbors are "
[1] 12 26 13  4 16
[1] "nearest neighbors are "
[1] 13 12 22  3  6
[1] "nearest neighbors are "
[1] 16 20 18 29 12
[1] "nearest neighbors are "
[1] 17 18 27  4 25
[1] "nearest neighbors are "
[1] 18 27  6  1 16
[1] "nearest neighbors are "
[1] 19 18 22 28  2
[1] "nearest neighbors are "
[1] 22 13 19  3  6
[1] "nearest neighbors are "
[1] 25  7 27 29 23
[1] "global no change :1"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 18
[1] "agent_behavior"
 [1] 2 4 4 1 3 3 2 2 2 3 3 1 2 3 1 4 2 1 2 3 3 4 2 3 2 2 4 3 2 1
 [1] -39.8680658 -32.1570162  -0.1373616 -58.8131952 -61.9543533 -58.2925308
 [7] -72.1003672 -80.5027108 -60.7592079 -12.7615301 -41.3578187   5.4784937
[13] -95.1515907 -26.6509540 -33.8952440 -64.9343095 -68.2968919 -18.2433204
[19] -30.2509183 -47.9729947 -60.5104561 -47.3997764 -33.8333301 -59.9351193
[25] -74.0294696 -15.2782203  -9.7151446 -92.8352926 -31.7828585 -12.0229076
 [1] 69.17058 68.08292 64.83808 78.80052 65.42875 74.87063 78.37462 63.96418
 [9] 78.63669 72.61291 72.52914 72.84370 83.28032 69.72413 68.75632 66.44898
[17] 76.34877 70.07291 74.20927 72.87490 78.14755 67.26026 68.12273 63.28248
[25] 71.74529 61.18443 67.76121 78.74130 69.63687 67.30610
 [1] 49.83333 54.83333 57.08333 56.58333 42.58333 53.66667 53.50000 41.50000
 [9] 59.66667 57.33333 55.16667 61.66667 54.25000 56.66667 49.25000 43.91667
[17] 55.41667 52.33333 57.25000 51.91667 56.50000 51.41667 49.08333 41.75000
[25] 44.66667 48.58333 54.00000 51.08333 56.91667 53.08333
 [1] 25 15 17 23 23 21 23 14 15 28 20 27 22 17 28 21 16 31 24 25 21 14 27 21 27
[26] 21 26 20 14 26
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   24   27   14   10    0   16   17   18    19
[2,]    2    6    8   22   14    0   14   17   17    18
[3,]    3   11   28    8   15    0   15   15   17    19
[4,]    4   18   30   12   20    0   16   17   18    18
[5,]    5   26   12   16   24    0   16   20   20    20
[6,]    6    2   18   19    9    0   14   18   19    20
[1] "nearest neighbors are "
[1]  1 24 27 14 10
[1] "nearest neighbors are "
[1]  7 15  9 16 20
[1] "nearest neighbors are "
[1]  8  2  3 11 28
[1] "nearest neighbors are "
[1]  9 29  7 14 22
[1] "nearest neighbors are "
[1] 13 17 25 10  1
[1] "nearest neighbors are "
[1] 17 19 14 13 22
[1] "nearest neighbors are "
[1] 19 12 17 22 18
[1] "nearest neighbors are "
[1] 23  7 25 10 30
[1] "nearest neighbors are "
[1] 25 10  7 20 23
[1] "nearest neighbors are "
[1] 26 16  5 24 21
[1] "nearest neighbors are "
[1] 29  9 20 14 16
[1] "global no change :1"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 19
[1] "agent_behavior"
 [1] 3 3 3 3 1 1 1 1 2 2 2 3 4 3 3 3 4 3 3 2 4 1 2 4 2 3 3 4 2 3
 [1]    5.407398  -82.564288  -38.360878  -33.362188  -27.348333  -23.567878
 [7]  -72.035643  -36.462286  -95.368858  -72.968561  -65.719634 -133.816320
[13]  -56.418450  -49.746709  -37.226657  -17.864848 -140.890727  -45.874878
[19]  -44.853950  -70.116339 -115.564850  -15.112974  -44.909659  -32.574389
[25]  -56.936057  -76.332787  -97.315524  -33.091409  -26.641265  -61.188173
 [1] 67.92610 75.18710 70.27066 69.00577 75.59088 73.72873 67.98289 74.41367
 [9] 80.47529 68.83614 73.25756 75.71023 72.44278 75.85843 71.49079 72.30782
[17] 73.43572 65.41740 70.84958 73.64448 74.74176 74.93926 74.33042 69.02245
[25] 73.97054 83.88019 78.59947 66.11828 70.66916 72.84370
 [1] 59.91667 44.58333 49.41667 52.33333 59.66667 55.83333 42.66667 51.66667
 [9] 49.58333 48.33333 48.75000 42.58333 50.25000 55.00000 54.50000 56.91667
[17] 36.16667 50.33333 52.33333 49.16667 42.08333 56.91667 57.16667 53.41667
[25] 52.58333 57.25000 50.50000 49.50000 51.25000 53.33333
 [1] 20 31 29 22 23 29 24 34 26 13 25 14 24 24 21 26 20 13 21 23 21 33 18 20 22
[26] 25 19 22 31 16
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   18   27   28   19    0   17   17   18    19
[2,]    2   22   29    7    9    0   16   16   17    17
[3,]    3   22    9   21    2    0   14   15   16    18
[4,]    4   10   15    7   16    0   15   15   18    18
[5,]    5   26   24   25   15    0   12   15   17    18
[6,]    6   19    9   14   22    0   12   13   15    16
[1] "nearest neighbors are "
[1] 9 6 3 7 2
[1] "nearest neighbors are "
[1] 10  4 30 15 18
[1] "nearest neighbors are "
[1] 11  7 13 15  2
[1] "nearest neighbors are "
[1] 20 16  9 17 30
[1] "nearest neighbors are "
[1] 23 24 25 28  2
[1] "nearest neighbors are "
[1] 25 13 26  5 23
[1] "nearest neighbors are "
[1] 29 14 16  2  6
[1] "global no change :1"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 20
[1] "agent_behavior"
 [1] 3 2 3 3 3 3 4 3 4 1 4 1 3 2 3 2 1 3 2 4 2 3 2 2 2 1 2 2 2 4
 [1] -73.7443514 -78.9522295 -57.3512951 -29.7261835 -39.9654986 -48.9063258
 [7] -87.4253412 -24.1413465 -56.6062500  -9.8170942 -53.2994477 -11.4329606
[13] -84.9645168 -11.9328142 -46.9736401 -27.2451681  -9.3974133 -41.3148510
[19] -90.1044287 -40.3649803 -34.9965101 -73.2659913 -19.7223015 -92.9820284
[25] -17.4481551   0.6632201 -44.2242206 -42.4135313 -35.7150313  13.7634416
 [1] 74.29432 71.89651 69.62177 73.78615 64.90977 70.64490 75.80325 63.12372
 [9] 73.91216 71.66039 76.75080 73.17296 81.02321 68.86384 71.91746 62.37328
[17] 72.33403 76.86903 78.92998 72.14875 71.11294 68.83502 69.96719 77.71004
[25] 71.88357 58.92039 71.50394 72.77059 70.13543 65.29277
 [1] 50.00000 48.83333 51.33333 58.75000 46.91667 54.50000 51.50000 53.75000
 [9] 53.50000 58.33333 57.00000 57.25000 52.66667 58.75000 50.25000 47.83333
[17] 60.00000 56.33333 50.00000 53.16667 52.75000 51.00000 53.75000 47.75000
[25] 55.66667 50.41667 51.75000 53.83333 57.08333 58.50000
 [1] 21 16 15 20 22 14 15 10 20 25 20 30 25 17 27 20 23 27 24 24 25  7 27 25 28
[26] 19 24 23 13 21
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   18    2   13   14    0   16   17   18    18
[2,]    2   14    6    3   22    0   13   14   15    15
[3,]    3   22   29    2    6    0   14   14   15    15
[4,]    4   26   18    9   27    0   15   17   18    18
[5,]    5   26    8   24   16    0   11   16   17    18
[6,]    6   14   22    2    3    0   11   13   14    15
[1] "nearest neighbors are "
[1]  2 14  6  3 22
[1] "nearest neighbors are "
[1] 14  6  2  7 22
[1] "nearest neighbors are "
[1] 16 29 20 26 21
[1] "nearest neighbors are "
[1] 19 18  6 14  2
[1] "nearest neighbors are "
[1] 21 10 16 18 23
[1] "nearest neighbors are "
[1] 23 21 24 30  5
[1] "nearest neighbors are "
[1] 24 26  5 10 23
[1] "nearest neighbors are "
[1] 25 30  9 11 12
[1] "nearest neighbors are "
[1] 27  7  2 28  4
[1] "nearest neighbors are "
[1] 28 27  8 25  1
[1] "nearest neighbors are "
[1] 29  7 16  3 14
[1] "global no change :1"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 21
[1] "agent_behavior"
 [1] 4 1 4 3 3 3 1 3 4 2 1 2 3 2 2 3 2 3 2 3 3 1 2 3 2 3 1 4 2 3
 [1]   31.283685  -74.793399  -65.242608  -33.959180  -32.557681  -69.450323
 [7]  -55.460102   -3.632899  -63.150968  -81.968041  -36.765129 -120.245021
[13]  -18.971093   -1.244614  -17.321693  -22.596850  -71.324574  -51.586639
[19]  -54.762862  -12.836187 -111.081867  -40.669198 -107.892808  -33.463933
[25]  -34.343695  -52.090131  -57.817568  -19.104886  -16.459843  -49.110614
 [1] 68.69023 79.13292 79.04852 68.57971 80.08729 79.45825 71.81929 69.64325
 [9] 71.89535 72.49967 69.05757 78.57931 68.95331 69.98377 70.35070 75.46634
[17] 72.47704 69.88551 74.70257 71.73390 74.67849 78.64142 73.13159 72.65491
[25] 68.42177 83.25136 76.52563 66.87401 69.92833 70.62515
 [1] 63.58333 50.08333 51.00000 51.33333 62.66667 53.75000 48.00000 53.91667
 [9] 46.08333 48.83333 51.25000 48.16667 54.25000 57.91667 58.25000 59.58333
[17] 48.66667 52.75000 53.75000 59.16667 42.91667 56.41667 42.91667 56.41667
[25] 52.91667 62.83333 55.41667 54.41667 53.00000 52.16667
 [1] 25 31 33 23 24 26 28 33 29 16 23 14 24 26 19 25 21 15 22 22 21 31 19 21 19
[26] 22 21 19 30 19
[1] "No change"
[1] 4
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   22   13   27    5    0   16   17   18    19
[2,]    2    7   26    8   22    0   17   17   18    18
[3,]    3   22   20    8   15    0   14   17   18    18
[4,]    4   16   10   12   13    0   18   19   19    19
[5,]    5   26    8   22   23    0   14   15   17    17
[6,]    6   14   19    9   17    0   14   16   17    17
[1] "nearest neighbors are "
[1] 10 21 25 12  4
[1] "nearest neighbors are "
[1] 12 30 18 10 19
[1] "nearest neighbors are "
[1] 14  6  7  9 17
[1] "nearest neighbors are "
[1] 15 18  3 17 10
[1] "nearest neighbors are "
[1] 17  6 14 29  3
[1] "nearest neighbors are "
[1] 19 20  6 18 12
[1] "nearest neighbors are "
[1] 23  5 26  2  8
[1] "nearest neighbors are "
[1] 25 10  9 11  7
[1] "nearest neighbors are "
[1] 29  7  9 16 17
[1] "global no change :1"
[1] "fitness :-143.263901502539"
[1] "Minimum fitness threshold not reached after 21 iterations! Continuing PSO."
[1] "iteration number: "
[1] 22
[1] "agent_behavior"
 [1] 3 3 2 3 2 1 2 2 1 1 2 4 3 2 2 3 3 4 4 3 4 3 2 2 3 4 2 3 3 4
 [1] -78.784448 -47.123702 -60.866699 -80.966888 -50.533680 -62.992921
 [7] -23.596239 -62.973209 -35.139337 -14.306092 -85.956422   4.512137
[13] -75.088601 -35.051332 -44.861233 -87.795670 -41.840514 -50.640732
[19] -82.217250 -24.031687 -54.227633 -60.464797 -34.950253 -64.806071
[25] -27.338175 -57.772066 -15.578076 -20.652743 -67.777876  11.986126
 [1] 79.83265 58.62929 63.20364 80.27671 64.90977 70.16677 69.41622 64.92798
 [9] 68.95969 69.37637 76.71401 70.97636 80.76014 72.10875 66.75255 74.78641
[17] 76.03477 79.73421 76.69345 68.10179 73.17886 63.00963 76.55066 77.03697
[25] 73.78582 64.22866 67.94895 71.99419 72.59345 68.45884
 [1] 53.16667 43.75000 44.66667 54.08333 46.16667 50.75000 58.33333 47.33333
 [9] 53.75000 53.33333 52.25000 57.33333 54.83333 56.91667 46.41667 49.50000
[17] 57.66667 57.33333 50.25000 53.75000 52.33333 45.91667 56.83333 53.16667
[25] 56.50000 43.58333 54.83333 56.50000 53.58333 58.58333
 [1] 24 12 14 22 19 15 14 11 18 29 16 32 24 18 25 17 22 27 22 21 22 11 28 24 26
[26] 20 22 25 12 27
[1] "No change"
[1] 5
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   13   26   24   27    0   16   16   18    18
[2,]    2    6   22    8    7    0   15   15   17    18
[3,]    3   22    7   29   15    0   11   16   16    17
[4,]    4   10   30    9   25    0   15   17   18    18
[5,]    5   26    8    6    1    0   13   16   18    19
[6,]    6   20   22    2   14    0   14   14   15    15
[1] "nearest neighbors are "
[1]  3 22  7 29 15
[1] "nearest neighbors are "
[1]  5 26  8  6  1
[1] "nearest neighbors are "
[1]  7 29  9 11 14
[1] "nearest neighbors are "
[1]  8  5 28  2 22
[1] "nearest neighbors are "
[1] 11  7  9 29 15
[1] "nearest neighbors are "
[1] 14  7 29  6  9
[1] "nearest neighbors are "
[1] 15  3 11 21 10
[1] "nearest neighbors are "
[1] 23 28 21 10 24
[1] "nearest neighbors are "
[1] 24 18  1 12 23
[1] "nearest neighbors are "
[1] 27  1  2  7 22
[1] "global no change :1"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 23
[1] "agent_behavior"
 [1] 4 3 4 2 2 1 2 3 3 2 3 2 3 2 3 2 3 4 4 3 4 2 2 3 3 4 2 3 3 2
 [1]   20.113889  -63.078832  -55.477889  -87.911684  -20.614118  -13.063414
 [7]  -73.564227  -48.998480 -100.430220  -64.192264    5.611822 -127.737386
[13]  -38.635057  -35.840987 -110.122392  -45.371624  -25.888653  -59.997843
[19]  -69.342527  -27.738183  -72.425517  -57.783939 -124.216502  -94.645615
[25]   -4.462968  -53.383464  -58.596905  -38.777680    6.659198  -42.181546
 [1] 70.44692 76.46425 74.42891 71.34749 76.43343 70.68086 77.52345 73.96636
 [9] 81.03301 65.62633 70.37764 80.65354 70.94671 70.44092 79.42599 73.52887
[17] 72.11712 70.88593 77.51244 73.59309 72.06844 78.13255 77.60088 78.88367
[25] 71.90775 79.12366 81.99968 69.48281 65.84998 68.61055
 [1] 65.83333 50.66667 53.33333 45.58333 59.58333 56.25000 55.08333 49.16667
 [9] 49.58333 47.33333 56.50000 47.83333 54.58333 51.00000 45.58333 54.00000
[17] 54.66667 50.25000 50.91667 58.50000 47.58333 55.66667 43.66667 49.50000
[25] 62.83333 57.08333 58.91667 54.00000 54.00000 51.08333
 [1] 19 29 22 18 28 26 17 33 25 12 33 16 19 27 26 23 27 19 28 21 22 24 20 23 18
[26] 25 25 17 29 20
[1] "No change"
[1] 6
[1] "Max itr reset"
[1] 5
[1] "RE-INITIALIZING..."
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   25   18   27    7    0   13   16   16    18
[2,]    2   30   11   23    7    0   15   16   17    18
[3,]    3   29   17   22   13    0   13   17   18    19
[4,]    4    7    6   30   17    0   15   16   16    17
[5,]    5    6   19   22    8    0   16   16   16    17
[6,]    6   14    4    5   19    0    9   16   16    16
[1] "nearest neighbors are "
[1]  3 29 17 22 13
[1] "nearest neighbors are "
[1]  5  6 19 22  8
[1] "nearest neighbors are "
[1]  6 14  4  5 19
[1] "nearest neighbors are "
[1]  8 29  5 19 23
[1] "nearest neighbors are "
[1] 13 25  3  4 15
[1] "nearest neighbors are "
[1] 15 25 27 10 19
[1] "nearest neighbors are "
[1] 18  1 10 25 27
[1] "nearest neighbors are "
[1] 19 14  5  6 12
[1] "nearest neighbors are "
[1] 20  9 16 24  5
[1] "nearest neighbors are "
[1] 25  1 10 15  7
[1] "global no change :2"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 24
[1] "agent_behavior"
 [1] 3 1 4 2 3 3 4 2 1 1 3 4 2 2 3 3 2 1 1 2 3 3 4 1 3 3 2 2 2 3
 [1]  -86.385516  -50.497933  -83.360836   -2.908446  -56.605669 -109.880039
 [7]  -40.346479  -44.919667  -67.463699  -76.561736  -79.097917   -9.829089
[13]  -71.680959   -5.573677   18.809452  -66.170509    4.306912  -72.001365
[19]  -31.319681  -87.901475  -47.374674  -76.521250 -105.747989  -19.296727
[25]  -62.851225  -66.922251  -66.366099  -25.621812  -62.709348  -27.732009
 [1] 75.26953 74.75868 76.69489 70.31654 67.93477 77.52146 74.68293 70.12787
 [9] 75.08365 76.46386 72.34989 70.75370 74.95740 66.43292 63.64720 71.32501
[17] 68.30528 76.30179 68.73363 83.84545 70.89918 74.70577 80.20263 72.13207
[25] 73.13085 68.49809 76.01564 76.26073 75.98884 74.38731
 [1] 47.08333 53.75000 47.75000 57.91667 45.25000 46.00000 55.25000 53.41667
 [9] 52.50000 49.33333 50.16667 53.33333 50.16667 58.50000 56.50000 49.00000
[17] 59.16667 50.08333 53.83333 58.08333 47.33333 52.58333 50.41667 56.00000
[25] 47.83333 48.75000 56.83333 57.50000 57.08333 59.75000
 [1] 24 24 27 26 25 21 25 17 20 26 14 34 23 15 24 20 22 26 19 18 31 15 19 27 28
[26] 14 13 30 14 20
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   22    4   13   10    0   15   16   17    18
[2,]    2   24   15    8    9    0   17   18   19    20
[3,]    3    4   10   21   12    0   17   17   18    19
[4,]    4    1   10    3   13    0   16   16   17    19
[5,]    5   25   24   10   15    0   15   18   19    19
[6,]    6   11   14   10    8    0   15   16   17    18
[1] "nearest neighbors are "
[1]  4  1 10  3 13
[1] "nearest neighbors are "
[1]  8 29  6 14 19
[1] "nearest neighbors are "
[1] 13 18  1 26 22
[1] "nearest neighbors are "
[1] 14  6 27  8 19
[1] "nearest neighbors are "
[1] 17 20 11 18  7
[1] "nearest neighbors are "
[1] 20 17  5  8 13
[1] "nearest neighbors are "
[1] 27 22 23 14 26
[1] "nearest neighbors are "
[1] 28 16  3  6 21
[1] "nearest neighbors are "
[1] 29  8 11 16 26
[1] "global no change :2"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 25
[1] "agent_behavior"
 [1] 1 2 1 3 2 2 3 2 3 4 4 2 1 2 2 2 2 3 2 2 2 2 4 2 3 2 1 3 2 2
 [1] -16.229365 -23.654682 -10.687226 -38.425020 -40.879418 -68.215392
 [7] -33.636859 -14.737424   1.434561 -10.794198 -30.020707 -40.475336
[13] -39.777035 -50.319715 -54.976762 -61.385880 -45.067279 -54.825830
[19] -39.774794 -71.863057 -44.840480 -10.994870 -56.076150 -94.729779
[25] -14.041667 -42.010838 -19.982594  16.622717  -3.043243 -32.584356
 [1] 69.13224 58.97336 70.03896 68.01834 71.53194 64.66581 70.78798 68.06112
 [9] 67.68278 68.73460 68.92838 78.77689 65.72813 74.04122 68.88172 72.44384
[17] 77.55133 68.44244 64.97769 80.59231 73.83173 69.96413 79.41978 72.75656
[25] 69.11136 68.50823 75.58743 66.21334 68.00259 67.02445
 [1] 57.25000 48.33333 56.08333 50.33333 51.08333 43.75000 51.33333 53.75000
 [9] 59.33333 60.66667 53.83333 57.50000 50.50000 51.25000 49.25000 50.16667
[17] 58.08333 49.75000 49.75000 52.58333 53.50000 54.58333 52.75000 46.08333
[25] 57.66667 47.83333 57.50000 59.08333 54.66667 51.41667
 [1] 19 13 26 22 27 16 28 25 19 13 20 29 16 28 19 22 23 17 16 30 25 29 34 17 19
[26] 27 31 23 28 20
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   30    7   10   21    0   11   15   16    16
[2,]    2   24    5   10    6    0   16   18   18    19
[3,]    3    4   26   10   15    0   12   17   19    19
[4,]    4    3   21    1    7    0   12   15   17    18
[5,]    5   21   26    6   14    0   16   16   17    17
[6,]    6   13   24   14    5    0   14   15   16    17
[1] "nearest neighbors are "
[1]  2 24  5 10  6
[1] "nearest neighbors are "
[1]  5 21 26  6 14
[1] "nearest neighbors are "
[1]  6 13 24 14  5
[1] "nearest neighbors are "
[1]  8 27 29 23 12
[1] "nearest neighbors are "
[1] 12 20  8 27  7
[1] "nearest neighbors are "
[1] 14 20 26  6  5
[1] "nearest neighbors are "
[1] 15  6 16 10  3
[1] "nearest neighbors are "
[1] 16 24 15 26  4
[1] "nearest neighbors are "
[1] 17 23  5  8 18
[1] "nearest neighbors are "
[1] 19  9 18  2  5
[1] "nearest neighbors are "
[1] 20 14 23 12  5
[1] "nearest neighbors are "
[1] 21  4  1  5  7
[1] "nearest neighbors are "
[1] 22  5 26  4  7
[1] "nearest neighbors are "
[1] 24  6 16  2 13
[1] "nearest neighbors are "
[1] 26 14  5  3 16
[1] "nearest neighbors are "
[1] 29  8 27  9 14
[1] "nearest neighbors are "
[1] 30  1  7 10 11
[1] "global no change :2"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 26
[1] "agent_behavior"
 [1] 3 3 3 2 4 2 3 3 2 2 2 1 4 3 3 1 4 3 2 1 4 3 1 1 2 1 3 2 2 2
 [1] -85.9716257 -86.7737961 -27.3096039  -2.8791794 -77.1045944 -18.1331241
 [7]  16.5883054 -29.0037780 -60.6766156 -26.4119119 -65.9184470   3.0532743
[13] -88.0403173 -52.0893703   3.0718316  20.0917184  16.9467506 -53.1375924
[19]  34.6928721 -77.7811518 -40.3547799 -17.2956693 -87.8419026 -12.8524255
[25] -85.8755785 -28.3645459 -55.6102358 -69.1739500 -71.8452942   0.9474198
 [1] 75.23220 80.45324 69.06041 71.08341 77.29971 75.23269 67.56870 70.42197
 [9] 76.74138 74.80511 80.87308 70.73025 78.76715 70.52393 71.27957 66.39832
[17] 63.58792 75.93055 65.09173 78.39714 68.66944 67.30004 69.44717 72.49473
[25] 80.24330 75.21836 72.28114 81.90297 74.86906 69.69688
 [1] 47.58333 49.91667 55.41667 61.41667 52.33333 59.33333 62.25000 54.16667
 [9] 52.33333 57.25000 55.41667 57.25000 50.25000 47.83333 59.16667 55.41667
[17] 54.25000 51.66667 60.66667 53.75000 47.41667 54.75000 42.33333 55.83333
[25] 51.25000 60.00000 55.25000 56.25000 50.50000 56.25000
 [1] 23 29 18 20 21 27 19 23 27 27 27 31 24 27 28 33 28 30 25 20 29 20 21 31 26
[26] 21 13 26 22 30
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   14   29   21   25    0   16   17   18    19
[2,]    2    9   12   16   18    0   16   16   16    17
[3,]    3   17    5    8    4    0   16   19   19    20
[4,]    4    9   19   24   15    0   17   17   17    18
[5,]    5    6   21    3   17    0   18   18   19    19
[6,]    6   15    8   11   14    0   13   16   16    16
[1] "nearest neighbors are "
[1]  4  9 19 24 15
[1] "nearest neighbors are "
[1]  6 15  8 11 14
[1] "nearest neighbors are "
[1]  9 18  2  4 15
[1] "nearest neighbors are "
[1] 10 20 25 30 26
[1] "nearest neighbors are "
[1] 11 25  6 16 28
[1] "nearest neighbors are "
[1] 19 14  4 22 11
[1] "nearest neighbors are "
[1] 25 11 10 20  2
[1] "nearest neighbors are "
[1] 28 14 11  4  1
[1] "nearest neighbors are "
[1] 29 13 15  1  2
[1] "nearest neighbors are "
[1] 30 10 12  6 11
[1] "global no change :2"
[1] "fitness :-143.263901502539"
[1] "iteration number: "
[1] 27
[1] "agent_behavior"
 [1] 2 1 3 3 3 2 2 3 4 3 4 3 2 3 3 3 3 3 3 1 4 3 1 2 4 3 3 1 4 2
 [1]  -92.982222  -31.526711  -43.313924  -67.152253  -46.280483 -100.129341
 [7]  -46.111912  -54.748610  -30.034327  -32.273929  -36.255848  -72.447232
[13]  -19.739108  -58.370510  -58.609723  -80.505585  -55.443102  -84.885765
[19]  -38.072635  -79.063254  -56.422984  -24.115137  -34.577827 -189.676559
[25]   -2.650993  -45.870689  -52.152832  -55.227189   -6.296364  -75.008111
 [1] 72.06614 71.15383 71.64763 74.09712 68.12731 63.71526 71.66935 66.76033
 [9] 79.96899 70.92448 69.71329 71.10308 70.99328 74.21956 73.72952 61.10112
[17] 71.30074 73.49230 75.84180 72.78235 74.98914 65.40636 72.62011 80.84440
[25] 71.12111 70.18171 70.41541 71.18180 66.43352 69.85768
 [1] 44.83333 56.66667 51.16667 50.66667 48.41667 36.41667 51.08333 48.08333
 [9] 64.41667 55.83333 52.91667 50.25000 57.50000 53.00000 52.91667 40.00000
[17] 50.66667 48.33333 60.50000 48.33333 53.25000 50.58333 60.25000 37.00000
[25] 56.50000 51.91667 48.16667 51.50000 56.08333 47.58333
 [1] 19 18 26 22 23 16 25 17 21 19 21 14 21 21 20 11 21 18 17 19 23 22 12 13 31
[26] 20 26 19 20 16
[1] "global fitness updated to :"
[1] -189.6766
[1] -189.6766
[1] "min fit index"
[1] 24
[1] 24
[1] "global best num features updated to"
[1] 13
[1] "CV error"
[1] 80.8444
[1] "CVperm error"
[1] 37
[1] 13
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   15   30   29   13    0   11   13   15    16
[2,]    2   22    6   15   18    0   14   16   18    18
[3,]    3   15   27   29    1    0   18   18   18    19
[4,]    4   12    9   20   24    0   16   17   17    17
[5,]    5   26   17   27    8    0   13   14   15    16
[6,]    6   11    2    8   10    0   15   16   17    17
[1] "nearest neighbors are "
[1]  1 15 30 29 13
[1] "nearest neighbors are "
[1]  6 11  2  8 10
[1] "nearest neighbors are "
[1]  7 15 30 10 20
[1] "nearest neighbors are "
[1] 13  1 22 26  5
[1] "nearest neighbors are "
[1] 24 19  4 12 18
[1] "nearest neighbors are "
[1] 30  1  7 16  8
[1] "global no change :0"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 28
[1] "agent_behavior"
 [1] 2 3 3 1 2 3 2 3 2 2 3 3 2 2 4 4 1 4 3 4 2 2 2 2 3 2 3 4 3 2
 [1]   -5.705717  -54.557211    2.252461  -69.802587 -105.257811  -25.830425
 [7]   31.955025  -62.220941  -32.486502  -81.774855  -27.782639  -55.507370
[13]  -68.766094  -27.969356  -23.849223  -26.979594    2.883416  -72.301531
[19]  -23.474017  -11.263666  -54.850594  -72.136516  -80.789784  -20.794582
[25]  -44.887435  -60.197457  -76.323549  -13.737263  -37.820561   -7.724918
 [1] 66.01236 79.30538 63.40557 74.80143 77.61217 70.90851 66.61657 77.94419
 [9] 71.06548 78.05194 74.00350 69.20753 77.01837 72.62417 70.36075 73.99440
[17] 67.12786 71.53606 66.95238 65.58607 75.00800 77.26821 74.39281 70.84073
[25] 72.37900 66.92585 70.73441 70.38382 72.90502 72.40104
 [1] 54.41667 55.66667 56.58333 51.75000 48.83333 54.83333 63.91667 55.50000
 [9] 52.75000 50.33333 57.08333 45.83333 50.08333 55.66667 56.50000 55.41667
[17] 57.25000 46.16667 53.16667 53.33333 53.58333 53.75000 46.41667 53.50000
[25] 51.58333 46.25000 46.83333 59.00000 51.25000 58.58333
 [1] 23 28 16 20 17 24 20 22 26 25 25 27 29 25 20 29 23 24 20 22 23 20 26 29 26
[26] 19 19 19 31 27
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   28   11   14    3    0   12   16   16    19
[2,]    2    9    6    7   17    0   14   16   16    17
[3,]    3    7   19    1    5    0   18   18   19    19
[4,]    4    5   22   11   13    0   17   18   19    19
[5,]    5   10    4   26    3    0   16   17   18    19
[6,]    6    2    9   19   28    0   16   16   16    17
[1] "nearest neighbors are "
[1]  1 28 11 14  3
[1] "nearest neighbors are "
[1]  5 10  4 26  3
[1] "nearest neighbors are "
[1]  7  9  2 24  3
[1] "nearest neighbors are "
[1]  9  2  7  6 18
[1] "nearest neighbors are "
[1] 10 29  5 27  9
[1] "nearest neighbors are "
[1] 13 20 15 27 29
[1] "nearest neighbors are "
[1] 14 28  1 11 30
[1] "nearest neighbors are "
[1] 21 28  8 20 16
[1] "nearest neighbors are "
[1] 22 16 25 28  4
[1] "nearest neighbors are "
[1] 23 12 16 17 18
[1] "nearest neighbors are "
[1] 24 29  7 18 25
[1] "nearest neighbors are "
[1] 26 25 19  5 27
[1] "nearest neighbors are "
[1] 30 16 14 20 21
[1] "global no change :0"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 29
[1] "agent_behavior"
 [1] 2 2 3 1 1 3 3 1 3 3 2 1 1 2 2 2 2 3 2 2 3 3 4 2 1 4 2 3 2 3
 [1]  -20.2532952  -89.1866325  -15.4505864 -125.2832803  -46.4568985
 [6]  -67.6906601  -32.5681312  -20.9581924   -8.6973750  -41.5704568
[11]  -49.6628524  -84.2651405  -65.9748010  -34.1304575   -6.7300737
[16]  -19.4152668  -71.2793077  -59.6265069  -69.7889282  -83.8306578
[21]  -58.5787910   -7.8875227  -27.2645064 -121.9174143  -82.2480361
[26]    0.5067581  -93.5672103  -41.7257439  -32.9958101  -61.1332026
 [1] 72.77793 82.10248 68.79466 77.64757 72.60956 71.54571 68.01363 68.72194
 [9] 71.15614 69.09439 69.99318 78.70909 76.61920 69.56094 65.53541 66.61790
[17] 71.87707 76.12985 73.38203 71.58431 72.08697 69.39569 70.31654 82.76985
[25] 69.84355 71.60319 81.12253 73.11788 71.94765 66.66603
 [1] 56.00000 56.08333 55.25000 43.50000 51.50000 48.91667 51.50000 53.16667
 [9] 59.41667 49.41667 52.33333 54.58333 54.33333 50.91667 51.91667 50.91667
[17] 47.16667 53.75000 50.33333 43.00000 49.91667 56.00000 53.50000 49.75000
[25] 45.66667 61.25000 51.50000 52.50000 57.16667 47.16667
 [1] 28 18 23 20 26 20 22 25 22 25 17 16 20 26 27 26 23 23 20 26 23 26 25 19 17
[26] 23 24 27 18 16
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   10   18   25   14    0   17   17   17    18
[2,]    2   12    8    7   19    0   16   17   18    18
[3,]    3   23    1   13   16    0   18   19   19    19
[4,]    4   29   11    9   21    0   16   17   18    19
[5,]    5   19   22   15   27    0   16   16   17    18
[6,]    6   16   18    9    1    0   16   17   18    20
[1] "nearest neighbors are "
[1]  1 10 18 25 14
[1] "nearest neighbors are "
[1]  2 12  8  7 19
[1] "nearest neighbors are "
[1] 11 14 29 25  4
[1] "nearest neighbors are "
[1] 14  8 11 13 22
[1] "nearest neighbors are "
[1] 15 10 20  5 13
[1] "nearest neighbors are "
[1] 16  6 22 18  1
[1] "nearest neighbors are "
[1] 17 20 25 18 28
[1] "nearest neighbors are "
[1] 19  5 13  8 21
[1] "nearest neighbors are "
[1] 20 23 15 17  3
[1] "nearest neighbors are "
[1] 24 25  2 20 11
[1] "nearest neighbors are "
[1] 27  5 15  1  7
[1] "nearest neighbors are "
[1] 29 11  4 30 18
[1] "global no change :0"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 30
[1] "agent_behavior"
 [1] 2 3 3 3 3 2 3 2 2 2 1 3 2 3 3 2 4 1 2 3 2 2 2 2 2 3 3 2 2 4
 [1]    4.744194  -32.015264  -77.594918  -38.735754 -167.274275  -42.860004
 [7]  -51.274607  -89.082409  -43.119004  -62.400574  -13.576629  -64.073216
[13]  -35.587295  -96.213983 -114.042316    4.230716  -88.503197  -51.241743
[19]  -43.192156  -24.446957    7.465860  -65.926978  -12.453642  -16.856521
[25]  -21.191567   -5.046656  -31.400888  -51.267157  -71.984298  -51.988362
 [1] 68.96783 72.93336 74.07201 76.70927 82.07607 77.72352 68.33068 80.20285
 [9] 66.54047 75.94981 71.14714 79.12525 74.04928 81.31098 70.49028 66.94931
[17] 76.53397 62.14229 69.39601 67.38939 67.65834 74.20055 67.45285 70.43949
[25] 72.23074 63.34266 74.17412 67.14737 75.88928 76.26888
 [1] 59.91667 55.16667 49.91667 59.41667 43.16667 57.33333 47.16667 53.75000
 [9] 47.91667 54.83333 55.25000 53.58333 58.75000 50.25000 39.50000 58.25000
[17] 48.83333 44.16667 51.66667 52.50000 57.33333 52.83333 55.41667 55.25000
[25] 57.08333 52.33333 55.16667 49.16667 50.58333 55.41667
 [1] 22 25 19 21 12 26 24 19 22 19 29 28 18 26 18 21 22 17 20 22 26 18 21 26 24
[26] 22 28 17 24 23
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    9   25    2   23    0   14   14   17    17
[2,]    2   17   23    1   21    0   13   16   17    17
[3,]    3   10   13   15   17    0   16   17   17    17
[4,]    4    8   10   12   22    0   16   16   17    17
[5,]    5   15   22   10   16    0   16   16   17    17
[6,]    6   21   22   30    5    0   18   18   19    20
[1] "nearest neighbors are "
[1]  1  9 25  2 23
[1] "nearest neighbors are "
[1]  6 21 22 30  5
[1] "nearest neighbors are "
[1]  8 19  4 10 13
[1] "nearest neighbors are "
[1]  9  7  1 18 14
[1] "nearest neighbors are "
[1] 10 15  3  4  8
[1] "nearest neighbors are "
[1] 13 14 27  3  8
[1] "nearest neighbors are "
[1] 16  5 22 30 26
[1] "nearest neighbors are "
[1] 19  8 10 11 18
[1] "nearest neighbors are "
[1] 21 24  2 30  1
[1] "nearest neighbors are "
[1] 22  5  3  4 10
[1] "nearest neighbors are "
[1] 23  2  1  7  9
[1] "nearest neighbors are "
[1] 24 21 25  2 14
[1] "nearest neighbors are "
[1] 25  1 11  9 14
[1] "nearest neighbors are "
[1] 28 15 18 17  3
[1] "nearest neighbors are "
[1] 29 15  5  3  8
[1] "global no change :0"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 31
[1] "agent_behavior"
 [1] 3 3 4 3 3 2 4 3 3 4 2 2 2 3 3 3 3 4 1 2 3 2 3 2 2 2 2 4 4 3
 [1]   -5.229205  -78.794209 -131.979666  -48.089063  -72.336586  -67.471883
 [7]  -54.953569   44.101403  -40.029897  -46.748475  -67.807362 -160.724023
[13]  -29.986433  -31.256374  -18.216905  -55.905473  -62.122966  -29.326949
[19]  -38.783078 -143.810461  -25.289189    7.608769  -38.872090  -57.856027
[25]  -62.397745  -66.519897  -75.937353   -4.496387 -115.626445   -5.992860
 [1] 69.53827 73.53914 81.39593 70.36024 77.49762 75.16862 79.62708 63.53578
 [9] 70.20295 73.17545 71.42511 81.87965 67.93668 69.25127 67.13581 79.37806
[17] 79.74277 72.77448 74.99146 77.39088 68.38360 61.54643 73.13805 75.87424
[25] 77.41137 69.51610 76.24808 70.25534 81.04953 64.93342
 [1] 57.58333 51.41667 45.00000 49.83333 51.66667 52.58333 60.00000 60.08333
 [9] 50.83333 52.91667 51.50000 42.91667 49.66667 53.00000 52.58333 56.83333
[17] 55.50000 56.00000 55.41667 39.08333 52.41667 51.25000 54.00000 55.66667
[25] 51.75000 46.66667 53.33333 57.08333 48.83333 51.91667
 [1] 24 14 22 24 25 20 19 27 25 24 14 15 27 22 24 25 26 24 26 21 24 26 25 19 29
[26] 21 17 27 20 26
[1] "No change"
[1] 4
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    9   25   27    7    0   15   15   17    19
[2,]    2   14   12   20   24    0   16   17   17    17
[3,]    3   10    4    5   11    0   14   16   17    18
[4,]    4   12    3   25   10    0   15   16   17    18
[5,]    5    3    6   26    2    0   17   17   18    19
[6,]    6   29    5    2   23    0   16   17   18    19
[1] "nearest neighbors are "
[1]  6 29  5  2 23
[1] "nearest neighbors are "
[1] 11  3 10 22 12
[1] "nearest neighbors are "
[1] 12  4  2 15  7
[1] "nearest neighbors are "
[1] 13 27  7 25 28
[1] "nearest neighbors are "
[1] 20 23  2 21 26
[1] "nearest neighbors are "
[1] 22 26 10 11 30
[1] "nearest neighbors are "
[1] 24  2 23 25  1
[1] "nearest neighbors are "
[1] 25  7  1 17  4
[1] "nearest neighbors are "
[1] 26 22  5 20 23
[1] "nearest neighbors are "
[1] 27 13 14  7  1
[1] "global no change :0"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 32
[1] "agent_behavior"
 [1] 2 2 3 2 1 2 4 2 3 3 2 4 3 2 2 4 4 2 2 4 2 2 2 4 2 1 1 3 3 2
 [1]  -32.812722  -63.855692  -79.527615  -58.733672    9.012136  -50.925436
 [7]  -31.727142  -71.400459  -48.608644  -38.301478  -31.150182   -1.568673
[13]  -66.725361 -108.102591  -50.145882  -60.700411 -102.157261  -54.785278
[19]  -38.899287   -7.522080  -70.181977  -39.005483   -2.783598  -56.874312
[25]  -86.626235  -24.394435   13.303292  -58.179143  -17.041437  -26.968888
 [1] 64.60800 76.84690 77.15552 77.58007 64.38697 75.17751 70.81513 71.68161
 [9] 66.51718 75.15272 72.74519 67.04101 76.67841 82.40840 71.79433 64.70826
[17] 72.11327 64.97221 70.34046 68.42866 79.84700 67.36170 71.83702 79.24607
[25] 73.70403 70.78798 69.58934 76.65856 67.51435 69.76499
 [1] 48.50000 53.16667 51.25000 55.83333 58.91667 54.08333 50.83333 50.58333
 [9] 47.25000 56.58333 53.33333 54.00000 53.33333 50.33333 53.58333 45.75000
[17] 43.50000 45.83333 54.83333 57.83333 58.08333 51.83333 64.91667 57.41667
[25] 46.83333 55.00000 57.25000 57.75000 51.83333 58.91667
 [1] 21 24 22 22 16 24 30 15 21 24 29 28 22 23 18 15 18 18 17 20 17 17 14 23 21
[26] 24 33 16 27 12
[1] "No change"
[1] 5
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    7   12   13   30    0   15   17   19    19
[2,]    2   20    8   24   25    0   12   15   17    17
[3,]    3   28   24    5   15    0   16   17   18    18
[4,]    4    2    7   10   27    0   18   18   18    19
[5,]    5   22    3   25   27    0   15   18   19    19
[6,]    6   10   22   24    2    0   18   19   19    20
[1] "nearest neighbors are "
[1]  1  7 12 13 30
[1] "nearest neighbors are "
[1]  2 20  8 24 25
[1] "nearest neighbors are "
[1]  4  2  7 10 27
[1] "nearest neighbors are "
[1]  6 10 22 24  2
[1] "nearest neighbors are "
[1]  8 21  2 13 28
[1] "nearest neighbors are "
[1] 11  7 26 14 16
[1] "nearest neighbors are "
[1] 14 25  8 11 27
[1] "nearest neighbors are "
[1] 15 10  3 18 19
[1] "nearest neighbors are "
[1] 18 10 22 16 19
[1] "nearest neighbors are "
[1] 19 25 10 17 18
[1] "nearest neighbors are "
[1] 21  8 30 20  9
[1] "nearest neighbors are "
[1] 22 25  5 10 18
[1] "nearest neighbors are "
[1] 23 30 16 24 20
[1] "nearest neighbors are "
[1] 25 14 22 19  2
[1] "nearest neighbors are "
[1] 30 23 16 21 22
[1] "global no change :0"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 33
[1] "agent_behavior"
 [1] 2 4 2 2 2 4 3 1 2 2 2 3 3 4 1 3 3 2 3 2 4 2 2 1 1 3 3 3 3 3
 [1]  -43.499159  -47.184501  -75.778420  -71.681580  -44.865881  -18.537992
 [7]  -86.023945    5.283264  -89.296143  -80.065459 -133.104145  -18.787852
[13]  -38.259951  -26.360183  -72.793043  -80.004580  -63.948681  -83.354842
[19]  -14.237059  -89.237328   37.328304  -60.126193  -89.308402  -32.934195
[25]  -72.127945  -92.211466  -67.883035  -53.093485 -148.090724   17.379733
 [1] 73.05589 69.98993 74.53447 69.22268 69.29893 67.29093 79.91691 67.33729
 [9] 80.02590 69.78582 78.85568 68.06818 64.24290 71.91598 77.86921 80.19031
[17] 77.24428 85.23157 72.94590 75.26413 70.64040 72.34342 80.83895 67.42775
[25] 78.80438 66.79835 72.61449 73.85355 84.51208 64.91799
 [1] 52.08333 51.91667 49.83333 46.25000 49.41667 53.58333 53.16667 55.66667
 [9] 52.16667 46.50000 45.41667 56.58333 47.50000 53.91667 50.58333 51.91667
[17] 54.00000 55.83333 56.91667 47.41667 65.83333 48.50000 50.25000 51.75000
[25] 49.83333 41.08333 53.58333 51.41667 47.16667 55.66667
 [1] 27 19 21 19 24 22 21 28 22 16 15 17 20 28 28 27 23 28 29 22 27 26 28 20 32
[26] 16 12 26 17 28
[1] "No change"
[1] 6
[1] "Max itr reset"
[1] 5
[1] "RE-INITIALIZING..."
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    8   12   29   13    0   15   18   18    19
[2,]    2   12   10   29    6    0   16   17   18    19
[3,]    3    5   27    8   14    0   15   15   17    17
[4,]    4   12   10    5   13    0   16   17   19    19
[5,]    5    3   14   17    8    0   15   16   17    18
[6,]    6   24   10    2   27    0   16   18   19    20
[1] "nearest neighbors are "
[1]  4 12 10  5 13
[1] "nearest neighbors are "
[1]  5  3 14 17  8
[1] "nearest neighbors are "
[1] 11 16 29 10 12
[1] "nearest neighbors are "
[1] 15 18  8 14 23
[1] "nearest neighbors are "
[1] 22 19 10 14  4
[1] "nearest neighbors are "
[1] 23 25 15 20 24
[1] "nearest neighbors are "
[1] 24  6 23 12 16
[1] "nearest neighbors are "
[1] 25 16  9 23 17
[1] "nearest neighbors are "
[1] 28  9 10 15 11
[1] "global no change :1"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 34
[1] "agent_behavior"
 [1] 2 2 2 2 3 3 3 3 3 1 4 2 2 3 1 3 2 3 2 3 2 2 1 2 4 1 4 2 4 2
 [1]  -80.758281  -62.970387  -32.319972  -15.372463  -19.133206  -84.784078
 [7]  -63.344931 -122.341316  -58.027785  -47.984078  -49.273723 -106.430958
[13]  -16.919684 -106.673578  -73.928859  -91.945067  -61.058986    8.786771
[19]  -68.056580  -50.612576  -56.612753  -44.969093   -1.994633  -35.604370
[25]  -62.430515  -31.912561   18.058223   10.849699   -8.921768 -100.238721
 [1] 76.78044 79.58650 66.41854 69.08207 68.37967 78.65379 70.36596 77.07432
 [9] 69.02222 79.29379 71.12747 75.61952 68.52030 81.89532 70.66456 76.25265
[17] 65.49968 65.90174 70.30071 78.71342 68.98164 66.84988 62.55802 73.52996
[25] 70.30428 71.62494 71.17623 69.24673 65.34496 78.25229
 [1] 51.08333 56.08333 49.50000 56.91667 55.91667 50.33333 46.33333 45.33333
 [9] 47.41667 58.33333 49.00000 44.33333 56.50000 52.83333 46.33333 51.50000
[17] 47.83333 61.75000 49.41667 59.50000 51.75000 50.58333 56.25000 55.50000
[25] 51.00000 54.33333 59.33333 61.41667 50.83333 52.75000
 [1] 21 24 23 20 19 25 25 16 22 25 27 22 19 17 21 14 12 13 16 20 13 16 13 24 15
[26] 24 34 22 28 12
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    2    9    8   12    0   17   17   19    19
[2,]    2   24    1    6   23    0   16   17   17    17
[3,]    3   13    5   26   28    0   14   16   17    17
[4,]    4   19   18   17    8    0   14   15   16    18
[5,]    5   22    3   17   26    0   15   16   17    17
[6,]    6    2   22    5   16    0   17   17   18    19
[1] "nearest neighbors are "
[1]  1  2  9  8 12
[1] "nearest neighbors are "
[1]  2 24  1  6 23
[1] "nearest neighbors are "
[1]  3 13  5 26 28
[1] "nearest neighbors are "
[1]  4 19 18 17  8
[1] "nearest neighbors are "
[1] 12 14 27  1 15
[1] "nearest neighbors are "
[1] 13  3 26 28  7
[1] "nearest neighbors are "
[1] 17 25 19 23  4
[1] "nearest neighbors are "
[1] 19 18  4  8 17
[1] "nearest neighbors are "
[1] 21 30 23  8 20
[1] "nearest neighbors are "
[1] 22  5 16 30  6
[1] "nearest neighbors are "
[1] 24  2  8 30 18
[1] "nearest neighbors are "
[1] 28  3 10 13 21
[1] "nearest neighbors are "
[1] 30 21  8 16 19
[1] "global no change :1"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 35
[1] "agent_behavior"
 [1] 3 4 2 2 3 2 3 1 3 3 3 2 3 3 1 1 1 2 2 3 2 2 2 2 3 3 2 3 2 3
 [1]  -54.663001  -65.410896  -49.380248  -31.274909  -92.717612  -15.212033
 [7]  -66.822276  -43.931428  -80.558962  -26.675663 -125.073888   -5.354727
[13]    7.552758  -38.090887  -14.155337  -69.372103  -40.423400  -91.495799
[19]  -75.565911 -122.983303    7.815203  -61.314753  -66.541576  -30.836688
[25]  -28.955739  -59.440602  -24.201225  -69.562229 -124.620141    4.498529
 [1] 76.90230 71.24127 69.77756 63.43680 70.12686 62.13332 79.01597 74.11962
 [9] 83.06634 64.23665 71.82538 72.74519 65.57278 69.05757 70.96743 82.13957
[17] 78.80438 85.06431 80.95409 79.22545 67.98999 70.95234 81.57347 67.57643
[25] 75.17751 69.44115 71.96146 71.42002 82.50736 67.19120
 [1] 52.33333 47.25000 48.08333 49.00000 41.58333 50.00000 53.83333 50.33333
 [9] 56.50000 52.08333 39.08333 62.58333 57.08333 49.16667 59.50000 55.08333
[17] 57.08333 53.58333 51.75000 45.08333 55.91667 46.41667 55.08333 50.50000
[25] 55.75000 48.91667 61.66667 48.41667 47.58333 54.00000
 [1] 30 24 26 18 22 20 26 33 23 15 17 20 22 27 19 29 30 29 31 21 30 27 29 24 30
[26] 19 12 20 22 31
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   25   16    9   18    0   14   15   17    17
[2,]    2    6   10   24    8    0   16   17   18    19
[3,]    3   28   14   26    4    0   16   17   17    18
[4,]    4   14   12    3   27    0   15   16   18    18
[5,]    5   26   17    8   10    0   17   18   19    19
[6,]    6    2   22   24   10    0   16   17   18    19
[1] "nearest neighbors are "
[1]  3 28 14 26  4
[1] "nearest neighbors are "
[1]  4 14 12  3 27
[1] "nearest neighbors are "
[1]  6  2 22 24 10
[1] "nearest neighbors are "
[1] 12 15  4  1 10
[1] "nearest neighbors are "
[1] 18 19 17  1 16
[1] "nearest neighbors are "
[1] 19 16 18  8 30
[1] "nearest neighbors are "
[1] 21  8 22 23 30
[1] "nearest neighbors are "
[1] 22 16 20  6 21
[1] "nearest neighbors are "
[1] 23 17 30 21  9
[1] "nearest neighbors are "
[1] 24  8  2  6 18
[1] "nearest neighbors are "
[1] 27 15  4 14  2
[1] "nearest neighbors are "
[1] 29 26  9 20  2
[1] "global no change :1"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 36
[1] "agent_behavior"
 [1] 2 1 2 2 3 3 1 3 4 2 2 2 2 3 2 3 3 3 2 4 3 3 1 3 2 1 2 2 4 2
 [1]  -22.4535048  -58.6180412    4.6553007    4.4386760  -52.6955349
 [6]  -80.3478966    5.5578162 -140.0532953  -52.1349435  -40.6371669
[11]  -12.8648866 -101.1872068  -42.2370384  -86.5878115  -98.7697181
[16]   -2.0038890  -33.7504119    0.4783073  -49.8759391  -23.5910798
[21]  -55.3083260  -92.0313805  -20.4815586  -75.4171648  -46.9943962
[26]   -4.2507611    1.6590940  -37.4591372   -0.9089378 -173.2202069
 [1] 68.59676 78.54179 62.03864 67.48348 71.36486 79.38776 62.90359 80.00308
 [9] 66.57850 77.65016 72.22449 80.42684 75.00044 82.12817 76.05697 61.46896
[17] 62.86372 65.04070 67.90701 69.52125 69.78894 72.70931 63.48268 76.91677
[25] 65.34585 65.33500 71.37273 79.55243 64.71209 81.92434
 [1] 56.83333 55.00000 54.33333 57.91667 49.91667 51.50000 55.83333 46.08333
 [9] 49.33333 57.25000 57.83333 47.91667 57.91667 57.08333 47.66667 54.25000
[17] 49.75000 56.50000 49.75000 56.16667 51.00000 45.66667 50.75000 51.83333
[25] 49.58333 52.66667 56.25000 64.33333 53.16667 40.91667
 [1] 16 26 19 23 24 26 18 13 15 27 26 27 19 17 19 15 14 19 18 19 17 19 19 22 14
[26] 26 34 17 25 14
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    9   12    4   14    0   15   17   19    19
[2,]    2   24    7    8   12    0   14   16   19    19
[3,]    3   23   16   27   13    0   14   16   17    18
[4,]    4   15   27   10   16    0   16   17   18    18
[5,]    5   29   22    2    6    0   17   19   20    20
[6,]    6   29    3    4   10    0   15   19   19    19
[1] "nearest neighbors are "
[1]  1  9 12  4 14
[1] "nearest neighbors are "
[1]  3 23 16 27 13
[1] "nearest neighbors are "
[1]  4 15 27 10 16
[1] "nearest neighbors are "
[1] 10 13 28 29 11
[1] "nearest neighbors are "
[1] 11 13 27 10 12
[1] "nearest neighbors are "
[1] 12 15  1 11 10
[1] "nearest neighbors are "
[1] 13 11 10 16 24
[1] "nearest neighbors are "
[1] 15  4 12  7 11
[1] "nearest neighbors are "
[1] 19  8  9 18 22
[1] "nearest neighbors are "
[1] 25 17  9 21 30
[1] "nearest neighbors are "
[1] 27 11  3  4 10
[1] "nearest neighbors are "
[1] 28 21 30 10 20
[1] "nearest neighbors are "
[1] 30 16  8  9 21
[1] "global no change :1"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 37
[1] "agent_behavior"
 [1] 3 1 3 3 2 2 3 4 2 2 3 4 4 2 2 3 2 2 1 3 4 3 2 3 4 2 3 3 3 1
 [1]  -35.154858  -75.779119   -7.766808 -106.016522 -120.630946   -7.948617
 [7]  -36.040947  -48.444014  -43.744088  -12.604875  -38.750345  -21.124034
[13]  -30.610842  -31.904977  -78.752579  -43.903359  -34.323434  -98.091459
[19]  -76.413022  -85.664217  -42.959354 -162.594946  -36.405066  -31.114192
[25]  -54.681088  -42.271122  -47.920480  -43.654445  -70.343304    9.379119
 [1] 72.34158 70.45128 68.84124 68.28664 77.50498 67.36245 71.75364 73.82517
 [9] 79.87003 63.99067 70.93189 71.02026 71.88732 68.10827 79.27324 77.65188
[17] 77.83438 80.89859 79.29776 74.95103 71.60702 82.55687 72.37950 67.73041
[25] 78.07258 64.26483 61.87955 69.76119 80.15957 67.12418
 [1] 52.58333 45.75000 56.83333 37.08333 43.83333 58.50000 55.00000 50.50000
 [9] 60.66667 52.83333 55.00000 57.25000 52.58333 49.00000 51.25000 53.41667
[17] 57.33333 49.91667 50.83333 46.00000 49.83333 39.58333 51.91667 52.41667
[25] 53.50000 48.08333 47.75000 49.66667 57.00000 54.00000
 [1] 28 21 23 22 21 16 21 30 23 19 18 21 29 28 27 34 30 25 29 26 29 23 29 20 30
[26] 17 10 25 20 33
[1] "No change"
[1] 4
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   16    7    9   18    0   14   17   17    17
[2,]    2   10   12   28    6    0   14   16   16    17
[3,]    3    6   18   23    8    0   17   18   18    19
[4,]    4    8   24   21    6    0   16   18   19    20
[5,]    5   22   21   11   29    0   14   16   17    17
[6,]    6    2    3   24   12    0   17   17   18    19
[1] "nearest neighbors are "
[1]  5 22 21 11 29
[1] "nearest neighbors are "
[1]  6  2  3 24 12
[1] "nearest neighbors are "
[1]  9 16  1  8 17
[1] "nearest neighbors are "
[1] 10  2 12 22 14
[1] "nearest neighbors are "
[1] 14 10  8  2 12
[1] "nearest neighbors are "
[1] 15 22 16 12 11
[1] "nearest neighbors are "
[1] 17 19 25  9 12
[1] "nearest neighbors are "
[1] 18 16 19  1 17
[1] "nearest neighbors are "
[1] 23 30  3 18 11
[1] "nearest neighbors are "
[1] 26 11  2  5 13
[1] "global no change :1"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 38
[1] "agent_behavior"
 [1] 2 2 2 2 3 3 3 3 2 3 3 3 2 3 1 4 3 2 3 2 3 3 3 2 3 3 1 1 1 3
 [1]  -64.181926  -90.945954  -48.554998  -33.819458  -20.756570  -66.256789
 [7]  -46.880677 -114.656472  -31.441015  -40.346709  -44.361978 -102.643742
[13] -114.457709  -17.297513  -41.846932  -36.980611  -58.178930   -5.906100
[19]  -71.416430    8.461627  -25.319916  -53.061895  -19.094224  -28.800569
[25]  -73.524401  -16.476400   24.785899  -44.891739  -10.123942  -80.224657
 [1] 73.63942 79.27252 70.28676 74.03662 69.43919 79.56196 67.92159 81.05251
 [9] 65.67457 75.63752 79.57694 75.55905 73.83094 72.42162 66.88454 59.97188
[17] 67.70397 69.49940 70.69238 68.32283 67.41247 71.55177 66.99309 76.33587
[25] 71.98518 70.84073 70.70191 77.74350 67.97176 68.30251
 [1] 52.16667 51.08333 49.66667 60.00000 54.83333 53.58333 49.00000 52.66667
 [9] 50.75000 55.75000 60.25000 43.66667 43.66667 59.41667 50.33333 46.66667
[17] 49.25000 56.50000 50.50000 61.83333 54.16667 53.66667 54.08333 59.66667
[25] 50.91667 53.00000 59.75000 60.58333 54.58333 48.16667
 [1] 19 22 24 16 23 28 21 12 19 26 23 25 16 21 18 13 15 26 13 18 18 16 20 24 14
[26] 32 35 18 25  9
[1] "No change"
[1] 5
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   22    9   12    8    0   17   18   18    19
[2,]    2    8   10   28   11    0   16   16   18    19
[3,]    3    8    6   18   21    0   16   18   18    18
[4,]    4   15   22   25   16    0   16   16   16    19
[5,]    5   26   20   23   11    0   17   19   19    20
[6,]    6   29   27   12    3    0   13   15   17    18
[1] "nearest neighbors are "
[1]  1 22  9 12  8
[1] "nearest neighbors are "
[1]  2  8 10 28 11
[1] "nearest neighbors are "
[1]  3  8  6 18 21
[1] "nearest neighbors are "
[1]  4 15 22 25 16
[1] "nearest neighbors are "
[1]  9 20  7 17  8
[1] "nearest neighbors are "
[1] 13 10 25 16  1
[1] "nearest neighbors are "
[1] 18 24  3  6 27
[1] "nearest neighbors are "
[1] 20 21  9 28 30
[1] "nearest neighbors are "
[1] 24 18  3  8  7
[1] "global no change :1"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 39
[1] "agent_behavior"
 [1] 2 1 1 2 3 1 1 3 2 2 1 3 2 3 2 3 1 2 1 2 2 1 3 3 2 3 2 3 3 3
 [1]  -44.017201  -30.920734   17.061045  -72.041567 -113.448555  -24.734963
 [7]  -36.959846  -17.590803  -38.390824  -61.583938  -78.170778   -6.497490
[13]  -49.965791    6.954681  -30.944089  -53.396470  -50.316252 -133.295623
[19]  -73.669185  -68.823386  -44.604037  -83.553296  -81.839293  -52.219863
[25]  -52.408361  -49.169583  -72.280264  -32.744410  -33.334210   10.317883
 [1] 80.77314 65.96445 65.29234 73.15074 81.15183 67.97730 72.80864 65.83634
 [9] 75.08726 71.16527 69.24022 68.85253 69.56134 63.68482 75.31003 78.64142
[17] 82.07083 81.91670 78.27929 78.65862 71.90566 73.27884 76.93604 73.57276
[25] 78.07258 69.90967 68.70605 67.74585 74.84108 68.22430
 [1] 58.33333 48.41667 58.25000 47.83333 48.91667 56.66667 55.41667 50.50000
 [9] 56.50000 50.66667 46.33333 58.91667 47.75000 54.16667 58.66667 53.41667
[17] 57.91667 46.16667 49.00000 52.16667 51.16667 44.75000 48.75000 53.58333
[25] 53.50000 54.16667 49.25000 49.83333 59.08333 54.83333
 [1] 30 25 23 24 21 14 22 26 24 18 16 19 26 24 23 32 31 20 32 28 26 26 26 21 31
[26] 13 11 25 20 34
[1] "No change"
[1] 6
[1] "Max itr reset"
[1] 5
[1] "RE-INITIALIZING..."
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   25   16   30    4    0   15   16   16    18
[2,]    2    6   10    3   12    0   15   15   18    18
[3,]    3   14    8   13   18    0   15   17   17    17
[4,]    4    1    8   25    7    0   18   18   19    20
[5,]    5    8   26    9   11    0   17   18   19    19
[6,]    6    2   27    3   12    0   15   15   19    19
[1] "nearest neighbors are "
[1]  2  6 10  3 12
[1] "nearest neighbors are "
[1]  4  1  8 25  7
[1] "nearest neighbors are "
[1]  5  8 26  9 11
[1] "nearest neighbors are "
[1]  9 17 25  1  8
[1] "nearest neighbors are "
[1] 10  2 11 22 28
[1] "nearest neighbors are "
[1] 17 23  9 19 25
[1] "nearest neighbors are "
[1] 22 10 19 29 15
[1] "nearest neighbors are "
[1] 28 20 21  7 10
[1] "global no change :2"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 40
[1] "agent_behavior"
 [1] 3 2 3 4 2 2 2 3 2 4 4 2 2 3 2 3 1 2 1 1 3 1 3 3 2 2 3 3 3 3
 [1]  -67.647367  -54.305850  -16.351436  -43.311482    3.669825  -62.600945
 [7]  -34.930491 -101.001100  -29.421604  -51.405807  -55.803867 -100.550857
[13]  -38.663446  -23.926301  -51.921134  -53.790089  -56.992644   11.099966
[19]  -73.469538  -60.865514  -60.046158  -54.182074  -13.296253  -78.485731
[25]  -73.932535  -32.531189   -1.219880  -35.732184  -11.605375  -83.437237
 [1] 68.46129 76.93693 68.64908 77.03351 68.37967 78.83079 67.31186 79.79870
 [9] 69.55099 81.22056 75.85017 74.79957 68.08117 72.42162 67.89180 63.71256
[17] 69.76217 65.90879 69.06512 74.82462 73.48650 70.38187 62.62895 81.14412
[25] 67.90014 76.09715 70.77428 77.52522 68.68471 66.06624
 [1] 46.75000 55.16667 55.83333 57.91667 57.75000 53.58333 49.41667 51.41667
 [9] 53.66667 58.66667 52.41667 42.41667 52.16667 59.00000 48.41667 47.50000
[17] 52.00000 58.58333 48.91667 55.83333 53.75000 50.00000 51.33333 54.08333
[25] 46.75000 55.50000 54.16667 60.83333 55.00000 44.83333
 [1] 18 24 21 23 25 28 24 18 22 27 27 27 18 19 20 12 14 21 12 15 17 21 19 25 14
[26] 31 36 21 25 10
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    4   15    7    9    0   15   16   18    18
[2,]    2   10   12   24    6    0   17   17   17    18
[3,]    3    8   13    6   27    0   15   15   17    17
[4,]    4    1    2    8   10    0   15   19   19    20
[5,]    5   22   14   18   26    0   16   18   18    18
[6,]    6    3   12    2   27    0   17   17   18    18
[1] "nearest neighbors are "
[1]  2 10 12 24  6
[1] "nearest neighbors are "
[1]  5 22 14 18 26
[1] "nearest neighbors are "
[1]  6  3 12  2 27
[1] "nearest neighbors are "
[1]  7 21 16 20 28
[1] "nearest neighbors are "
[1]  9 21  1  2  7
[1] "nearest neighbors are "
[1] 12  2  6 27  1
[1] "nearest neighbors are "
[1] 13  3 16 10 24
[1] "nearest neighbors are "
[1] 15  1 22 28  7
[1] "nearest neighbors are "
[1] 18 22 19  5 26
[1] "nearest neighbors are "
[1] 25 30 17 21 15
[1] "nearest neighbors are "
[1] 26 29 11 22 28
[1] "global no change :2"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 41
[1] "agent_behavior"
 [1] 1 3 2 3 2 1 2 3 2 3 3 3 2 2 3 3 2 3 4 1 3 3 3 1 2 2 3 2 2 2
 [1]  -12.338605  -41.238546  -14.460651  -67.153464  -99.054616   -5.457400
 [7]  -18.243246  -50.729617  -32.330218  -67.804062  -45.914185  -32.098716
[13]  -41.178072  -29.691994  -28.767752  -53.396470  -43.752919 -100.527149
[19]  -76.173018  -72.956091  -45.809597  -98.874343  -21.541792    3.374209
[25]  -51.728674  -47.812532  -49.810185  -35.031345  -42.232716   10.317883
 [1] 70.23287 66.45983 68.93001 72.04433 81.15183 65.40209 69.69410 72.91865
 [9] 75.08726 71.00778 76.86466 70.76065 69.72046 63.05204 73.07931 78.64142
[17] 80.68240 73.18119 79.61339 76.78061 70.09374 75.30517 70.75533 65.78728
[25] 78.76998 66.46402 64.46961 69.36991 73.46169 68.22430
 [1] 54.58333 48.66667 55.58333 47.25000 52.25000 56.58333 56.50000 50.50000
 [9] 58.16667 51.08333 59.50000 55.25000 49.66667 45.75000 56.41667 53.41667
[17] 58.75000 42.16667 49.83333 49.91667 47.75000 44.16667 55.08333 56.91667
[25] 54.33333 50.08333 50.41667 51.00000 56.83333 54.83333
 [1] 29 21 23 25 20 17 21 27 23 14 18 20 26 25 24 32 29 24 32 27 29 25 25 21 31
[26] 15  9 25 18 34
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    4   16   18    8    0   16   17   17    18
[2,]    2    6   21   24   28    0   16   18   18    18
[3,]    3   18   29    6   22    0   17   17   18    18
[4,]    4    1    8   29   12    0   16   16   19    21
[5,]    5    8   29    2    6    0   17   18   19    19
[6,]    6    2   27   12   29    0   16   16   17    17
[1] "nearest neighbors are "
[1]  3 18 29  6 22
[1] "nearest neighbors are "
[1]  5  8 29  2  6
[1] "nearest neighbors are "
[1]  7 21 28 16 30
[1] "nearest neighbors are "
[1]  9 23 30  1  7
[1] "nearest neighbors are "
[1] 13 30 28 16  1
[1] "nearest neighbors are "
[1] 14  6  5 10 12
[1] "nearest neighbors are "
[1] 17 19  1  9 23
[1] "nearest neighbors are "
[1] 25 30 21 16 19
[1] "nearest neighbors are "
[1] 26 29 22 11 10
[1] "nearest neighbors are "
[1] 28 20 21 30  7
[1] "nearest neighbors are "
[1] 29 22 26  3  6
[1] "nearest neighbors are "
[1] 30 19 25 16 20
[1] "global no change :2"
[1] "fitness :-189.676559227808"
[1] "Minimum fitness threshold not reached after 41 iterations! Continuing PSO."
[1] "iteration number: "
[1] 42
[1] "agent_behavior"
 [1] 3 3 2 2 4 2 3 4 3 4 2 3 2 3 2 3 2 1 4 4 1 3 2 3 4 3 1 2 3 2
 [1]  -66.15651  -64.85064  -16.35144  -59.50262  -19.01957  -62.60094
 [7]  -34.93049 -146.15744  -47.30039  -51.40581  -55.85901  -94.70647
[13]  -59.85396  -22.36956  -56.46659  -17.34906  -47.91506   21.11605
[19] -106.66248  -31.50743  -31.63410  -35.46354  -14.44014  -59.17936
[25]  -61.84127  -44.53835  -12.26210  -39.29108  -17.23497  -83.43724
 [1] 76.67070 79.12922 68.64908 79.24901 68.37967 78.83079 67.31186 80.95876
 [9] 69.55099 81.22056 74.40665 72.81251 65.66019 73.23149 67.89180 61.00769
[17] 65.56028 63.66315 73.03704 70.36967 72.34955 71.64574 61.44106 76.33587
[25] 66.44401 75.99858 77.94484 78.19913 66.47730 66.06624
 [1] 56.16667 55.25000 55.83333 59.16667 53.66667 53.58333 49.41667 44.00000
 [9] 51.00000 58.66667 51.41667 43.41667 46.41667 59.66667 48.41667 52.08333
[17] 48.25000 59.25000 46.25000 57.25000 58.75000 55.91667 49.91667 54.50000
[25] 48.16667 53.00000 59.58333 61.25000 51.66667 44.83333
 [1] 16 24 21 18 24 28 24 17 20 27 26 23 16 20 18 12 17 19 12 15 16 19 19 22 13
[26] 31 35 20 25 10
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   18   16   12    4    0   15   16   17    18
[2,]    2    6    9    5   11    0   16   16   18    18
[3,]    3    8   27    6   13    0   16   16   17    17
[4,]    4    8    1   22   25    0   17   18   19    19
[5,]    5   26    2    3    8    0   17   18   19    19
[6,]    6   27    2    3   29    0   15   16   17    17
[1] "nearest neighbors are "
[1]  3  8 27  6 13
[1] "nearest neighbors are "
[1]  4  8  1 22 25
[1] "nearest neighbors are "
[1]  6 27  2  3 29
[1] "nearest neighbors are "
[1] 11 26  2 21 10
[1] "nearest neighbors are "
[1] 13 16  3 10  1
[1] "nearest neighbors are "
[1] 15 20 22  7 28
[1] "nearest neighbors are "
[1] 17 25 19 23  9
[1] "nearest neighbors are "
[1] 23  9 21 30 18
[1] "nearest neighbors are "
[1] 28 21 20  7 30
[1] "nearest neighbors are "
[1] 30 19 25 16 21
[1] "global no change :2"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 43
[1] "agent_behavior"
 [1] 4 2 3 2 3 4 3 2 2 2 4 2 4 3 3 2 4 3 3 3 2 3 3 2 4 3 3 3 2 4
 [1]  -29.642388  -46.344570  -39.759665  -10.415140  -36.314180   -6.166825
 [7]  -97.658905  -25.524968 -138.003958   -7.970655  -60.298576   21.092395
[13]  -42.741972  -57.954572  -31.797077  -63.609643  -52.135496  -41.194324
[19]  -19.412755  -33.904808  -38.274101  -58.665535  -55.020055  -25.374902
[25]  -23.818563  -58.652056  -23.541380  -64.295506 -105.409775  -49.552643
 [1] 67.91333 73.39770 76.21708 66.27242 74.29314 73.50609 76.71360 70.69590
 [9] 78.68412 65.46534 76.43850 65.50879 76.71506 68.71970 71.42002 79.35072
[17] 71.00286 71.95099 67.38255 76.86430 74.60937 74.18765 78.88280 70.03710
[25] 70.16523 69.50314 64.35979 73.10153 82.83196 78.75144
 [1] 50.16667 54.58333 55.08333 51.91667 55.66667 60.00000 49.00000 51.50000
 [9] 41.08333 53.41667 54.83333 62.00000 58.16667 47.58333 52.33333 57.08333
[17] 49.66667 54.16667 53.50000 55.08333 56.50000 52.00000 58.33333 55.41667
[25] 53.58333 50.50000 52.83333 49.33333 51.75000 54.75000
 [1] 26 21 29 27 25 27 18 31 22 23 21 17 22 21 28 21 24 21 22 33 23 23 21 21 26
[26] 16 15 24 22 31
[1] "No change"
[1] 4
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   18   12    2    7    0   13   15   17    18
[2,]    2    1    3    5   12    0   17   18   18    18
[3,]    3    4   10   14    9    0   14   16   16    17
[4,]    4    3    8   10    6    0   14   16   16    18
[5,]    5    2   23    7    9    0   18   18   19    19
[6,]    6   13    4    8   14    0   17   18   18    18
[1] "nearest neighbors are "
[1]  2  1  3  5 12
[1] "nearest neighbors are "
[1]  4  3  8 10  6
[1] "nearest neighbors are "
[1]  8  4 25  6 20
[1] "nearest neighbors are "
[1]  9  7 16 29  3
[1] "nearest neighbors are "
[1] 10  3  4 19 14
[1] "nearest neighbors are "
[1] 12  1 14 18 26
[1] "nearest neighbors are "
[1] 16  9 26 28 23
[1] "nearest neighbors are "
[1] 21 11 23 15 17
[1] "nearest neighbors are "
[1] 24 28 16 12 20
[1] "nearest neighbors are "
[1] 29 18  9 13 16
[1] "global no change :2"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 44
[1] "agent_behavior"
 [1] 2 2 2 3 3 3 1 3 4 2 4 2 3 4 3 4 1 2 2 2 3 4 1 3 3 2 3 1 3 2
 [1]  -11.618548  -38.159119  -50.145320  -61.727558  -65.180089   -9.456905
 [7]  -24.396715  -31.713350  -14.438912 -102.211773  -18.164379  -69.553221
[13]   -6.974996  -32.679884 -143.039238  -35.462273  -52.064028  -98.635682
[19]  -57.460397  -43.914686  -99.905146  -45.108208  -57.076681  -42.882394
[25]  -50.801341  -52.661212  -59.869299  -44.049633  -58.111324  -94.461381
 [1] 72.95250 72.08637 68.04422 79.05006 69.71026 71.42168 73.03843 64.99419
 [9] 71.12263 83.60902 74.04954 72.22125 70.84197 66.78598 83.71391 74.34245
[17] 65.87493 77.78774 72.79511 60.79051 82.73103 70.90043 69.33200 74.52345
[25] 68.85724 71.94133 84.05719 72.78720 72.16014 66.12712
 [1] 61.08333 54.00000 49.83333 56.25000 47.58333 58.16667 57.25000 51.83333
 [9] 56.41667 53.16667 55.41667 45.58333 58.08333 50.25000 47.83333 57.25000
[17] 45.91667 50.33333 52.66667 42.91667 52.75000 52.33333 47.91667 54.58333
[25] 47.33333 50.50000 62.08333 56.25000 50.08333 40.41667
 [1] 21 23 18 23 20 25 24 15 26 22 33 28 25 22 16 22 21 17 19 20 22 21 22 25 25
[26] 24 22 17 23 15
[1] "No change"
[1] 5
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   18   13   15   23    0   14   16   17    17
[2,]    2    5   21   10    4    0   17   17   19    20
[3,]    3    5   22   14   23    0   16   17   18    18
[4,]    4   13    9   29   23    0   12   13   16    17
[5,]    5    3   23    2    9    0   16   16   17    18
[6,]    6   11   12   17   19    0   16   17   18    18
[1] "nearest neighbors are "
[1]  1 18 13 15 23
[1] "nearest neighbors are "
[1]  2  5 21 10  4
[1] "nearest neighbors are "
[1]  3  5 22 14 23
[1] "nearest neighbors are "
[1] 10  7 21 27  2
[1] "nearest neighbors are "
[1] 12 24  6 11 25
[1] "nearest neighbors are "
[1] 18 15  1 20  8
[1] "nearest neighbors are "
[1] 19  6 11 12 15
[1] "nearest neighbors are "
[1] 20 25 30 23 18
[1] "nearest neighbors are "
[1] 26 17 30  5 14
[1] "nearest neighbors are "
[1] 30 20 22 23 26
[1] "global no change :2"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 45
[1] "agent_behavior"
 [1] 3 2 3 4 3 3 3 3 2 4 2 1 2 3 1 3 2 2 4 2 3 3 2 3 3 4 3 2 4 1
 [1]  -80.303737   -1.996106  -42.408893  -30.830057  -16.989157  -70.034858
 [7]  -67.534972  -55.425908  -37.198053  -72.808124  -50.670306 -117.440284
[13]  -51.748687  -36.585765   14.474343  -87.039382  -58.620251   -7.952229
[19]   14.094054  -20.447452  -27.591906  -66.026982   -8.097063  -53.547458
[25] -109.360561  -82.502721  -92.144553  -55.150920 -108.378907  -38.941557
 [1] 71.40923 64.33862 67.97420 68.43874 67.60995 77.80243 82.48427 72.53973
 [9] 69.96991 80.81920 70.09618 82.13957 68.62246 73.47624 68.18089 74.64272
[17] 70.23920 70.07529 67.06755 71.86222 68.78353 72.49328 68.33911 66.96707
[25] 80.81908 70.96267 76.26982 78.37109 82.91063 69.60649
 [1] 47.16667 51.66667 48.58333 55.00000 54.66667 54.25000 61.25000 51.00000
 [9] 51.16667 52.16667 50.41667 46.83333 51.00000 55.25000 60.16667 45.41667
[17] 50.33333 56.66667 61.25000 55.50000 55.08333 48.83333 58.08333 47.16667
[25] 52.58333 44.91667 48.75000 58.25000 54.41667 50.00000
 [1] 18 27 24 16 21 21 17 23 25 31 21 26 16 24 24 26 18 26 19 27 18 23 19 20 14
[26] 21 20 20 15 26
[1] "No change"
[1] 6
[1] "Max itr reset"
[1] 5
[1] "RE-INITIALIZING..."
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   11    7    3   13    0   15   17   18    18
[2,]    2    9   30    5   11    0   16   17   18    18
[3,]    3    8   12   26    1    0   11   16   17    18
[4,]    4    6   24    5    3    0   15   16   17    18
[5,]    5    9   13    4   21    0   14   15   17    17
[6,]    6    4   24    5    9    0   15   15   18    18
[1] "nearest neighbors are "
[1]  2  9 30  5 11
[1] "nearest neighbors are "
[1]  3  8 12 26  1
[1] "nearest neighbors are "
[1]  5  9 13  4 21
[1] "nearest neighbors are "
[1]  8  3 29 16 18
[1] "nearest neighbors are "
[1]  9  5 24  2  6
[1] "nearest neighbors are "
[1] 17 21 19 23  4
[1] "nearest neighbors are "
[1] 21 17  5  4 16
[1] "nearest neighbors are "
[1] 23 16 17  6  7
[1] "nearest neighbors are "
[1] 25  7 29  1 27
[1] "nearest neighbors are "
[1] 29 25 27  8 26
[1] "nearest neighbors are "
[1] 30 22  2  1 12
[1] "global no change :3"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 46
[1] "agent_behavior"
 [1] 2 3 3 2 3 3 2 1 2 3 2 3 2 3 3 4 1 2 2 3 2 3 2 4 2 4 1 4 1 2
 [1]  -76.779880  -81.632392  -88.634448  -47.150460  -15.963401    7.138511
 [7]   -5.694343    2.681163  -38.075724  -51.425592 -103.662510  -81.583276
[13]  -40.893674  -53.969638  -34.379120  -43.511861  -68.448955 -138.457767
[19]   -7.965032  -82.620148 -105.543091  -31.371670  -93.468849  -26.563013
[25]  -89.002728  -81.235958  -59.055122  -92.791356  -11.249550  -10.192945
 [1] 75.28779 82.37193 78.85568 75.56646 71.16995 66.93593 68.51008 68.03195
 [9] 72.69848 66.05785 81.64917 71.96817 71.11055 72.69544 70.90613 72.21752
[17] 80.22009 75.54761 69.06270 74.56191 82.32074 65.91827 75.26953 67.22169
[25] 71.92176 75.92901 71.53830 69.27039 69.69688 72.37950
 [1] 51.75000 56.50000 51.58333 52.50000 55.25000 57.00000 56.91667 56.75000
 [9] 55.08333 48.50000 50.91667 48.83333 49.75000 50.08333 52.66667 55.33333
[17] 55.16667 40.58333 58.83333 52.58333 51.66667 51.91667 45.66667 51.00000
[25] 43.66667 51.50000 52.00000 41.16667 56.08333 61.25000
 [1] 18 21 21 30 28 25 23 26 22 16 22 15 29 26 25 18 25 16 19 12 21 17 24 24 23
[26] 18 17 21 25 20
[1] "No change"
[1] 1
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   18   26   22   10    0   16   16   17    18
[2,]    2    4   24    3   25    0   15   17   18    18
[3,]    3    9   18    2    4    0   17   17   18    19
[4,]    4    2    9    5   14    0   15   16   18    18
[5,]    5    6   28   29    4    0   17   17   17    18
[6,]    6    5    8   16   13    0   17   17   17    18
[1] "nearest neighbors are "
[1]  1 18 26 22 10
[1] "nearest neighbors are "
[1]  4  2  9  5 14
[1] "nearest neighbors are "
[1]  7 23 27 14 26
[1] "nearest neighbors are "
[1]  9 16 26  4 23
[1] "nearest neighbors are "
[1] 11 28 21 25 27
[1] "nearest neighbors are "
[1] 13  6  7 15  8
[1] "nearest neighbors are "
[1] 18  1  3  4 10
[1] "nearest neighbors are "
[1] 19 10  7 11 14
[1] "nearest neighbors are "
[1] 21 11 27  1 10
[1] "nearest neighbors are "
[1] 23  7  9  6 13
[1] "nearest neighbors are "
[1] 25 11 24  2  7
[1] "nearest neighbors are "
[1] 30 10 20 22 28
[1] "global no change :3"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 47
[1] "agent_behavior"
 [1] 4 3 3 2 2 3 2 2 2 2 4 1 3 2 3 2 4 1 3 4 4 3 1 2 1 4 2 4 2 2
 [1]  -74.318316  -14.347013  -17.389175  -22.855739  -79.183152  -39.585812
 [7]  -19.106056  -45.826943   -6.351743 -115.777038  -12.155001 -113.550379
[13]  -87.774628  -46.334040  -43.258885  -10.453323  -99.099197  -33.862992
[19]  -42.033554  -66.422361  -49.896884    9.868559  -25.579656  -28.388969
[25]   -9.177228  -66.770544   15.827753   -7.363992  -46.696606  -58.809738
 [1] 72.63639 67.22546 69.06874 68.82115 65.95784 65.91716 72.90454 70.83206
 [9] 66.27792 72.82965 69.99161 76.99795 81.34280 72.26681 65.32602 70.47703
[17] 78.30469 66.42411 72.42186 73.57993 72.42635 68.51871 69.38108 69.91264
[25] 69.41120 73.71775 61.66778 68.12431 69.64235 71.23922
 [1] 45.50000 57.08333 56.50000 54.25000 44.66667 48.00000 59.08333 51.66667
 [9] 55.91667 40.58333 54.83333 43.83333 53.33333 53.00000 47.58333 54.75000
[17] 51.66667 47.83333 50.83333 50.75000 51.08333 59.58333 56.08333 52.41667
[25] 56.66667 49.00000 54.83333 54.83333 51.66667 46.75000
 [1] 27 16 20 22 12 22 22 22 20 20 28 23 23 22 20 30 15 26 29 21 25 24 18 26 24
[26] 25 22 26 19 28
[1] "No change"
[1] 2
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   19    4   28   11    0   14   15   15    17
[2,]    2   17   27    7   24    0   13   16   18    18
[3,]    3   12    9   10   29    0   17   18   18    19
[4,]    4    1   18    8   11    0   15   16   18    18
[5,]    5   15   27    6    7    0   14   16   18    18
[6,]    6   13    5    8   22    0   17   18   18    18
[1] "nearest neighbors are "
[1]  4  1 18  8 11
[1] "nearest neighbors are "
[1]  5 15 27  6  7
[1] "nearest neighbors are "
[1]  7 16 13 20  2
[1] "nearest neighbors are "
[1]  8  4  6 23  1
[1] "nearest neighbors are "
[1]  9  3  5 10 15
[1] "nearest neighbors are "
[1] 10 18 12  3  9
[1] "nearest neighbors are "
[1] 14 20  5 22  1
[1] "nearest neighbors are "
[1] 16  7 18 28 11
[1] "nearest neighbors are "
[1] 24 22 12  2 15
[1] "nearest neighbors are "
[1] 27  2  5 15 30
[1] "nearest neighbors are "
[1] 29 26 12 17 19
[1] "nearest neighbors are "
[1] 30 13 23 11 27
[1] "global no change :3"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 48
[1] "agent_behavior"
 [1] 1 3 3 3 4 2 2 4 2 4 3 3 2 3 2 3 4 3 4 1 2 2 2 2 2 1 2 2 3 2
 [1]    0.512016  -85.153682 -112.185035  -19.787533  -15.956420 -136.158951
 [7]  -95.675925  -52.354308  -11.867812  -79.644065  -38.432736  -52.689462
[13] -101.644443   -1.259812  -78.385143  -94.961331  -86.770743  -33.379070
[19] -102.229400  -27.368706  -19.316235  -58.268839  -72.525069  -29.700209
[25]  -89.638923  -17.234460 -106.607003  -56.232884  -37.627667  -25.110654
 [1] 70.05669 76.31862 79.73246 73.36660 72.33522 82.16361 76.47609 75.31935
 [9] 66.57053 79.64851 74.20927 67.09850 68.36677 67.55499 72.84370 75.04530
[17] 74.62688 70.32733 78.05194 69.24647 69.77234 77.55528 72.65653 67.33398
[25] 81.53385 75.37113 77.01837 67.54961 75.89675 66.49940
 [1] 59.25000 48.83333 47.75000 58.50000 56.41667 46.75000 48.25000 51.66667
 [9] 52.83333 50.08333 54.25000 48.83333 37.58333 53.66667 47.16667 47.41667
[17] 45.00000 56.83333 50.33333 51.50000 55.00000 59.08333 46.33333 53.66667
[25] 56.33333 62.83333 44.33333 47.66667 57.91667 48.75000
 [1] 24 23 21 24 28 18 20 29 25 30 27 17 23 30 22 19 27 15 16 27 24 15 26 17 16
[26] 20 25 19 23 28
[1] "No change"
[1] 3
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   19    8   18   14    0   16   17   17    18
[2,]    2    3    6   16   27    0   14   15   16    16
[3,]    3    2    4   27   29    0   14   15   16    16
[4,]    4    3   27   26    2    0   15   17   18    19
[5,]    5   11   20   10    2    0   15   15   18    19
[6,]    6   19    2   13   22    0   12   15   15    15
[1] "nearest neighbors are "
[1]  6 19  2 13 22
[1] "nearest neighbors are "
[1]  7  9  3 12  6
[1] "nearest neighbors are "
[1]  9  7 14  2  5
[1] "nearest neighbors are "
[1] 13  6  2  8 17
[1] "nearest neighbors are "
[1] 15 10  2  3  8
[1] "nearest neighbors are "
[1] 21 30 10 23 20
[1] "nearest neighbors are "
[1] 22  6  2 12 13
[1] "nearest neighbors are "
[1] 23 10 30  3 21
[1] "nearest neighbors are "
[1] 24 19 29 25 28
[1] "nearest neighbors are "
[1] 25 20 24 13 28
[1] "nearest neighbors are "
[1] 27  2  3  4 12
[1] "nearest neighbors are "
[1] 28 17 18  6 19
[1] "nearest neighbors are "
[1] 30 21 23 14  8
[1] "global no change :3"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 49
[1] "agent_behavior"
 [1] 3 1 4 2 3 4 3 3 3 1 2 3 2 3 3 1 3 3 4 2 2 1 4 2 3 3 4 3 2 2
 [1] -109.290700  -40.448943   -1.098425  -34.111035  -45.122806    1.718026
 [7]  -34.691499  -12.965433  -42.765369   18.240119 -127.773551  -65.386006
[13]  -25.503603 -122.175802  -59.151820  -75.869357  -58.415705  -58.208541
[19]  -61.599584  -17.657940  -75.754174  -18.643014   -9.833134  -25.099741
[25]   -4.897165  -17.909687  -35.765927  -55.683056  -26.579305  -96.376784
 [1] 74.80511 69.68070 71.42423 62.72372 70.67608 66.27761 67.91557 67.16127
 [9] 73.09853 69.33682 80.24410 79.49387 67.13102 76.75334 73.02733 77.54508
[17] 78.22102 69.70231 73.97901 69.91038 79.11296 73.21345 64.72420 69.04268
[25] 71.83549 69.11982 70.13046 79.46994 65.27798 82.44202
 [1] 46.58333 52.50000 60.75000 49.08333 49.83333 56.16667 48.25000 52.75000
 [9] 55.00000 61.16667 47.41667 56.41667 50.66667 45.50000 49.83333 51.91667
[17] 56.08333 50.33333 50.75000 56.83333 49.41667 57.66667 53.66667 51.75000
[25] 58.58333 55.08333 50.25000 58.33333 50.41667 53.16667
 [1] 14 20 23 15 26 23 28 26 21 26 16 22 25 15 25 23 23 17 24 21 32 26 20 27 27
[26] 23 28 22 21 22
[1] "No change"
[1] 4
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1    4   11   17   18    0   15   16   17    17
[2,]    2   22    3   17   26    0   16   17   17    17
[3,]    3   16    2   11   19    0   16   17   17    17
[4,]    4    1   18   29   23    0   15   16   16    17
[5,]    5   16   15   21   23    0   13   17   18    18
[6,]    6   13   20   21    9    0   16   16   17    18
[1] "nearest neighbors are "
[1]  4  1 18 29 23
[1] "nearest neighbors are "
[1] 11 18  1 28  3
[1] "nearest neighbors are "
[1] 13  6  8 10 21
[1] "nearest neighbors are "
[1] 20  6  3  4 14
[1] "nearest neighbors are "
[1] 21  6 24 25  5
[1] "nearest neighbors are "
[1] 24  9 15 25 19
[1] "nearest neighbors are "
[1] 29 14  4 18  1
[1] "nearest neighbors are "
[1] 30 12 23 10 11
[1] "global no change :3"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 50
[1] "agent_behavior"
 [1] 2 1 2 3 3 2 2 3 2 2 4 3 2 4 3 1 4 4 1 3 4 2 3 3 3 3 2 3 3 4
 [1]  -31.897256  -28.562355  -23.648708  -49.951446  -57.574689  -26.917484
 [7]  -59.676952  -23.435489  -73.361379  -68.337846  -49.700253  -64.444942
[13]  -83.717509  -85.759711 -117.481712  -16.656744  -71.164931  -56.706781
[19]  -13.398266   30.933855  -43.147874 -101.078295  -30.194885  -52.302846
[25] -113.906925  -77.025044  -48.768744 -166.396398   -4.011205  -44.308815
 [1] 71.28854 64.89429 70.28277 78.49786 70.98463 70.36835 72.20054 67.92952
 [9] 76.26318 72.84181 77.86429 74.85111 79.24350 70.97012 80.00392 66.63438
[17] 65.67238 74.09136 69.25541 65.21474 70.91745 80.64748 74.81170 75.61208
[25] 77.37987 76.61713 65.73102 76.96867 71.93860 73.36934
 [1] 54.00000 51.00000 51.91667 54.41667 50.83333 53.16667 52.08333 52.33333
 [9] 52.50000 50.08333 53.83333 52.41667 52.50000 42.00000 47.41667 54.66667
[17] 44.16667 52.75000 55.66667 59.58333 51.83333 52.25000 56.50000 53.33333
[25] 46.41667 51.66667 48.25000 36.41667 57.50000 50.41667
 [1] 24 18 30 31 19 26 18 24 20 20 31 21 22 26 20 19 16 22 24 26 23 18 27 26 18
[26] 21 17 16 30 31
[1] "No change"
[1] 5
[1] "Max itr reset"
[1] 5
Target points completed: 
		
[1] 30 10
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    1   27    7   28   29    0   15   16   16    16
[2,]    2   26   15    7    9    0   15   16   20    20
[3,]    3   29    4   19   11    0   14   15   16    17
[4,]    4   11    3   23   30    0   14   15   16    16
[5,]    5   21   27    6   23    0   16   16   17    18
[6,]    6   20    5    9   17    0   16   17   18    18
[1] "nearest neighbors are "
[1]  1 27  7 28 29
[1] "nearest neighbors are "
[1]  3 29  4 19 11
[1] "nearest neighbors are "
[1]  6 20  5  9 17
[1] "nearest neighbors are "
[1]  7 22  1 23 27
[1] "nearest neighbors are "
[1]  9 21  6 14 24
[1] "nearest neighbors are "
[1] 10 18 27  1  3
[1] "nearest neighbors are "
[1] 13  8 14 15 19
[1] "nearest neighbors are "
[1] 22  7 18 11  2
[1] "nearest neighbors are "
[1] 27  1  5 16  7
[1] "global no change :3"
[1] "fitness :-189.676559227808"
[1] "iteration number: "
[1] 51
[1] "agent_behavior"
 [1] 3 3 3 3 2 2 3 2 3 3 2 1 4 3 4 2 3 1 2 2 3 2 2 4 3 2 3 1 3 3
 [1] -120.325966  -62.463957 -100.328450  -53.284396  -46.110657  -95.749482
 [7]  -49.979425  -47.733404   -8.150243  -33.669344  -67.915257  -50.279691
[13]  -35.717424  -84.773682  -42.198236  -74.564146  -86.920330  -52.920324
[19]  -34.887440  -66.932422  -67.377838  -41.203505  -70.831206  -31.689978
[25]  -85.333186   -2.497936   17.921228   16.627211    6.908203  -11.235042
 [1] 75.73944 78.10643 79.99751 74.45991 72.63122 83.06656 68.60195 70.08456
 [9] 70.48611 67.27932 76.21184 69.63170 70.54500 82.12898 71.54571 78.73101
[17] 85.07346 69.60679 74.56840 77.38648 71.54375 68.59676 72.18897 66.42890
[25] 70.36967 65.86322 67.74151 69.17456 65.00472 66.36822
 [1] 42.58333 54.25000 51.75000 55.16667 52.50000 53.91667 46.33333 50.08333
 [9] 56.58333 51.00000 53.08333 48.66667 51.58333 51.08333 50.83333 52.00000
[17] 55.41667 46.75000 58.50000 59.00000 46.25000 48.08333 50.75000 51.00000
[25] 44.66667 54.00000 60.41667 62.50000 57.75000 53.66667
 [1] 20 25 18 19 24 22 27 23 27 21 21 24 26 31 27 26 27 27 20 11 26 27 16 20 19
[26] 25 24 22 19 23
[1] "No change"
[1] 6
[1] "Max itr reset"
[1] 5
[1] "RE-INITIALIZING..."
[1] "No change for 4 iterations. Exiting PSO."
[1] "##################################"
[1] "Results summary for itr:1"
[1] "number of features selected using population mean"
[1] 0
[1] "number of features selected using current global best"
[1] 13
[1] "best accuracy"
[1] 189.6766
[1] "##################################"
[1] "dim of scoring matrix is "
[1] 44  1
[1] 1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0000  0.0000  0.2955  1.0000  1.0000 
[1] "numfeatg is "
[1] 13
[1] "Modified train 10 fold accuracy using train data is "
[1] 77.5
[1] "Modified train accuracy is "
[1] 0.9
[1] "train confusion matrix is "
          trainclass
pred_train  0  1
         0 38  6
         1  2 34
[1] "Train dimension is "
[1] 80 13
[1] "Test dimension is "
[1] 187  13
[1] "Test confusion matrix is "
    
pred   0   1
   0   9  43
   1   6 129
[1] "Test acc is "
[1] 0.7379679
[1] "train 10 fold"
[1] 76.25
[1] "Test confusion matrix is "
    
pred   0   1
   0   9  43
   1   6 129
[1] "Test acc is "
[1] 0.7379679
[1] "Test AUC:"
[1] 0.675
[1] "Train acc is "
[1] 0.9
Warning message:
In .Method(..., deparse.level = deparse.level) :
  number of rows of result is not a multiple of vector length (arg 2)
> print("# of features after CMA:")
[1] "# of features after CMA:"
> print(dim(CMAres$modtraindata))
[1] 80 10
> print("# of features after PSO:")
[1] "# of features after PSO:"
> print(dim(traind))
[1] 80 14
> #}else{
> 
> #print("# of features after CMA:")
> #print(dim(CMAres$modtraindata))
> #}
> print("Complete")
[1] "Complete"
> stopCluster(cl)
> 
