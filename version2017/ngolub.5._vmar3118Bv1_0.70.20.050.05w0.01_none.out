
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #.libPaths("/home/kuppal3/karan_libs/Rlibs")
> library(snow)
Warning message:
package ‘snow’ was built under R version 3.2.5 
> library(e1071)
Warning message:
package ‘e1071’ was built under R version 3.2.5 
> library(yaImpute)

Attaching package: ‘yaImpute’

The following object is masked from ‘package:e1071’:

    impute

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

Warning message:
package ‘pROC’ was built under R version 3.2.5 
> library(bioDist)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘parallel’

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster


Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parRapply, parSapply

The following objects are masked from ‘package:stats’:

    IQR, mad, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, as.vector, cbind, colnames,
    do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl,
    intersect, is.unsorted, lapply, lengths, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unlist, unsplit

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
> #library(CMA, lib="/home/kuppal3/karan_libs/Rlibs/")
> library(RankAggreg)
Warning message:
package ‘RankAggreg’ was built under R version 3.2.5 
> library(CMA)

Attaching package: ‘CMA’

The following object is masked from ‘package:pROC’:

    roc

The following object is masked from ‘package:e1071’:

    tune

Warning message:
package ‘CMA’ was built under R version 3.2.4 
> library(expm)
Loading required package: Matrix

Attaching package: ‘expm’

The following object is masked from ‘package:Matrix’:

    expm

Warning messages:
1: package ‘expm’ was built under R version 3.2.5 
2: package ‘Matrix’ was built under R version 3.2.5 
> 
> cl<-makeCluster(1)
> 
> 
> args<-commandArgs(trailingOnly=TRUE)
> 
> dirloc<-"/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/"
> #sname<-paste("/home/stu/kuppal3/Research/Feature_selection/Rcode/versionnov2014/OCFS_",args[9],".R",sep="")
> 
> sname<-paste(dirloc,"version2017/OCFS_",args[9],".R",sep="")
> source(sname)
> 
> outloc<-paste(dirloc,"/Datasets/Golub/OCFSvmay2415_Golub",args[9],"/",sep="")
> 
> 
> sname<-paste(dirloc,"Datasets/Golub/Golub.Rda",sep="")
> load(sname)
> 
> #data_loc<-"/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Datasets/Golub/"
> #data_loc<-"/home/kuppal2/Documents/Projects/xmsPANDA/Other/Datasets/Golub/"
> #load("/home/kuppal3/Research/Feature_selection/Datasets/Golub/Golub.rda")
> #load("Golub.rda")
> 
> trainm<-Golub$X
> testm<-Golub$Xt
> trainclass<-Golub$y
> testclass<-Golub$yt
> 
> cnames<-paste("var",seq(1,dim(trainm)[2]),sep="")
> colnames(trainm)<-cnames
> colnames(testm)<-cnames
> 
> trainm<-t(trainm)
> testm<-t(testm)
> 
> 
> 
> trainm[trainm < 100] <- 100
> trainm[trainm > 16000] <- 16000
> 
> testm[testm < 100] <- 100
> testm[testm > 16000] <- 16000
> 
> mmfilt <- function(x,r = 5, d = 500, na.rm = TRUE) {
+  minval <- min(x, na.rm = na.rm)
+  maxval <- max(x, na.rm = na.rm)
+  (maxval/minval > r) && (maxval - minval > d)
+ }
> 
> #mmfun <- mmfilt()
> #ffun <- filterfun(mmfun)
> #good <- genefilter(X, ffun)
> 
> good<-apply(trainm,1,mmfilt)
> 
> 
> trainm<-trainm[good,]
> 
> print(dim(trainm))
[1] 3051   38
> testm<-testm[good,]
> 
> 
> trainm<-log10(trainm+1)
>  testm<-log10(testm+1)
> 
> 
> trainm<-t(trainm)
> testm<-t(testm)
> 
> trainm<-cbind(trainclass,trainm)
> testm<-cbind(testclass,testm)
> 
> trainm<-na.omit(trainm)
> testm<-na.omit(testm)
> 
> 
> dir.create(outloc)
> setwd(outloc)
> 
> trainm<-as.matrix(trainm)
> testm<-as.matrix(testm)
> trainclass<-trainm[,1] #CMAres$modtrainclass
> testclass<-testm[,1] #CMAres$modtestclass
> trainm<-trainm[,-c(1)] #CMAres$modtrainmata
> testm<-testm[,-c(1)] #CMAres$modtestmata
> 
> #a: Confusions
> #b: Neighbors
> #c: Global
> #d: Death
> 
> a<-c(0.25,0.25,0.25,0.25)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0.25,0.25,0.5,0)
> d<-c(0.9,0.1,0,0.1)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0,0.5,0.5,0)
> d<-c(0.9,0.1,0,0)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.2,0.3,0.4,0.1)
> c<-c(0,0.4,0.4,0.2)
> d<-c(0.9,0.1,0,0)
> 
> transition_matrix<-rbind(a,b,c,d)
> 
> 
> dir.create(outloc)
Warning message:
In dir.create(outloc) :
  '/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO//Datasets/Golub/OCFSvmay2415_Golubvjune92018_v1' already exists
> setwd(outloc)
> temp2=t(trainm)
> temp2=apply(temp2, 2, function(x){which(x=="MD")})
> temp2=unlist(temp2)
> temp2=unique(temp2)
> if(length(temp2)>1)
+ {
+ 	trainm=trainm[,-c(temp2)]
+ 
+ 	rm(temp2)
+ }
> 
> boostweight=rep(0,dim(trainm)[2])
> 
> #if(FALSE)
> {
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("limma"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.4,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("lasso"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.4,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("rfe"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.4,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("elasticnet"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.4,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ if(FALSE){
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("rf"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.4,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ }
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("f.test"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.4,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ }
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "maxnum is "
[1] 5
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 

Attaching package: ‘limma’

The following object is masked from ‘package:BiocGenerics’:

    plotMA

GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  378  808  829 2124 2670
       var760  var1834  var1882  var4847  var6218
[1,] 2.209515 2.418301 2.482874 2.475671 2.004321
[2,] 2.770115 2.008600 3.133219 2.488551 2.004321
[3,] 2.318063 2.491362 2.406540 2.491362 2.004321
       var760  var1834  var1882  var4847  var6218
[1,] 2.004321 2.227887 2.004321 2.252853 2.037426
[2,] 2.004321 2.389166 2.004321 2.025306 2.230449
[3,] 2.356026 2.004321 2.004321 2.403121 2.584331
[1] "numgenes selected:5"
[1] "test acc:0.882352941176471"
[1] "test AUC acc:0.889285714285714"
[1] "10 fold train97.3684210526316"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 17  1
       1   3 13
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "maxnum is "
[1] 5
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
Loaded glmnet 2.0-10


Attaching package: ‘glmnet’

The following object is masked from ‘package:pROC’:

    auc

GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
genelist
 829  808 2670  523 2124 1448 1995 2198 2813    1  378  792  894 1413 1977 2663 
  10    9    7    4    4    2    2    2    2    1    1    1    1    1    1    1 
2750 
   1 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  523  808  829 2124 2670
      var1144  var1834  var1882  var4847  var6218
[1,] 2.786041 2.418301 2.482874 2.475671 2.004321
[2,] 2.967548 2.008600 3.133219 2.488551 2.004321
[3,] 3.229938 2.491362 2.406540 2.491362 2.004321
      var1144  var1834  var1882  var4847  var6218
[1,] 2.895975 2.227887 2.004321 2.252853 2.037426
[2,] 2.997823 2.389166 2.004321 2.025306 2.230449
[3,] 2.789581 2.004321 2.004321 2.403121 2.584331
[1] "numgenes selected:5"
[1] "test acc:0.941176470588235"
[1] "test AUC acc:0.939285714285714"
[1] "10 fold train100"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 19  1
       1   1 13
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "maxnum is "
[1] 5
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  773  829 1009 1162 2124
      var1779  var1882  var2288  var2642  var4847
[1,] 2.004321 2.482874 2.004321 3.969742 2.475671
[2,] 2.004321 3.133219 2.004321 2.952308 2.488551
[3,] 2.004321 2.406540 2.004321 2.798651 2.491362
      var1779  var1882  var2288  var2642  var4847
[1,] 2.691081 2.004321 2.004321 4.112906 2.252853
[2,] 2.004321 2.004321 2.004321 3.258637 2.025306
[3,] 2.004321 2.004321 2.004321 3.559667 2.403121
[1] "numgenes selected:5"
[1] "test acc:0.941176470588235"
[1] "test AUC acc:0.939285714285714"
[1] "10 fold train94.7368421052632"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 19  1
       1   1 13
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "maxnum is "
[1] 5
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]    1  808  829 2124 2670
        var36  var1834  var1882  var4847  var6218
[1,] 2.004321 2.418301 2.482874 2.475671 2.004321
[2,] 2.004321 2.008600 3.133219 2.488551 2.004321
[3,] 2.021189 2.491362 2.406540 2.491362 2.004321
        var36  var1834  var1882  var4847  var6218
[1,] 2.004321 2.227887 2.004321 2.252853 2.037426
[2,] 2.004321 2.389166 2.004321 2.025306 2.230449
[3,] 2.004321 2.004321 2.004321 2.403121 2.584331
[1] "numgenes selected:5"
[1] "test acc:0.882352941176471"
[1] "test AUC acc:0.889285714285714"
[1] "10 fold train94.7368421052632"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 17  1
       1   3 13
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "maxnum is "
[1] 5
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  378  808  829 1448 2670
       var760  var1834  var1882  var3320  var6218
[1,] 2.209515 2.418301 2.482874 3.051153 2.004321
[2,] 2.770115 2.008600 3.133219 3.026533 2.004321
[3,] 2.318063 2.491362 2.406540 3.145818 2.004321
       var760  var1834  var1882  var3320  var6218
[1,] 2.004321 2.227887 2.004321 3.050380 2.037426
[2,] 2.004321 2.389166 2.004321 3.007321 2.230449
[3,] 2.356026 2.004321 2.004321 2.632457 2.584331
[1] "numgenes selected:5"
[1] "test acc:0.941176470588235"
[1] "test AUC acc:0.928571428571429"
[1] "10 fold train97.3684210526316"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  1
        1   0 10
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  2
       1   0 12
[1] "train acc:0.973684210526316"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  1
        1   0 10
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
There were 41 warnings (use warnings() to see them)
> #1
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("limma","lasso","rfe","elasticnet", "f.test"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.4,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "maxnum is "
[1] 5
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
genelist
 829  808 2670  523 2124 1448 1995 2198 2813    1  378  792  894 1413 1977 2663 
  10    9    7    4    4    2    2    2    2    1    1    1    1    1    1    1 
2750 
   1 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 3051    5
[1] 3051
[1] "DS index stage 1"
[1] 0.58
[1] "bestgenelist"
 [1]    1  378  523  773  808  829 1009 1162 1448 2124 2670
        var36   var760  var1144  var1779  var1834  var1882  var2288  var2642
[1,] 2.004321 2.209515 2.786041 2.004321 2.418301 2.482874 2.004321 3.969742
[2,] 2.004321 2.770115 2.967548 2.004321 2.008600 3.133219 2.004321 2.952308
[3,] 2.021189 2.318063 3.229938 2.004321 2.491362 2.406540 2.004321 2.798651
      var3320  var4847  var6218
[1,] 3.051153 2.475671 2.004321
[2,] 3.026533 2.488551 2.004321
[3,] 3.145818 2.491362 2.004321
        var36   var760  var1144  var1779  var1834  var1882  var2288  var2642
[1,] 2.004321 2.004321 2.895975 2.691081 2.227887 2.004321 2.004321 4.112906
[2,] 2.004321 2.004321 2.997823 2.004321 2.389166 2.004321 2.004321 3.258637
[3,] 2.004321 2.356026 2.789581 2.004321 2.004321 2.004321 2.004321 3.559667
      var3320  var4847  var6218
[1,] 3.050380 2.252853 2.037426
[2,] 3.007321 2.025306 2.230449
[3,] 2.632457 2.403121 2.584331
[1] "numgenes selected:11"
[1] "test acc:0.970588235294118"
[1] "test AUC acc:0.964285714285714"
[1] "10 fold train97.3684210526316"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  1
       1   0 13
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] 0.58
[1] "KI index stage 1"
[1] 0.5793106
[[1]]
[1] "var378"  "var808"  "var829"  "var2124" "var2670"

[[2]]
[1] "var523"  "var808"  "var829"  "var2124" "var2670"

[[3]]
[1] "var773"  "var829"  "var1009" "var1162" "var2124"

[[4]]
[1] "var1"    "var808"  "var829"  "var2124" "var2670"

[[5]]
[1] "var378"  "var808"  "var829"  "var1448" "var2670"


 Iteration 1 :  Optimal value:  12.4 
 Optimal List:   var829,var808,var2124,var378,var773 

 Iteration 2 :  Optimal value:  11.6 
 Optimal List:   var808,var829,var1,var2124,var2670 

 Iteration 3 :  Optimal value:  10.4 
 Optimal List:   var378,var808,var829,var2124,var523 

 Iteration 4 :  Optimal value:  10.4 
 Optimal List:   var378,var808,var829,var2124,var1009 

 Iteration 5 :  Optimal value:  11.2 
 Optimal List:   var808,var829,var2124,var378,var2670 

 Iteration 6 :  Optimal value:  10 
 Optimal List:   var808,var378,var829,var2124,var2670 

 Iteration 7 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 8 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 9 :  Optimal value:  10 
 Optimal List:   var808,var378,var829,var2124,var2670 

 Iteration 10 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 11 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 12 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 13 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 14 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 15 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 16 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 
[1] "test acc rank aggreg CE:0.882352941176471"
[1] "test AUC acc rank aggreg CE:0.889285714285714"
[1] "10 fold train rank aggreg res CE100"
[1] "confusion matrix train 10 fold rank aggreg CE"
            nci_y
pred10foldRA -1  1
          -1 27  0
          1   0 11
[1] "Num itr RA CE"
[1] 16
[1] "Test BER aggreg CE is"
[1] 0.8892857

 Iteration 1 :  Optimal value:  12.4 
 Optimal List:   var829,var808,var2124,var2670,var1448 

 Iteration 2 :  Optimal value:  12.4 
 Optimal List:   var829,var808,var2124,var2670,var1448 

 Iteration 3 :  Optimal value:  12.4 
 Optimal List:   var829,var808,var2124,var2670,var1162 

 Iteration 4 :  Optimal value:  12.4 
 Optimal List:   var773,var829,var808,var2124,var2670 

 Iteration 5 :  Optimal value:  12.4 
 Optimal List:   var773,var829,var808,var2124,var2670 

 Iteration 6 :  Optimal value:  12.4 
 Optimal List:   var378,var829,var808,var1,var2670 

 Iteration 7 :  Optimal value:  10.4 
 Optimal List:   var378,var829,var808,var2124,var2670 

 Iteration 8 :  Optimal value:  10.4 
 Optimal List:   var378,var829,var808,var2124,var2670 

 Iteration 9 :  Optimal value:  10.4 
 Optimal List:   var378,var829,var808,var2124,var2670 

 Iteration 10 :  Optimal value:  10.4 
 Optimal List:   var808,var829,var378,var2124,var2670 

 Iteration 11 :  Optimal value:  10.4 
 Optimal List:   var378,var808,var829,var2124,var523 

 Iteration 12 :  Optimal value:  10.4 
 Optimal List:   var808,var829,var378,var2124,var2670 

 Iteration 13 :  Optimal value:  10.4 
 Optimal List:   var808,var829,var378,var2124,var2670 

 Iteration 14 :  Optimal value:  10.4 
 Optimal List:   var808,var829,var378,var2124,var2670 

 Iteration 15 :  Optimal value:  10.4 
 Optimal List:   var808,var829,var378,var2124,var2670 

 Iteration 16 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 17 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 18 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 19 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 20 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 21 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 22 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 23 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 24 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 25 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 26 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 27 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 28 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 29 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 30 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 31 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 32 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 33 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 34 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 35 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 36 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 37 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 38 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 39 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 40 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 41 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 42 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 43 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 44 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 

 Iteration 45 :  Optimal value:  9.2 
 Optimal List:   var378,var808,var829,var2124,var2670 
[1] "test acc rank aggreg GA:0.882352941176471"
[1] "test AUC acc rank aggreg GA:0.889285714285714"
[1] "10 fold train rank aggreg res GA100"
[1] "confusion matrix train 10 fold rank aggreg GA"
            nci_y
pred10foldRA -1  1
          -1 27  0
          1   0 11
[1] "Num itr RA GA"
[1] 46
[1] "Test BER aggreg GA is"
[1] 0.8892857
There were 11 warnings (use warnings() to see them)
> 
> cma_feat_list<-colnames(trainm)
> 
> save(CMAres,file="CMAres.Rda")
> write.table(cma_feat_list,file="selected_cma_feat_list.txt",sep="t",row.names=FALSE)
> 
> # modtraindata=modtrain, modtestdata=modtest, blindtest=testacc, modtrainclass=nci_y, modtestclass=test_y
> #if(FALSE)
> {
+ trainm<-CMAres$modtraindata
+ testm<-CMAres$modtestdata
+ trainclass<-CMAres$modtrainclass
+ testclass<-CMAres$modtestclass
+ learningsets<-CMAres$learningsets
+ }
> 
> if(FALSE)
+ {
+ trainclass<-trainm[,1] #CMAres$modtrainclass
+ testclass<-testm[,1] #CMAres$modtestclass
+ trainm<-trainm[,-c(1)] #CMAres$modtrainmata
+ testm<-testm[,-c(1)] #CMAres$modtestmata
+ 
+ }
> 
> d_dim<-dim(trainm)
> 
> print("Original dimension")
[1] "Original dimension"
> print(d_dim)
[1] 38 11
> 
> system.time(psores<-run_pso(outloc=outloc,trainm,trainclass,testm,testclass,transition_matrix,c1=2.05,
+ c2=2.05,
+ itr=10,
+ globalpso_maxitr=10,
+ global_max_itr=5,
+ num_part=20,
+ kname="radial",
+ errortype="BER",
+ weightA<-as.numeric(args[1]),
+ weightB<-as.numeric(args[2]),
+ weightC<-as.numeric(args[3]),
+ weightD<-as.numeric(args[4]),
+ featweight.max=0.01,
+ featweight.min=0.01,
+ numfolds=10,
+ followerprob=as.numeric(args[6]),
+ confusionprob=as.numeric(args[7]),
+ leaderprob=as.numeric(args[8]),
+ wmax=1,
+ wmin=1,
+ behavior_reset_itr=5,
+ maxitrreset=10,
+ num_neighbors=3,
+ minselect.pct=0.5,
+ evalMode="CV2",
+ minfitnessthresh=50,
+ maxnum=as.numeric(args[10]),minnum=3,inertia_method=args[5],particlebehav_method="randbased",constriction_factor=1,
+ select.global.best=TRUE,numnodes=4,evalFunc=eval_fit_kfold_diff,itr.terminate=FALSE,train.pct=0.8))
[1] "c1: 2.05"
[1] "c2: 2.05"
[1] "itr: 10"
[1] "globalpso_maxitr: 10"
[1] "global_max_itr: 5"
[1] "num_part: 20"
[1] "kname: radial"
[1] "errortype: BER"
[1] "weightA: 0.7"
[1] "weightB: 0.2"
[1] "weightC: 0.05"
[1] "weightD: 0.05"
[1] "featweight.max: 0.01"
[1] "featweight.min: 0.01"
[1] "numfolds: 10"
[1] "followerprob: 0.45"
[1] "confusionprob: 0.2"
[1] "leaderprob: 0.25"
[1] "wmax: 1"
[1] "wmin: 1"
[1] "behavior_reset_itr: 5"
[1] "maxitrreset: 10"
[1] "num_neighbors: 3"
[1] "minselect.pct: 0.5"
[1] "minfitnessthresh: 50"
[1] "maxnum: 5"
[1] "minnum: 3"
[1] "inertia_method: global"
[1] "particlebehav_method: randbased"
[1] "constriction_factor: 0.792"
[1] "select.global.best: TRUE"
[1] "train 10 fold"
[1] 100
[1] "here"
[1] "s"
[1] 30.4
[1] 38 11
[1] 10
[1] "learning sets: 1"
 [1]  6 28 12  2 16  7 25 20 29 13 15  3 19  9 30 26 21 38 27 10  5 14 23 34  8
[26] 24  4 31 36  1
[1] "Starting global iteration number : 1"
[1] "iteration number: "
[1] 1
[1] "Best fitness updated to:"
[1] -24.08977
[1] "Best solution:"
 [1] NA NA NA NA NA NA NA NA NA NA NA
[1] 0
Error: object 'x_lbest_vec' not found
In addition: There were 24 warnings (use warnings() to see them)
Timing stopped at: 0.056 0.018 5.953 
Execution halted
