
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #.libPaths("/home/stu/kuppal3/karan_libs/Rlibs")
> library(snow)
> library(e1071)
> library(yaImpute)

Attaching package: ‘yaImpute’

The following object is masked from ‘package:e1071’:

    impute

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(bioDist)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘parallel’

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster


Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parRapply, parSapply

The following object is masked from ‘package:stats’:

    xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, as.vector, cbind, colnames,
    do.call, duplicated, eval, evalq, Filter, Find, get, intersect,
    is.unsorted, lapply, Map, mapply, match, mget, order, paste, pmax,
    pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rep.int,
    rownames, sapply, setdiff, sort, table, tapply, union, unique,
    unlist, unsplit

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
> #library(CMA, lib="/home/stu/kuppal3/karan_libs/Rlibs/")
> library(RankAggreg)
> library(CMA)

Attaching package: ‘CMA’

The following object is masked from ‘package:pROC’:

    roc

The following object is masked from ‘package:e1071’:

    tune

> library(expm)
Loading required package: Matrix

Attaching package: ‘expm’

The following object is masked from ‘package:Matrix’:

    expm

> 
> cl<-makeCluster(1)
> 
> 
> args<-commandArgs(trailingOnly=TRUE)
> #sname<-paste("/home/stu/kuppal3/Research/Feature_selection/Rcode/version2016/OCFS_",args[9],".R",sep="")
> #sname<-paste("/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/version2016/OCFS_",args[9],".R",sep="")
> sname<-paste("/home/kuppal2/Documents/Projects/xmsPANDA/Other/scripts/OCFS_",args[9],".R",sep="")
> source(sname)
> print(sname)
[1] "/home/kuppal2/Documents/Projects/xmsPANDA/Other/scripts/OCFS_voct72016.R"
> 
> #data_loc<-"/home/stu/kuppal3/Research/Feature_selection/Datasets/Golub/" 
> #data_loc<-"/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/Datasets/Golub/"
> data_loc<-"/home/kuppal2/Documents/Projects/xmsPANDA/Other/Datasets/Golub/"
> setwd(data_loc)
> #load("/home/stu/kuppal3/Research/Feature_selection/Datasets/MAQCII_BreastCancer/MaqcIIbr.Rda")
> 
> 
> outloc<-paste(data_loc,"OCFSv062016_v32_Golub_sensitivity_itr",args[9],"/",sep="")
> 
> load("Golub.rda")
> 
> dir.create(outloc)
> setwd(outloc)
> 
> trainm<-Golub$X
> testm<-Golub$Xt
> trainclass<-Golub$y
> testclass<-Golub$yt
> 
> cnames<-paste("var",seq(1,dim(trainm)[2]),sep="")
> colnames(trainm)<-cnames
> colnames(testm)<-cnames
> trainm<-t(trainm)
> testm<-t(testm)
> trainm[trainm < 100] <- 100
> trainm[trainm > 16000] <- 16000
> testm[testm < 100] <- 100
> testm[testm > 16000] <- 16000
> 
> mmfilt <- function(x,r = 5, d = 500, na.rm = TRUE) {
+  minval <- min(x, na.rm = na.rm)
+  maxval <- max(x, na.rm = na.rm)
+  (maxval/minval > r) && (maxval - minval > d)
+ }
> 
> #mmfun <- mmfilt()
> #ffun <- filterfun(mmfun)
> #good <- genefilter(X, ffun)
> 
> good<-apply(trainm,1,mmfilt)
> 
> trainm<-trainm[good,]
> print(dim(trainm))
[1] 3051   38
> testm<-testm[good,]
> trainm<-log10(trainm+1)
>  testm<-log10(testm+1)
> trainm<-t(trainm)
> testm<-t(testm)
> trainm<-cbind(trainclass,trainm)
> testm<-cbind(testclass,testm)
> trainm<-na.omit(trainm)
> testm<-na.omit(testm)
> 
> 
> 
> 
> 
> 
> 
> #OCFSvmay2415v2reg_itr1_LassoRFELIMMAELpres1backwsel_l0.25f0.45c0.25_top10pctmaxitrs100minselmedianrandbehavfeatw0.01_CV2accA100B1wrand6methodsmax100wrand/"
> 
> dir.create(outloc)
Warning message:
In dir.create(outloc) :
  '/home/kuppal2/Documents/Projects/xmsPANDA/Other/Datasets/Golub/OCFSv062016_v32_Golub_sensitivity_itrvoct72016' already exists
> setwd(outloc)
> 
> trainm<-as.matrix(trainm)
> testm<-as.matrix(testm)
> trainclass<-trainm[,1] #CMAres$modtrainclass
> testclass<-testm[,1] #CMAres$modtestclass
> trainm<-trainm[,-c(1)] #CMAres$modtrainmata
> testm<-testm[,-c(1)] #CMAres$modtestmata
> 
> #a: Confusions
> #b: Neighbors
> #c: Global
> #d: Death
> 
> a<-c(0.25,0.25,0.25,0.25)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0.25,0.25,0.5,0)
> d<-c(0.9,0.1,0,0.1)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0,0.5,0.5,0)
> d<-c(0.9,0.1,0,0)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.2,0.3,0.4,0.1)
> c<-c(0,0.4,0.4,0.2)
> d<-c(0.9,0.1,0,0)
> 
> transition_matrix<-rbind(a,b,c,d)
> 
> 
> dir.create(outloc)
Warning message:
In dir.create(outloc) :
  '/home/kuppal2/Documents/Projects/xmsPANDA/Other/Datasets/Golub/OCFSv062016_v32_Golub_sensitivity_itrvoct72016' already exists
> setwd(outloc)
> temp2=t(trainm)
> temp2=apply(temp2, 2, function(x){which(x=="MD")})
> temp2=unlist(temp2)
> temp2=unique(temp2)
> if(length(temp2)>1)
+ {
+ 	trainm=trainm[,-c(temp2)]
+ 
+ 	rm(temp2)
+ }
> 
> boostweight=rep(0,dim(trainm)[2])
> 
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("limma"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.1,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod="none",
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
V1 V2 V3 V4 
-1 -1 -1 -1 
Levels: -1 1
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] 2.902003 2.637490 3.168792
[1] "norm train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "mean of feat 2"
[1] 2.241856
[1] "sd of feat 2"
[1] 0.2932821
[1] "maxnum is "
[1] 30
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 

Attaching package: ‘limma’

The following object is masked from ‘package:BiocGenerics’:

    plotMA

GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "limma:30:100"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
 [1]  140  378  523  717  766  773  808  829  894  937 1009 1069 1141 1413 1448
[16] 1676 1778 1907 1977 1995 2124 2198 2489 2663 2664 2670 2750 2761 2813 2939
       var312   var760  var1144  var1630  var1745  var1779  var1834  var1882
[1,] 2.916980 2.209515 2.786041 2.757396 2.563481 2.004321 2.418301 2.482874
[2,] 2.820201 2.770115 2.967548 3.461499 2.795880 2.004321 2.008600 3.133219
[3,] 3.059185 2.318063 3.229938 3.435207 2.037426 2.004321 2.491362 2.406540
      var2015  var2121  var2288  var2402  var2592  var3252  var3320  var3877
[1,] 2.004321 3.149527 2.004321 2.893762 2.247973 2.004321 3.051153 2.245513
[2,] 2.167317 3.366610 2.004321 2.567026 3.057286 2.167317 3.026533 2.093422
[3,] 2.082785 3.445604 2.004321 3.103462 2.064458 2.045323 3.145818 2.004321
      var4107  var4373  var4499  var4535  var4847  var5039  var5772  var6200
[1,] 2.206826 2.720159 2.488551 3.137671 2.475671 2.778874 3.492201 2.466868
[2,] 2.311754 3.031408 2.271842 3.073718 2.488551 2.528917 3.048830 3.314499
[3,] 2.004321 2.686636 2.451786 3.346744 2.491362 2.759668 3.657438 2.004321
      var6201  var6218  var6376  var6405  var6539  var6855
[1,] 2.523746 2.004321 2.004321 2.004321 2.212188 3.120903
[2,] 3.728029 2.004321 2.562293 2.322219 2.230449 2.953760
[3,] 2.480007 2.004321 2.004321 2.110590 2.004321 2.776701
       var312   var760  var1144  var1630  var1745  var1779  var1834  var1882
[1,] 2.659916 2.004321 2.895975 2.923244 2.217484 2.691081 2.227887 2.004321
[2,] 2.710963 2.004321 2.997823 2.257679 2.902003 2.004321 2.389166 2.004321
[3,] 2.831230 2.356026 2.789581 2.887054 2.691965 2.004321 2.004321 2.004321
      var2015  var2121  var2288  var2402  var2592  var3252  var3320  var3877
[1,] 2.004321 2.978637 2.004321 2.797960 2.004321 2.004321 3.050380 2.004321
[2,] 2.004321 3.003891 2.004321 2.918030 2.053078 2.004321 3.007321 2.786751
[3,] 2.004321 3.082426 2.004321 2.845098 2.004321 2.004321 2.632457 2.004321
      var4107  var4373  var4499  var4535  var4847  var5039  var5772  var6200
[1,] 2.004321 2.451786 2.477121 2.247973 2.252853 2.668386 3.309204 2.526339
[2,] 2.096910 3.038620 2.572872 2.691081 2.025306 2.806180 3.175512 2.222716
[3,] 2.004321 2.704151 2.004321 3.100026 2.403121 2.309630 3.627468 2.178977
      var6201  var6218  var6376  var6405  var6539  var6855
[1,] 2.870404 2.037426 2.133539 2.004321 2.004321 3.171726
[2,] 2.303196 2.230449 3.013259 2.004321 2.457882 2.783189
[3,] 2.004321 2.584331 2.004321 2.004321 2.614897 3.170262
[1] "numgenes selected:30"
[1] "test acc:0.970588235294118"
[1] "test AUC acc:0.964285714285714"
[1] "10 fold train100"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  1
       1   0 13
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
Warning messages:
1: In if (is.na(boostweight) == TRUE) { :
  the condition has length > 1 and only the first element will be used
2: In if (is.na(testm) == TRUE) { :
  the condition has length > 1 and only the first element will be used
3: In if (is.na(testclass) == TRUE) { :
  the condition has length > 1 and only the first element will be used
4: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
5: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
6: In mean.default(KI_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
> 
> 
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("lasso"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.1,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod="none",
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
V1 V2 V3 V4 
-1 -1 -1 -1 
Levels: -1 1
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] 2.902003 2.637490 3.168792
[1] "norm train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "mean of feat 2"
[1] 2.241856
[1] "sd of feat 2"
[1] 0.2932821
[1] "maxnum is "
[1] 30
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
Loaded glmnet 2.0-5


Attaching package: ‘glmnet’

The following object is masked from ‘package:pROC’:

    auc

GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
genelist
   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 
  20   20   20   20   20   20   20   20   20   20   20   20   20   20   20   20 
  17   18   19   20   21   22   23  829  808 2670   24  523 2124   25 2813 1448 
  20   20   20   20   20   20   20   20   18   16   14   12   10    8    8    6 
 792 1995 2198   26  140  378  894 1413 1977 2663 2750 
   4    4    4    2    2    2    2    2    2    2    2 
[1] "varselmethod"
[1] "none"
[1] "lasso:30:94.7368421052632"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
 [1]    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15
[16]   16   17   18   19   20   21   22   23   24   25  523  808  829 2124 2670
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
        var45    var46    var48    var49    var50    var51    var52    var53
[1,] 4.204147 4.204147 2.423246 2.004321 2.475671 3.829368 3.816904 3.066326
[2,] 4.204147 4.204147 2.710963 2.187521 2.456366 3.345570 3.582631 2.816904
[3,] 4.204147 4.204147 2.785330 2.004321 2.274158 3.521922 3.525045 2.967548
        var54    var56    var57    var59    var60    var62    var65    var69
[1,] 3.474653 2.123852 2.737987 2.527630 2.181844 2.450249 2.004321 2.905256
[2,] 3.503518 2.480007 2.725095 2.622214 2.421604 2.399674 2.230449 2.879096
[3,] 3.491081 2.720159 2.959995 2.881955 2.004321 2.555094 2.556303 3.400538
        var72  var1144  var1834  var1882  var4847  var6218
[1,] 2.578639 2.786041 2.418301 2.482874 2.475671 2.004321
[2,] 2.397940 2.967548 2.008600 3.133219 2.488551 2.004321
[3,] 2.559907 3.229938 2.491362 2.406540 2.491362 2.004321
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.133539 2.428135 2.004321 2.004321 2.004321 3.802089 3.716003
[2,] 2.004321 2.004321 2.572872 2.004321 2.004321 2.004321 4.031691 4.008941
[3,] 2.004321 2.004321 2.220108 2.021189 2.004321 2.004321 4.007406 4.204147
        var45    var46    var48    var49    var50    var51    var52    var53
[1,] 4.204147 4.204147 2.176091 2.004321 2.361728 3.807467 4.204147 2.659916
[2,] 3.993789 4.122936 2.340444 2.004321 2.004321 2.004321 3.307496 2.537819
[3,] 3.995767 4.204147 2.204120 2.004321 2.004321 2.450249 2.884229 2.004321
        var54    var56    var57    var59    var60    var62    var65    var69
[1,] 2.794488 2.428135 2.004321 2.287802 2.383815 2.401401 2.176091 3.061452
[2,] 2.779596 2.411620 2.644439 2.820201 2.634477 2.120574 2.004321 3.009451
[3,] 3.222456 2.344392 2.264818 2.336460 2.418301 2.093422 2.549003 2.260071
        var72  var1144  var1834  var1882  var4847  var6218
[1,] 2.004321 2.895975 2.227887 2.004321 2.252853 2.037426
[2,] 2.004321 2.997823 2.389166 2.004321 2.025306 2.230449
[3,] 2.885361 2.789581 2.004321 2.004321 2.403121 2.584331
[1] "numgenes selected:30"
[1] "test acc:0.911764705882353"
[1] "test AUC acc:0.892857142857143"
[1] "10 fold train97.3684210526316"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  3
       1   0 11
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
Warning messages:
1: In if (is.na(boostweight) == TRUE) { :
  the condition has length > 1 and only the first element will be used
2: In if (is.na(testm) == TRUE) { :
  the condition has length > 1 and only the first element will be used
3: In if (is.na(testclass) == TRUE) { :
  the condition has length > 1 and only the first element will be used
4: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
5: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
6: In mean.default(KI_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
> 
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("rfe"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.1,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod="none",
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
V1 V2 V3 V4 
-1 -1 -1 -1 
Levels: -1 1
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] 2.902003 2.637490 3.168792
[1] "norm train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "mean of feat 2"
[1] 2.241856
[1] "sd of feat 2"
[1] 0.2932821
[1] "maxnum is "
[1] 30
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "rfe:30:100"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
 [1]  229  377  378  738  773  808  829 1009 1030 1034 1038 1069 1162 1754 2026
[16] 2065 2124 2208 2402 2561 2600 2656 2663 2664 2670 2698 2734 2750 2813 2945
       var487   var758   var760  var1685  var1779  var1834  var1882  var2288
[1,] 2.004321 3.293584 2.209515 3.516271 2.004321 2.418301 2.482874 2.004321
[2,] 2.004321 2.298853 2.770115 3.211654 2.004321 2.008600 3.133219 2.004321
[3,] 2.004321 2.763428 2.318063 3.444669 2.004321 2.491362 2.406540 2.004321
      var2335  var2345  var2349  var2402  var2642  var4052  var4595  var4680
[1,] 3.332640 2.004321 2.220108 2.893762 3.969742 3.024486 2.201397 4.161727
[2,] 2.004321 3.147985 2.703291 2.567026 2.952308 3.144885 2.004321 2.004321
[3,] 2.004321 2.004321 2.004321 3.103462 2.798651 2.915927 2.004321 2.004321
      var4847  var5062  var5552  var5952  var6041  var6185  var6200  var6201
[1,] 2.475671 3.219060 3.961184 2.004321 3.108903 2.294466 2.466868 2.523746
[2,] 2.488551 3.027757 3.611829 2.004321 2.733197 3.326541 3.314499 3.728029
[3,] 2.491362 2.556303 3.504199 2.004321 2.374748 2.985875 2.004321 2.480007
      var6218  var6277  var6345  var6376  var6539  var6884
[1,] 2.004321 2.004321 3.751510 2.004321 2.212188 2.079181
[2,] 2.004321 2.004321 3.686547 2.562293 2.230449 2.004321
[3,] 2.004321 2.004321 2.004321 2.004321 2.004321 2.238046
       var487   var758   var760  var1685  var1779  var1834  var1882  var2288
[1,] 2.466868 3.302547 2.004321 3.939569 2.691081 2.227887 2.004321 2.004321
[2,] 2.004321 3.256237 2.004321 3.664172 2.004321 2.389166 2.004321 2.004321
[3,] 2.910091 3.589279 2.356026 3.172603 2.004321 2.004321 2.004321 2.004321
      var2335  var2345  var2349  var2402  var2642  var4052  var4595  var4680
[1,] 3.439648 2.004321 2.313867 2.797960 4.112906 2.928396 2.387390 3.362294
[2,] 2.004321 2.350248 2.004321 2.918030 3.258637 2.894870 2.004321 2.004321
[3,] 3.341435 3.839981 2.004321 2.845098 3.559667 3.345766 2.004321 3.138303
      var4847  var5062  var5552  var5952  var6041  var6185  var6200  var6201
[1,] 2.252853 2.893762 3.792392 2.004321 2.004321 2.004321 2.526339 2.870404
[2,] 2.025306 2.283301 2.492760 2.004321 2.557507 2.290035 2.222716 2.303196
[3,] 2.403121 2.992995 3.720325 2.004321 2.752816 2.173186 2.178977 2.004321
      var6218  var6277  var6345  var6376  var6539  var6884
[1,] 2.037426 2.004321 2.004321 2.133539 2.004321 2.184691
[2,] 2.230449 2.004321 2.794488 3.013259 2.457882 2.604226
[3,] 2.584331 2.004321 2.089905 2.004321 2.614897 2.004321
[1] "numgenes selected:30"
[1] "test acc:1"
[1] "test AUC acc:1"
[1] "10 fold train100"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  0
       1   0 14
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
There were 14 warnings (use warnings() to see them)
> 
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("elasticnet"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.1,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod="none",
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
V1 V2 V3 V4 
-1 -1 -1 -1 
Levels: -1 1
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] 2.902003 2.637490 3.168792
[1] "norm train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "mean of feat 2"
[1] 2.241856
[1] "sd of feat 2"
[1] 0.2932821
[1] "maxnum is "
[1] 30
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "elasticnet:30:92.1052631578947"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
 [1]    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15
[16]   16   17   18   19   20   21   22   23   24   25   26  808  829 2124 2670
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
        var45    var46    var48    var49    var50    var51    var52    var53
[1,] 4.204147 4.204147 2.423246 2.004321 2.475671 3.829368 3.816904 3.066326
[2,] 4.204147 4.204147 2.710963 2.187521 2.456366 3.345570 3.582631 2.816904
[3,] 4.204147 4.204147 2.785330 2.004321 2.274158 3.521922 3.525045 2.967548
        var54    var56    var57    var59    var60    var62    var65    var69
[1,] 3.474653 2.123852 2.737987 2.527630 2.181844 2.450249 2.004321 2.905256
[2,] 3.503518 2.480007 2.725095 2.622214 2.421604 2.399674 2.230449 2.879096
[3,] 3.491081 2.720159 2.959995 2.881955 2.004321 2.555094 2.556303 3.400538
        var72    var73  var1834  var1882  var4847  var6218
[1,] 2.578639 2.004321 2.418301 2.482874 2.475671 2.004321
[2,] 2.397940 2.004321 2.008600 3.133219 2.488551 2.004321
[3,] 2.559907 2.004321 2.491362 2.406540 2.491362 2.004321
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.133539 2.428135 2.004321 2.004321 2.004321 3.802089 3.716003
[2,] 2.004321 2.004321 2.572872 2.004321 2.004321 2.004321 4.031691 4.008941
[3,] 2.004321 2.004321 2.220108 2.021189 2.004321 2.004321 4.007406 4.204147
        var45    var46    var48    var49    var50    var51    var52    var53
[1,] 4.204147 4.204147 2.176091 2.004321 2.361728 3.807467 4.204147 2.659916
[2,] 3.993789 4.122936 2.340444 2.004321 2.004321 2.004321 3.307496 2.537819
[3,] 3.995767 4.204147 2.204120 2.004321 2.004321 2.450249 2.884229 2.004321
        var54    var56    var57    var59    var60    var62    var65    var69
[1,] 2.794488 2.428135 2.004321 2.287802 2.383815 2.401401 2.176091 3.061452
[2,] 2.779596 2.411620 2.644439 2.820201 2.634477 2.120574 2.004321 3.009451
[3,] 3.222456 2.344392 2.264818 2.336460 2.418301 2.093422 2.549003 2.260071
        var72    var73  var1834  var1882  var4847  var6218
[1,] 2.004321 2.004321 2.227887 2.004321 2.252853 2.037426
[2,] 2.004321 2.004321 2.389166 2.004321 2.025306 2.230449
[3,] 2.885361 2.004321 2.004321 2.004321 2.403121 2.584331
[1] "numgenes selected:30"
[1] "test acc:0.911764705882353"
[1] "test AUC acc:0.892857142857143"
[1] "10 fold train97.3684210526316"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  3
       1   0 11
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
Warning messages:
1: In if (is.na(boostweight) == TRUE) { :
  the condition has length > 1 and only the first element will be used
2: In if (is.na(testm) == TRUE) { :
  the condition has length > 1 and only the first element will be used
3: In if (is.na(testclass) == TRUE) { :
  the condition has length > 1 and only the first element will be used
4: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
5: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
6: In mean.default(KI_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
> 
> if(FALSE){
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("rf"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.1,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod="none",
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ }
> 
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("f.test"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.1,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod="none",
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
V1 V2 V3 V4 
-1 -1 -1 -1 
Levels: -1 1
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] 2.902003 2.637490 3.168792
[1] "norm train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "mean of feat 2"
[1] 2.241856
[1] "sd of feat 2"
[1] 0.2932821
[1] "maxnum is "
[1] 30
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "f.test:30:100"
[1] "dim of scoring matrix is "
[1] 3051    1
[1] 3051
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
 [1]  108  140  378  523  717  766  808  829  937  988 1009 1069 1413 1448 1676
[16] 1778 1907 1977 1995 2124 2198 2489 2663 2664 2670 2702 2750 2761 2813 2939
       var248   var312   var760  var1144  var1630  var1745  var1834  var1882
[1,] 2.214844 2.916980 2.209515 2.786041 2.757396 2.563481 2.418301 2.482874
[2,] 2.247973 2.820201 2.770115 2.967548 3.461499 2.795880 2.008600 3.133219
[3,] 2.127105 3.059185 2.318063 3.229938 3.435207 2.037426 2.491362 2.406540
      var2121  var2242  var2288  var2402  var3252  var3320  var3877  var4107
[1,] 3.149527 2.004321 2.004321 2.893762 2.004321 3.051153 2.245513 2.206826
[2,] 3.366610 2.041393 2.004321 2.567026 2.167317 3.026533 2.093422 2.311754
[3,] 3.445604 2.004321 2.004321 3.103462 2.045323 3.145818 2.004321 2.004321
      var4373  var4499  var4535  var4847  var5039  var5772  var6200  var6201
[1,] 2.720159 2.488551 3.137671 2.475671 2.778874 3.492201 2.466868 2.523746
[2,] 3.031408 2.271842 3.073718 2.488551 2.528917 3.048830 3.314499 3.728029
[3,] 2.686636 2.451786 3.346744 2.491362 2.759668 3.657438 2.004321 2.480007
      var6218  var6281  var6376  var6405  var6539  var6855
[1,] 2.004321 2.779596 2.004321 2.004321 2.212188 3.120903
[2,] 2.004321 2.639486 2.562293 2.322219 2.230449 2.953760
[3,] 2.004321 2.738781 2.004321 2.110590 2.004321 2.776701
       var248   var312   var760  var1144  var1630  var1745  var1834  var1882
[1,] 2.217484 2.659916 2.004321 2.895975 2.923244 2.217484 2.227887 2.004321
[2,] 2.274158 2.710963 2.004321 2.997823 2.257679 2.902003 2.389166 2.004321
[3,] 2.004321 2.831230 2.356026 2.789581 2.887054 2.691965 2.004321 2.004321
      var2121  var2242  var2288  var2402  var3252  var3320  var3877  var4107
[1,] 2.978637 2.004321 2.004321 2.797960 2.004321 3.050380 2.004321 2.004321
[2,] 3.003891 2.004321 2.004321 2.918030 2.004321 3.007321 2.786751 2.096910
[3,] 3.082426 2.004321 2.004321 2.845098 2.004321 2.632457 2.004321 2.004321
      var4373  var4499  var4535  var4847  var5039  var5772  var6200  var6201
[1,] 2.451786 2.477121 2.247973 2.252853 2.668386 3.309204 2.526339 2.870404
[2,] 3.038620 2.572872 2.691081 2.025306 2.806180 3.175512 2.222716 2.303196
[3,] 2.704151 2.004321 3.100026 2.403121 2.309630 3.627468 2.178977 2.004321
      var6218  var6281  var6376  var6405  var6539  var6855
[1,] 2.037426 2.677607 2.133539 2.004321 2.004321 3.171726
[2,] 2.230449 2.401401 3.013259 2.004321 2.457882 2.783189
[3,] 2.584331 2.790285 2.004321 2.004321 2.614897 3.170262
[1] "numgenes selected:30"
[1] "test acc:0.970588235294118"
[1] "test AUC acc:0.964285714285714"
[1] "10 fold train100"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  1
       1   0 13
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
Warning messages:
1: In if (is.na(boostweight) == TRUE) { :
  the condition has length > 1 and only the first element will be used
2: In if (is.na(testm) == TRUE) { :
  the condition has length > 1 and only the first element will be used
3: In if (is.na(testclass) == TRUE) { :
  the condition has length > 1 and only the first element will be used
4: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
5: In mean.default(DS_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
6: In mean.default(KI_res, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
> 
> #1
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("limma","lasso","rfe","elasticnet", "f.test"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.1,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod="backward",
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   38 3051
[1]   38 3051
[1] "length of factcols"
[1] 0
[1]   38 3051
[1]   34 3051
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
V1 V2 V3 V4 
-1 -1 -1 -1 
Levels: -1 1
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "orig train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] 2.902003 2.637490 3.168792
[1] "norm train matrix"
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
[4,] 2.004321 2.193125 2.619093 3.685831 3.360593 3.409933 4.173798 4.058426
[5,] 2.004321 2.089905 2.684845 3.108903 3.436481 2.501059 4.165956 4.176988
        var45    var46
[1,] 4.204147 4.204147
[2,] 4.204147 4.204147
[3,] 4.204147 4.204147
[4,] 4.197859 4.204147
[5,] 4.204147 4.204147
[1] "mean of feat 2"
[1] 2.241856
[1] "sd of feat 2"
[1] 0.2932821
[1] "maxnum is "
[1] 30
[1] "# of genes left after filtering:"
[1]   38 3051
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "backward"
[1] "limma:30:129.058997050147"
[1] "limma:30:129.058997050147 : 29"
[1] "limma:29:129.057030481809"
[1] "limma:29:129.058997050147 : 28"
[1] "limma:28:129.055063913471"
[1] "limma:28:129.058997050147 : 27"
[1] "limma:27:129.053097345133"
[1] "limma:27:129.058997050147 : 26"
[1] "limma:26:129.051130776794"
[1] "limma:26:129.058997050147 : 25"
[1] "limma:25:129.049164208456"
[1] "limma:25:129.058997050147 : 24"
[1] "limma:24:129.047197640118"
[1] "limma:24:129.058997050147 : 23"
[1] "limma:23:129.04523107178"
[1] "limma:23:129.058997050147 : 22"
[1] "limma:22:129.043264503441"
[1] "limma:22:129.058997050147 : 21"
[1] "limma:21:129.041297935103"
[1] "limma:21:129.058997050147 : 20"
[1] "limma:20:126.539331366765"
[1] "limma:21:129.058997050147 : 19"
[1] "limma:19:129.037364798427"
[1] "limma:19:129.058997050147 : 18"
[1] "limma:18:129.035398230089"
[1] "limma:18:129.058997050147 : 17"
[1] "limma:17:131.53343166175"
[1] "limma:17:131.53343166175 : 16"
[1] "limma:16:131.531465093412"
[1] "limma:16:131.53343166175 : 15"
[1] "limma:15:126.529498525074"
[1] "limma:16:131.53343166175 : 14"
[1] "limma:14:126.527531956736"
[1] "limma:16:131.53343166175 : 13"
[1] "limma:13:126.525565388397"
[1] "limma:16:131.53343166175 : 12"
[1] "limma:12:126.523598820059"
[1] "limma:16:131.53343166175 : 11"
[1] "limma:11:124.021632251721"
[1] "limma:16:131.53343166175 : 10"
[1] "limma:10:124.019665683382"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
genelist
   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 
  20   20   20   20   20   20   20   20   20   20   20   20   20   20   20   20 
  17   18   19   20   21   22   23  829  808 2670   24  523 2124   25 2813 1448 
  20   20   20   20   20   20   20   20   18   16   14   12   10    8    8    6 
 792 1995 2198   26  140  378  894 1413 1977 2663 2750 
   4    4    4    2    2    2    2    2    2    2    2 
[1] "varselmethod"
[1] "backward"
[1] "lasso:30:119.058997050147"
[1] "lasso:30:119.058997050147 : 29"
[1] "lasso:29:119.057030481809"
[1] "lasso:29:119.058997050147 : 28"
[1] "lasso:28:119.055063913471"
[1] "lasso:28:119.058997050147 : 27"
[1] "lasso:27:119.053097345133"
[1] "lasso:27:119.058997050147 : 26"
[1] "lasso:26:119.051130776794"
[1] "lasso:26:119.058997050147 : 25"
[1] "lasso:25:119.049164208456"
[1] "lasso:25:119.058997050147 : 24"
[1] "lasso:24:107.380530973451"
[1] "lasso:25:119.058997050147 : 23"
[1] "lasso:23:79.0452310717797"
[1] "lasso:25:119.058997050147 : 22"
[1] "lasso:22:79.0432645034415"
[1] "lasso:25:119.058997050147 : 21"
[1] "lasso:21:84.0412979351032"
[1] "lasso:25:119.058997050147 : 20"
[1] "lasso:20:84.039331366765"
[1] "lasso:25:119.058997050147 : 19"
[1] "lasso:19:79.0373647984268"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "backward"
[1] "rfe:30:129.058997050147"
[1] "rfe:30:129.058997050147 : 29"
[1] "rfe:29:129.057030481809"
[1] "rfe:29:129.058997050147 : 28"
[1] "rfe:28:129.055063913471"
[1] "rfe:28:129.058997050147 : 27"
[1] "rfe:27:129.053097345133"
[1] "rfe:27:129.058997050147 : 26"
[1] "rfe:26:129.051130776794"
[1] "rfe:26:129.058997050147 : 25"
[1] "rfe:25:129.049164208456"
[1] "rfe:25:129.058997050147 : 24"
[1] "rfe:24:129.047197640118"
[1] "rfe:24:129.058997050147 : 23"
[1] "rfe:23:129.04523107178"
[1] "rfe:23:129.058997050147 : 22"
[1] "rfe:22:129.043264503441"
[1] "rfe:22:129.058997050147 : 21"
[1] "rfe:21:129.041297935103"
[1] "rfe:21:129.058997050147 : 20"
[1] "rfe:20:129.039331366765"
[1] "rfe:20:129.058997050147 : 19"
[1] "rfe:19:129.037364798427"
[1] "rfe:19:129.058997050147 : 18"
[1] "rfe:18:129.035398230089"
[1] "rfe:18:129.058997050147 : 17"
[1] "rfe:17:124.03343166175"
[1] "rfe:18:129.058997050147 : 16"
[1] "rfe:16:124.031465093412"
[1] "rfe:18:129.058997050147 : 15"
[1] "rfe:15:124.029498525074"
[1] "rfe:18:129.058997050147 : 14"
[1] "rfe:14:124.027531956736"
[1] "rfe:18:129.058997050147 : 13"
[1] "rfe:13:124.025565388397"
[1] "rfe:18:129.058997050147 : 12"
[1] "rfe:12:119.023598820059"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "backward"
[1] "elasticnet:30:121.558997050147"
[1] "elasticnet:30:121.558997050147 : 29"
[1] "elasticnet:29:119.057030481809"
[1] "elasticnet:30:121.558997050147 : 28"
[1] "elasticnet:28:114.055063913471"
[1] "elasticnet:30:121.558997050147 : 27"
[1] "elasticnet:27:102.386430678466"
[1] "elasticnet:30:121.558997050147 : 26"
[1] "elasticnet:26:107.384464110128"
[1] "elasticnet:30:121.558997050147 : 25"
[1] "elasticnet:25:74.0491642084562"
[1] "elasticnet:30:121.558997050147 : 24"
[1] "elasticnet:24:79.047197640118"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "backward"
[1] "f.test:30:129.058997050147"
[1] "f.test:30:129.058997050147 : 29"
[1] "f.test:29:129.057030481809"
[1] "f.test:29:129.058997050147 : 28"
[1] "f.test:28:129.055063913471"
[1] "f.test:28:129.058997050147 : 27"
[1] "f.test:27:129.053097345133"
[1] "f.test:27:129.058997050147 : 26"
[1] "f.test:26:129.051130776794"
[1] "f.test:26:129.058997050147 : 25"
[1] "f.test:25:129.049164208456"
[1] "f.test:25:129.058997050147 : 24"
[1] "f.test:24:126.547197640118"
[1] "f.test:25:129.058997050147 : 23"
[1] "f.test:23:129.04523107178"
[1] "f.test:23:129.058997050147 : 22"
[1] "f.test:22:129.043264503441"
[1] "f.test:22:129.058997050147 : 21"
[1] "f.test:21:129.041297935103"
[1] "f.test:21:129.058997050147 : 20"
[1] "f.test:20:131.539331366765"
[1] "f.test:20:131.539331366765 : 19"
[1] "f.test:19:131.537364798427"
[1] "f.test:19:131.539331366765 : 18"
[1] "f.test:18:131.535398230089"
[1] "f.test:18:131.539331366765 : 17"
[1] "f.test:17:131.53343166175"
[1] "f.test:17:131.539331366765 : 16"
[1] "f.test:16:131.531465093412"
[1] "f.test:16:131.539331366765 : 15"
[1] "f.test:15:126.529498525074"
[1] "f.test:16:131.539331366765 : 14"
[1] "f.test:14:126.527531956736"
[1] "f.test:16:131.539331366765 : 13"
[1] "f.test:13:126.525565388397"
[1] "f.test:16:131.539331366765 : 12"
[1] "f.test:12:126.523598820059"
[1] "f.test:16:131.539331366765 : 11"
[1] "f.test:11:126.521632251721"
[1] "f.test:16:131.539331366765 : 10"
[1] "f.test:10:129.019665683382"
[1] "dim of scoring matrix is "
[1] 3051    5
[1] 3051
[1] "DS index stage 1"
[1] 0.3443404
[1] "bestgenelist"
 [1]    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15
[16]   16   17   18   19   20   21   22   23   24   25   26  377  378  766  773
[31]  808  829 1009 1034 1038 1069 1162 1413 1448 1778 1977 2124 2198 2402 2489
[46] 2600 2656 2663 2664 2670 2750 2813 2939
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.334454 2.902003 4.162535 3.988514 3.930949 4.178315 4.046378
[2,] 2.004321 2.068186 2.637490 2.789581 2.064458 3.181558 4.204147 4.132548
[3,] 2.021189 2.678518 3.168792 3.753583 3.514946 3.564548 4.204147 4.204147
        var45    var46    var48    var49    var50    var51    var52    var53
[1,] 4.204147 4.204147 2.423246 2.004321 2.475671 3.829368 3.816904 3.066326
[2,] 4.204147 4.204147 2.710963 2.187521 2.456366 3.345570 3.582631 2.816904
[3,] 4.204147 4.204147 2.785330 2.004321 2.274158 3.521922 3.525045 2.967548
        var54    var56    var57    var59    var60    var62    var65    var69
[1,] 3.474653 2.123852 2.737987 2.527630 2.181844 2.450249 2.004321 2.905256
[2,] 3.503518 2.480007 2.725095 2.622214 2.421604 2.399674 2.230449 2.879096
[3,] 3.491081 2.720159 2.959995 2.881955 2.004321 2.555094 2.556303 3.400538
        var72    var73   var758   var760  var1745  var1779  var1834  var1882
[1,] 2.578639 2.004321 3.293584 2.209515 2.563481 2.004321 2.418301 2.482874
[2,] 2.397940 2.004321 2.298853 2.770115 2.795880 2.004321 2.008600 3.133219
[3,] 2.559907 2.004321 2.763428 2.318063 2.037426 2.004321 2.491362 2.406540
      var2288  var2345  var2349  var2402  var2642  var3252  var3320  var4107
[1,] 2.004321 2.004321 2.220108 2.893762 3.969742 2.004321 3.051153 2.206826
[2,] 2.004321 3.147985 2.703291 2.567026 2.952308 2.167317 3.026533 2.311754
[3,] 2.004321 2.004321 2.004321 3.103462 2.798651 2.045323 3.145818 2.004321
      var4499  var4847  var5039  var5552  var5772  var6041  var6185  var6200
[1,] 2.488551 2.475671 2.778874 3.961184 3.492201 3.108903 2.294466 2.466868
[2,] 2.271842 2.488551 2.528917 3.611829 3.048830 2.733197 3.326541 3.314499
[3,] 2.451786 2.491362 2.759668 3.504199 3.657438 2.374748 2.985875 2.004321
      var6201  var6218  var6376  var6539  var6855
[1,] 2.523746 2.004321 2.004321 2.212188 3.120903
[2,] 3.728029 2.004321 2.562293 2.230449 2.953760
[3,] 2.480007 2.004321 2.004321 2.004321 2.776701
        var36    var37    var38    var39    var40    var41    var42    var43
[1,] 2.004321 2.133539 2.428135 2.004321 2.004321 2.004321 3.802089 3.716003
[2,] 2.004321 2.004321 2.572872 2.004321 2.004321 2.004321 4.031691 4.008941
[3,] 2.004321 2.004321 2.220108 2.021189 2.004321 2.004321 4.007406 4.204147
        var45    var46    var48    var49    var50    var51    var52    var53
[1,] 4.204147 4.204147 2.176091 2.004321 2.361728 3.807467 4.204147 2.659916
[2,] 3.993789 4.122936 2.340444 2.004321 2.004321 2.004321 3.307496 2.537819
[3,] 3.995767 4.204147 2.204120 2.004321 2.004321 2.450249 2.884229 2.004321
        var54    var56    var57    var59    var60    var62    var65    var69
[1,] 2.794488 2.428135 2.004321 2.287802 2.383815 2.401401 2.176091 3.061452
[2,] 2.779596 2.411620 2.644439 2.820201 2.634477 2.120574 2.004321 3.009451
[3,] 3.222456 2.344392 2.264818 2.336460 2.418301 2.093422 2.549003 2.260071
        var72    var73   var758   var760  var1745  var1779  var1834  var1882
[1,] 2.004321 2.004321 3.302547 2.004321 2.217484 2.691081 2.227887 2.004321
[2,] 2.004321 2.004321 3.256237 2.004321 2.902003 2.004321 2.389166 2.004321
[3,] 2.885361 2.004321 3.589279 2.356026 2.691965 2.004321 2.004321 2.004321
      var2288  var2345  var2349  var2402  var2642  var3252  var3320  var4107
[1,] 2.004321 2.004321 2.313867 2.797960 4.112906 2.004321 3.050380 2.004321
[2,] 2.004321 2.350248 2.004321 2.918030 3.258637 2.004321 3.007321 2.096910
[3,] 2.004321 3.839981 2.004321 2.845098 3.559667 2.004321 2.632457 2.004321
      var4499  var4847  var5039  var5552  var5772  var6041  var6185  var6200
[1,] 2.477121 2.252853 2.668386 3.792392 3.309204 2.004321 2.004321 2.526339
[2,] 2.572872 2.025306 2.806180 2.492760 3.175512 2.557507 2.290035 2.222716
[3,] 2.004321 2.403121 2.309630 3.720325 3.627468 2.752816 2.173186 2.178977
      var6201  var6218  var6376  var6539  var6855
[1,] 2.870404 2.037426 2.133539 2.004321 3.171726
[2,] 2.303196 2.230449 3.013259 2.457882 2.783189
[3,] 2.004321 2.584331 2.004321 2.614897 3.170262
[1] "numgenes selected:53"
[1] "test acc:0.941176470588235"
[1] "test AUC acc:0.928571428571429"
[1] "10 fold train100"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold -1  1
        -1 27  0
        1   0 11
[1] "confusion matrix test"
         test_y
pred_test -1  1
       -1 20  2
       1   0 12
[1] "train acc:1"
[1] "confusion matrix train"
          nci_y
pred_train -1  1
        -1 27  0
        1   0 11
[1] "DS index stage 1"
[1] 0.3443404
[1] "KI index stage 1"
[1] 0.2290864
[[1]]
 [1] "var378"  "var766"  "var808"  "var829"  "var1009" "var1413" "var1448"
 [8] "var1778" "var1977" "var2124" "var2489" "var2663" "var2664" "var2670"
[15] "var2813" "var2939"

[[2]]
 [1] "var1"   "var2"   "var3"   "var4"   "var5"   "var6"   "var7"   "var8"  
 [9] "var9"   "var10"  "var11"  "var12"  "var13"  "var14"  "var15"  "var16" 
[17] "var17"  "var18"  "var19"  "var20"  "var21"  "var22"  "var23"  "var808"
[25] "var829"

[[3]]
 [1] "var377"  "var378"  "var773"  "var829"  "var1009" "var1034" "var1038"
 [8] "var1069" "var1162" "var2124" "var2402" "var2600" "var2656" "var2663"
[15] "var2664" "var2670" "var2750" "var2813"

[[4]]
 [1] "var1"    "var2"    "var3"    "var4"    "var5"    "var6"    "var7"   
 [8] "var8"    "var9"    "var10"   "var11"   "var12"   "var13"   "var14"  
[15] "var15"   "var16"   "var17"   "var18"   "var19"   "var20"   "var21"  
[22] "var22"   "var23"   "var24"   "var25"   "var26"   "var808"  "var829" 
[29] "var2124" "var2670"

[[5]]
 [1] "var378"  "var766"  "var808"  "var829"  "var1009" "var1413" "var1448"
 [8] "var1778" "var1977" "var2124" "var2198" "var2489" "var2663" "var2664"
[15] "var2670" "var2939"

Error in data.frame(c("var378", "var766", "var808", "var829", "var1009",  : 
  arguments imply differing number of rows: 16, 25, 18, 30
Calls: performCMA ... as.data.frame -> as.data.frame.list -> eval -> eval -> data.frame
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
