
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #.libPaths("/home/kuppal3/karan_libs/Rlibs")
> library(snow)
Warning message:
package ‘snow’ was built under R version 3.2.5 
> library(e1071)
Warning message:
package ‘e1071’ was built under R version 3.2.5 
> library(yaImpute)

Attaching package: ‘yaImpute’

The following object is masked from ‘package:e1071’:

    impute

> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

Warning message:
package ‘pROC’ was built under R version 3.2.5 
> library(bioDist)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘parallel’

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster


Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:snow’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parRapply, parSapply

The following objects are masked from ‘package:stats’:

    IQR, mad, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, as.vector, cbind, colnames,
    do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl,
    intersect, is.unsorted, lapply, lengths, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unlist, unsplit

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
> #library(CMA, lib="/home/kuppal3/karan_libs/Rlibs/")
> library(RankAggreg)
Warning message:
package ‘RankAggreg’ was built under R version 3.2.5 
> library(CMA)

Attaching package: ‘CMA’

The following object is masked from ‘package:pROC’:

    roc

The following object is masked from ‘package:e1071’:

    tune

Warning message:
package ‘CMA’ was built under R version 3.2.4 
> library(expm)
Loading required package: Matrix

Attaching package: ‘expm’

The following object is masked from ‘package:Matrix’:

    expm

Warning messages:
1: package ‘expm’ was built under R version 3.2.5 
2: package ‘Matrix’ was built under R version 3.2.5 
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:CMA’:

    join

Warning message:
package ‘plyr’ was built under R version 3.2.5 
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Warning messages:
1: package ‘foreach’ was built under R version 3.2.5 
2: package ‘iterators’ was built under R version 3.2.5 
> cl<-makeCluster(1)
> 
> 
> args<-commandArgs(trailingOnly=TRUE)
> 
> dirloc<-"/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO/"
> #sname<-paste("/home/stu/kuppal3/Research/Feature_selection/Rcode/versionnov2014/OCFS_",args[9],".R",sep="")
> 
> sname<-paste(dirloc,"version2017/OCFS_",args[9],".R",sep="")
> source(sname)
> 
> outloc<-paste(dirloc,"/Datasets/Prostate/OCFSvmay2415_Prostate",args[9],"/",sep="")
> 
> 
> sname<-paste(dirloc,"Datasets/Prostate/Prostate.Rda",sep="")
> load(sname)
> 
> trainm<-Prostate$X
> testm<-Prostate$Xt
> trainclass<-Prostate$Y
> testclass<-Prostate$Yt
> 
> 
> 
> 
> 
> trainm<-cbind(trainclass,trainm)
> testm<-cbind(testclass,testm)
> 
> trainm<-na.omit(trainm)
> testm<-na.omit(testm)
> 
> 
> dir.create(outloc)
> setwd(outloc)
> 
> trainm<-as.matrix(trainm)
> testm<-as.matrix(testm)
> trainclass<-trainm[,1] #CMAres$modtrainclass
> testclass<-testm[,1] #CMAres$modtestclass
> trainm<-trainm[,-c(1)] #CMAres$modtrainmata
> testm<-testm[,-c(1)] #CMAres$modtestmata
> 
> #a: Confusions
> #b: Neighbors
> #c: Global
> #d: Death
> 
> a<-c(0.25,0.25,0.25,0.25)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0.25,0.25,0.5,0)
> d<-c(0.9,0.1,0,0.1)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.3,0.1,0.4,0.1)
> c<-c(0,0.5,0.5,0)
> d<-c(0.9,0.1,0,0)
> 
> a<-c(0,0.4,0.1,0.5)
> b<-c(0.2,0.3,0.4,0.1)
> c<-c(0,0.4,0.4,0.2)
> d<-c(0.9,0.1,0,0)
> 
> transition_matrix<-rbind(a,b,c,d)
> 
> 
> dir.create(outloc)
Warning message:
In dir.create(outloc) :
  '/Users/karanuppal/Documents/Gatech/Projects/Algorithms/TwostagePSO//Datasets/Prostate/OCFSvmay2415_Prostatevfeb817_v5C_2018_v10' already exists
> setwd(outloc)
> temp2=t(trainm)
> temp2=apply(temp2, 2, function(x){which(x=="MD")})
> temp2=unlist(temp2)
> temp2=unique(temp2)
> if(length(temp2)>1)
+ {
+ 	trainm=trainm[,-c(temp2)]
+ 
+ 	rm(temp2)
+ }
> 
> boostweight=rep(0,dim(trainm)[2])
> 
> #if(FALSE)
> {
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("limma"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("lasso"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("rfe"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("elasticnet"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ 
+ if(FALSE){
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("rf"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ }
+ 
+ CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("f.test"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
+ }
[1] "dim of trainm is "
[1]   61 6033
[1]   61 6033
[1] "length of factcols"
[1] 0
[1]   61 6033
[1]   41 6033
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
[1] 2 2 1 1
Levels: 1 2
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] -0.003043134 -1.127423770 -0.968790494
[1] "norm train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "mean of feat 2"
[1] -0.1220752
[1] "sd of feat 2"
[1] 1.164888
[1] "maxnum is "
[1] 3
[1] "# of genes left after filtering:"
[1]   61 6033
GeneSelection: iteration 1 

Attaching package: ‘limma’

The following object is masked from ‘package:BiocGenerics’:

    plotMA

GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 6033    1
[1] 6033
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  478  694 3647
                                    
[1,]  0.3523077  3.418485 -0.6064776
[2,] -0.8300460 -0.874537  2.1909283
[3,] -0.2684535 -0.495250  1.4493698
                                    
[1,]  2.8785633 -0.9573321 0.4494994
[2,] -0.8229654 -0.4752287 0.2482434
[3,] -0.4537037 -0.8832488 0.6337699
[1] "numgenes selected:3"
[1] "test acc:0.585365853658537"
[1] "test AUC acc:0.62625"
[1] "10 fold train81.9672131147541"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold  1  2
         1 33  8
         2  3 17
[1] "confusion matrix test"
         test_y
pred_test  1  2
        1 13 14
        2  3 11
[1] "train acc:0.819672131147541"
[1] "confusion matrix train"
          nci_y
pred_train  1  2
         1 33  8
         2  3 17
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   61 6033
[1]   61 6033
[1] "length of factcols"
[1] 0
[1]   61 6033
[1]   41 6033
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
[1] 2 2 1 1
Levels: 1 2
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] -0.003043134 -1.127423770 -0.968790494
[1] "norm train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "mean of feat 2"
[1] -0.1220752
[1] "sd of feat 2"
[1] 1.164888
[1] "maxnum is "
[1] 3
[1] "# of genes left after filtering:"
[1]   61 6033
GeneSelection: iteration 1 
Loaded glmnet 2.0-10


Attaching package: ‘glmnet’

The following object is masked from ‘package:pROC’:

    auc

GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
genelist
3647  914 3600 4073 4316 5159  610  702  735  966 1113 1491 1720 1979 2941 3002 
   8    6    6    4    4    4    2    2    2    2    2    2    2    2    2    2 
3208 4331 4538 5158 
   2    2    2    2 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 6033    1
[1] 6033
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  914 3600 3647
                                     
[1,] -0.6832863  2.9995593 -0.6064776
[2,]  1.7123557 -1.1621560  2.1909283
[3,]  1.0313727  0.4958446  1.4493698
                                    
[1,] -0.7478173 -0.9600797 0.4494994
[2,]  1.0224178 -1.1504606 0.2482434
[3,] -1.1491934  0.7498193 0.6337699
[1] "numgenes selected:3"
[1] "test acc:0.585365853658537"
[1] "test AUC acc:0.62625"
[1] "10 fold train77.0491803278689"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold  1  2
         1 31  3
         2  5 22
[1] "confusion matrix test"
         test_y
pred_test  1  2
        1 13 14
        2  3 11
[1] "train acc:0.868852459016393"
[1] "confusion matrix train"
          nci_y
pred_train  1  2
         1 31  3
         2  5 22
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   61 6033
[1]   61 6033
[1] "length of factcols"
[1] 0
[1]   61 6033
[1]   41 6033
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
[1] 2 2 1 1
Levels: 1 2
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] -0.003043134 -1.127423770 -0.968790494
[1] "norm train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "mean of feat 2"
[1] -0.1220752
[1] "sd of feat 2"
[1] 1.164888
[1] "maxnum is "
[1] 3
[1] "# of genes left after filtering:"
[1]   61 6033
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 6033    1
[1] 6033
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  694  735 3600
                                    
[1,]  3.418485  3.6118660  2.9995593
[2,] -0.874537 -0.8149619 -1.1621560
[3,] -0.495250 -0.8291011  0.4958446
                                     
[1,] -0.9573321 -0.8645951 -0.9600797
[2,] -0.4752287 -0.5544799 -1.1504606
[3,] -0.8832488 -0.8250375  0.7498193
[1] "numgenes selected:3"
[1] "test acc:0.48780487804878"
[1] "test AUC acc:0.535"
[1] "10 fold train73.7704918032787"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold  1  2
         1 35 11
         2  1 14
[1] "confusion matrix test"
         test_y
pred_test  1  2
        1 12 17
        2  4  8
[1] "train acc:0.80327868852459"
[1] "confusion matrix train"
          nci_y
pred_train  1  2
         1 35 11
         2  1 14
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   61 6033
[1]   61 6033
[1] "length of factcols"
[1] 0
[1]   61 6033
[1]   41 6033
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
[1] 2 2 1 1
Levels: 1 2
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] -0.003043134 -1.127423770 -0.968790494
[1] "norm train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "mean of feat 2"
[1] -0.1220752
[1] "sd of feat 2"
[1] 1.164888
[1] "maxnum is "
[1] 3
[1] "# of genes left after filtering:"
[1]   61 6033
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 6033    1
[1] 6033
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  914 3600 3647
                                     
[1,] -0.6832863  2.9995593 -0.6064776
[2,]  1.7123557 -1.1621560  2.1909283
[3,]  1.0313727  0.4958446  1.4493698
                                    
[1,] -0.7478173 -0.9600797 0.4494994
[2,]  1.0224178 -1.1504606 0.2482434
[3,] -1.1491934  0.7498193 0.6337699
[1] "numgenes selected:3"
[1] "test acc:0.585365853658537"
[1] "test AUC acc:0.62625"
[1] "10 fold train77.0491803278689"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold  1  2
         1 31  3
         2  5 22
[1] "confusion matrix test"
         test_y
pred_test  1  2
        1 13 14
        2  3 11
[1] "train acc:0.868852459016393"
[1] "confusion matrix train"
          nci_y
pred_train  1  2
         1 31  3
         2  5 22
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
[1] "dim of trainm is "
[1]   61 6033
[1]   61 6033
[1] "length of factcols"
[1] 0
[1]   61 6033
[1]   41 6033
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
[1] 2 2 1 1
Levels: 1 2
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] -0.003043134 -1.127423770 -0.968790494
[1] "norm train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "mean of feat 2"
[1] -0.1220752
[1] "sd of feat 2"
[1] 1.164888
[1] "maxnum is "
[1] 3
[1] "# of genes left after filtering:"
[1]   61 6033
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 6033    1
[1] 6033
[1] "DS index stage 1"
[1] NA
[1] "bestgenelist"
[1]  610 3600 3647
                                     
[1,] -0.9436425  2.9995593 -0.6064776
[2,]  1.1785517 -1.1621560  2.1909283
[3,] -1.3201326  0.4958446  1.4493698
                                    
[1,]  0.4530718 -0.9600797 0.4494994
[2,]  0.4364162 -1.1504606 0.2482434
[3,] -1.3101486  0.7498193 0.6337699
[1] "numgenes selected:3"
[1] "test acc:0.585365853658537"
[1] "test AUC acc:0.62625"
[1] "10 fold train78.6885245901639"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold  1  2
         1 33  5
         2  3 20
[1] "confusion matrix test"
         test_y
pred_test  1  2
        1 13 14
        2  3 11
[1] "train acc:0.868852459016393"
[1] "confusion matrix train"
          nci_y
pred_train  1  2
         1 33  5
         2  3 20
[1] "DS index stage 1"
[1] NA
[1] "KI index stage 1"
[1] NA
There were 32 warnings (use warnings() to see them)
> #1
> CMAres<-performCMA(trainm, trainclass, testm, testclass,outloc,
+ maxnum=as.numeric(args[10]),
+ minnum=3,
+ stepitr=1,
+ gsmethods=c("limma","lasso","rfe","elasticnet", "f.test"), #"lasso","elasticnet","kruskal.test"), #"f.test", "f.test", "elasticnet", "wilcox.test", "welch.test"),
+ pct_train=0.40,
+ accuracyweight=1,
+ featweight=0.06,
+ minpresent=1,
+ kname="radial",
+ norm_method="none",
+ tolerance=0.5,
+ maxitrs=5,
+ classindex=1,
+ numfacts=0,
+ evalmethod="CV",
+ numfolds=10,
+ CVfoldthresh=0.7,
+ varselmethod=args[11],
+ scheme_val="one-vs-all",
+ iter_learn=1,boostweight=rep(0,dim(trainm)[2]))
[1] "dim of trainm is "
[1]   61 6033
[1]   61 6033
[1] "length of factcols"
[1] 0
[1]   61 6033
[1]   41 6033
integer(0)
character(0)
NULL
[1] "ok"
[1] "test class"
[1] 2 2 1 1
Levels: 1 2
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "orig train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] -0.003043134 -1.127423770 -0.968790494
[1] "norm train matrix"
                                                                         
[1,] -0.54578123 -0.8516873 -0.003043134 -0.1220894  0.8379074 -1.1958825
[2,] -0.83575852  0.6291059 -1.127423770 -1.1274086 -0.1473340 -0.1643465
[3,] -0.84966959  0.4419918 -0.968790494 -0.9000653  0.6839473  1.2117126
[4,] -0.89063254 -0.8549236 -0.771034230 -0.5456977  2.9096575 -1.2019367
[5,]  0.03316544  3.1724275  1.123120513  0.7368656 -0.7237286 -1.1892243
                                                  
[1,] -0.9317487 -1.164679251 -0.5490455  3.8286631
[2,] -0.2824207  0.139743912 -0.8651916  1.6939603
[3,]  0.9594948  0.802991219  4.1367085  3.7328098
[4,]  1.5207587  0.980652255 -0.9775498  1.8656989
[5,] -0.7814362 -0.007724828 -0.3478894 -0.6713824
[1] "mean of feat 2"
[1] -0.1220752
[1] "sd of feat 2"
[1] 1.164888
[1] "maxnum is "
[1] 3
[1] "# of genes left after filtering:"
[1]   61 6033
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
genelist
3647  914 3600 4073 4316 5159  610  702  735  966 1113 1491 1720 1979 2941 3002 
   8    6    6    4    4    4    2    2    2    2    2    2    2    2    2    2 
3208 4331 4538 5158 
   2    2    2    2 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
GeneSelection: iteration 1 
GeneSelection: iteration 2 
GeneSelection: iteration 3 
GeneSelection: iteration 4 
GeneSelection: iteration 5 
GeneSelection: iteration 6 
GeneSelection: iteration 7 
GeneSelection: iteration 8 
GeneSelection: iteration 9 
GeneSelection: iteration 10 
[1] "varselmethod"
[1] "none"
[1] "dim of scoring matrix is "
[1] 6033    5
[1] 6033
[1] "DS index stage 1"
[1] 0.4666667
[1] "bestgenelist"
[1]  478  610  694  735  914 3600 3647
                                                                     
[1,]  0.3523077 -0.9436425  3.418485  3.6118660 -0.6832863  2.9995593
[2,] -0.8300460  1.1785517 -0.874537 -0.8149619  1.7123557 -1.1621560
[3,] -0.2684535 -1.3201326 -0.495250 -0.8291011  1.0313727  0.4958446
               
[1,] -0.6064776
[2,]  2.1909283
[3,]  1.4493698
                                                                      
[1,]  2.8785633  0.4530718 -0.9573321 -0.8645951 -0.7478173 -0.9600797
[2,] -0.8229654  0.4364162 -0.4752287 -0.5544799  1.0224178 -1.1504606
[3,] -0.4537037 -1.3101486 -0.8832488 -0.8250375 -1.1491934  0.7498193
              
[1,] 0.4494994
[2,] 0.2482434
[3,] 0.6337699
[1] "numgenes selected:7"
[1] "test acc:0.682926829268293"
[1] "test AUC acc:0.68375"
[1] "10 fold train86.8852459016394"
[1] "confusion matrix train 10 fold"
          nci_y
pred10fold  1  2
         1 34  2
         2  2 23
[1] "confusion matrix test"
         test_y
pred_test  1  2
        1 11  8
        2  5 17
[1] "train acc:0.934426229508197"
[1] "confusion matrix train"
          nci_y
pred_train  1  2
         1 34  2
         2  2 23
[1] "DS index stage 1"
[1] 0.4666667
[1] "KI index stage 1"
[1] 0.7332007
[[1]]
[1] "var478"  "var694"  "var3647"

[[2]]
[1] "var914"  "var3600" "var3647"

[[3]]
[1] "var694"  "var735"  "var3600"

[[4]]
[1] "var914"  "var3600" "var3647"

[[5]]
[1] "var610"  "var3600" "var3647"


 Iteration 1 :  Optimal value:  6 
 Optimal List:   var3600,var694,var3647 

 Iteration 2 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 3 :  Optimal value:  6 
 Optimal List:   var914,var3600,var694 

 Iteration 4 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 5 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 6 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 7 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 8 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 9 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 10 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 
[1] "test acc rank aggreg CE:0.585365853658537"
[1] "test AUC acc rank aggreg CE:0.62625"
[1] "10 fold train rank aggreg res CE78.6885245901639"
[1] "confusion matrix train 10 fold rank aggreg CE"
            nci_y
pred10foldRA  1  2
           1 31  3
           2  5 22
[1] "Num itr RA CE"
[1] 10
[1] "Test BER aggreg CE is"
[1] 0.62625

 Iteration 1 :  Optimal value:  5.6 
 Optimal List:   var694,var3600,var3647 

 Iteration 2 :  Optimal value:  5.6 
 Optimal List:   var694,var3600,var3647 

 Iteration 3 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 4 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 5 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 6 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 7 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 8 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 9 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 10 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 11 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 12 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 13 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 14 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 15 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 16 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 17 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 18 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 19 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 20 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 21 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 22 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 23 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 24 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 25 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 26 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 27 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 28 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 29 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 30 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 31 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 

 Iteration 32 :  Optimal value:  5.2 
 Optimal List:   var914,var3600,var3647 
[1] "test acc rank aggreg GA:0.585365853658537"
[1] "test AUC acc rank aggreg GA:0.62625"
[1] "10 fold train rank aggreg res GA78.6885245901639"
[1] "confusion matrix train 10 fold rank aggreg GA"
            nci_y
pred10foldRA  1  2
           1 31  3
           2  5 22
[1] "Num itr RA GA"
[1] 33
[1] "Test BER aggreg GA is"
[1] 0.62625
Warning messages:
1: In if (is.na(boostweight) == TRUE) { :
  the condition has length > 1 and only the first element will be used
2: In if (is.na(testm) == TRUE) { :
  the condition has length > 1 and only the first element will be used
3: In if (is.na(testclass) == TRUE) { :
  the condition has length > 1 and only the first element will be used
> 
> cma_feat_list<-colnames(trainm)
> 
> save(CMAres,file="CMAres.Rda")
> write.table(cma_feat_list,file="selected_cma_feat_list.txt",sep="t",row.names=FALSE)
> 
> # modtraindata=modtrain, modtestdata=modtest, blindtest=testacc, modtrainclass=nci_y, modtestclass=test_y
> #if(FALSE)
> {
+ trainm<-CMAres$modtraindata
+ testm<-CMAres$modtestdata
+ trainclass<-CMAres$modtrainclass
+ testclass<-CMAres$modtestclass
+ learningsets<-CMAres$learningsets
+ }
> 
> if(FALSE)
+ {
+ trainclass<-trainm[,1] #CMAres$modtrainclass
+ testclass<-testm[,1] #CMAres$modtestclass
+ trainm<-trainm[,-c(1)] #CMAres$modtrainmata
+ testm<-testm[,-c(1)] #CMAres$modtestmata
+ 
+ }
> 
> d_dim<-dim(trainm)
> 
> print("Original dimension")
[1] "Original dimension"
> print(d_dim)
[1] 61  7
> 
> system.time(psores<-run_pso(outloc=outloc,trainm,trainclass,testm,testclass,transition_matrix,c1=2.05,
+ c2=2.05,
+ itr=10,
+ globalpso_maxitr=10,
+ global_max_itr=10,
+ num_part=20,
+ kname="radial",
+ errortype="BER",
+ weightA<-as.numeric(args[1]),
+ weightB<-as.numeric(args[2]),
+ weightC<-as.numeric(args[3]),
+ weightD<-as.numeric(args[4]),
+ featweight.max=0.1,
+ featweight.min=0.01,
+ numfolds=10,
+ followerprob=as.numeric(args[6]),
+ confusionprob=as.numeric(args[7]),
+ leaderprob=as.numeric(args[8]),
+ wmax=1,
+ wmin=0.1,
+ behavior_reset_itr=5,
+ maxitrreset=10,
+ num_neighbors=3,
+ minselect.pct=0.5,
+ evalMode="CV2",
+ minfitnessthresh=50,
+ maxnum=as.numeric(args[10]),minnum=3,inertia_method=args[5],particlebehav_method="randbased",constriction_factor=1,
+ select.global.best=TRUE,numnodes=4,evalFunc=eval_fit_kfold_diff,itr.terminate=FALSE,train.pct=0.8))
[1] "c1: 2.05"
[1] "c2: 2.05"
[1] "itr: 10"
[1] "globalpso_maxitr: 10"
[1] "global_max_itr: 10"
[1] "num_part: 20"
[1] "kname: radial"
[1] "errortype: BER"
[1] "weightA: 0.7"
[1] "weightB: 0.2"
[1] "weightC: 0.05"
[1] "weightD: 0.05"
[1] "featweight.max: 0.1"
[1] "featweight.min: 0.01"
[1] "numfolds: 10"
[1] "followerprob: 0.45"
[1] "confusionprob: 0.2"
[1] "leaderprob: 0.25"
[1] "wmax: 1"
[1] "wmin: 0.1"
[1] "behavior_reset_itr: 5"
[1] "maxitrreset: 10"
[1] "num_neighbors: 3"
[1] "minselect.pct: 0.5"
[1] "minfitnessthresh: 50"
[1] "maxnum: 3"
[1] "minnum: 3"
[1] "inertia_method: global"
[1] "particlebehav_method: randbased"
[1] "constriction_factor: 1"
[1] "select.global.best: TRUE"
[1] "train 10 fold"
[1] 88.52459
[1] "here"
[1] "s"
[1] 48.8
[1] 61  7
[1] 10
[1] "learning sets: 1"
 [1] 33 53 59 24 17 35  8 14 47  4 30 16 38  7 10 51 52 60 27 43  6 39 46 20  9
[26] 11 32 37 12 22 31 25 36 54 21 55 44  3 34 57 29 49 18 58 19 13 40 48
[1] "Starting global iteration number : 1"
[1] "iteration number: "
[1] 1
[1] "iteration number: "
[1] 2
[1] "iteration number: "
[1] 3
[1] "iteration number: "
[1] 4
[1] "iteration number: "
[1] 5
[1] "iteration number: "
[1] 6
[1] "iteration number: "
[1] 7
[1] "iteration number: "
[1] 8
[1] "iteration number: "
[1] 9
[1] "iteration number: "
[1] 10
[1] "iteration number: "
[1] 11
[1] "iteration number: "
[1] 12
[1] "iteration number: "
[1] 13
[1] "iteration number: "
[1] 14
[1] "iteration number: "
[1] 15
[1] "iteration number: "
[1] 16
[1] "iteration number: "
[1] 17
[1] "iteration number: "
[1] 18
[1] "iteration number: "
[1] 19
[1] "iteration number: "
[1] 20
[1] "iteration number: "
[1] 21
[1] "iteration number: "
[1] 22
[1] "iteration number: "
[1] 23
[1] "iteration number: "
[1] 24
[1] "iteration number: "
[1] 25
[1] "iteration number: "
[1] 26
[1] "iteration number: "
[1] 27
[1] "iteration number: "
[1] 28
[1] "iteration number: "
[1] 29
[1] "iteration number: "
[1] 30
[1] "iteration number: "
[1] 31
[1] "iteration number: "
[1] 32
[1] "iteration number: "
[1] 33
[1] "iteration number: "
[1] 34
[1] "iteration number: "
[1] 35
[1] "iteration number: "
[1] 36
[1] "iteration number: "
[1] 37
[1] "iteration number: "
[1] 38
[1] "iteration number: "
[1] 39
[1] "iteration number: "
[1] 40
[1] "iteration number: "
[1] 41
[1] "iteration number: "
[1] 42
[1] "iteration number: "
[1] 43
[1] "iteration number: "
[1] 44
[1] "iteration number: "
[1] 45
[1] "iteration number: "
[1] 46
[1] "iteration number: "
[1] 47
[1] "iteration number: "
[1] 48
[1] "iteration number: "
[1] 49
[1] "iteration number: "
[1] 50
[1] "iteration number: "
[1] 51
[1] "iteration number: "
[1] 52
[1] "iteration number: "
[1] 53
[1] "iteration number: "
[1] 54
[1] "iteration number: "
[1] 55
[1] "iteration number: "
[1] 56
[1] "iteration number: "
[1] 57
[1] "iteration number: "
[1] 58
[1] "iteration number: "
[1] 59
[1] "iteration number: "
[1] 60
[1] "iteration number: "
[1] 61
[1] "iteration number: "
[1] 62
[1] "iteration number: "
[1] 63
[1] "iteration number: "
[1] 64
[1] "iteration number: "
[1] 65
[1] "iteration number: "
[1] 66
[1] "iteration number: "
[1] 67
[1] "iteration number: "
[1] 68
[1] "iteration number: "
[1] 69
[1] "iteration number: "
[1] 70
[1] "iteration number: "
[1] 71
[1] "iteration number: "
[1] 72
[1] "iteration number: "
[1] 73
[1] "iteration number: "
[1] 74
[1] "iteration number: "
[1] 75
[1] "iteration number: "
[1] 76
[1] "iteration number: "
[1] 77
[1] "iteration number: "
[1] 78
[1] "iteration number: "
[1] 79
[1] "iteration number: "
[1] 80
[1] "iteration number: "
[1] 81
[1] "iteration number: "
[1] 82
[1] "iteration number: "
[1] 83
[1] "iteration number: "
[1] 84
[1] "iteration number: "
[1] 85
[1] "iteration number: "
[1] 86
[1] "iteration number: "
[1] 87
[1] "iteration number: "
[1] 88
[1] "iteration number: "
[1] 89
[1] "iteration number: "
[1] 90
[1] "iteration number: "
[1] 91
[1] "iteration number: "
[1] 92
[1] "iteration number: "
[1] 93
[1] "iteration number: "
[1] 94
[1] "iteration number: "
[1] 95
[1] "iteration number: "
[1] 96
[1] "iteration number: "
[1] 97
[1] "iteration number: "
[1] 98
